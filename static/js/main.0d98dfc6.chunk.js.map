{"version":3,"sources":["components/layout/container.tsx","components/misc/alert.tsx","components/app/appHeader.tsx","components/app/index.tsx","index.tsx","utils/index.ts","utils/gameMode.ts","utils/constants.ts","utils/dataSource.ts","utils/dataTypes.ts","components/gameRecords/model.tsx","components/gameRecords/routeSync.tsx","components/gameRecords/dataAdapterProvider.tsx","components/gameRecords/table.tsx","components/form/checkboxGroup.tsx","components/form/datePicker.tsx","components/form/formRow.tsx","components/gameRecords/filterPanel.tsx","components/gameRecords/playerDetails.tsx","components/gameRecords/routes.tsx","components/misc/scroller.tsx","components/gameRecords/player.tsx"],"names":["Container","_ref","_ref$title","title","undefined","_ref$children","children","_ref$fluid","fluid","react_default","a","createElement","className","concat","Alert","_ref$className","_ref$type","type","_ref$container","container","React","Fragment","_ref$stateName","stateName","stateKey","_useState","useState","localStorage","getItem","_useState2","Object","slicedToArray","closed","setClosed","useEffect","setItem","Cont","role","data-dismiss","aria-label","onClick","event","preventDefault","triggerRelayout","aria-hidden","AppHeader","container_Container","react_router_dom","to","href","App","scroller","routes","rootElement","document","getElementById","render","react","app","requestAnimationFrame","window","dispatchEvent","UIEvent","setTimeout","scrollToTop","scrollTo","__webpack_require__","d","__webpack_exports__","formatPercent","x","toFixed","GameMode","NUMBER_OF_GAME_MODE","keys","filter","length","API_ROOT","ApiGet","_callee8","path","resp","regenerator_default","wrap","_context8","prev","next","fetch","sent","ok","json","abrupt","stop","ListingDataLoader","date","classCallCheck","this","_date","moment","startOf","valueOf","skip","limit","cacheTag","PlayerDataLoader","playerId","_playerId","ListingDataProvider","freeze","create","_DataProvider","PlayerDataProvider","loader","itemsPerChunk","arguments","_loader","_metadata","_countPromise","_chunks","_itemsPerChunk","_filterPredicate","_filteredIndices","_filterResultCache","predicate","updateFilteredIndices","metadata","getMetadataSync","count","numShownItems","numLoadedItems","indices","i","chunk","Math","floor","Promise","push","game","result","uuid","_triggerFullLoad","getCount","getCountMaybeSync","getMetadata","then","_this","resolve","index","mappedIndex","_mapItemIndex","chunkNumber","_this2","skipPreload","innerIndex","_getChunk","preload","requestedIndex","reversed","chunkIndex","_loadChunk","numChunks","ceil","console","warn","getRecords","toString","LEVEL_MAX_POINTS","RANK_LABELS","RANK_COLORS","GameRecord","getRankIndexByPlayer","rec","player","accountId","sortedPlayers","players","map","sort","b","score","getPlayerRankLabel","getPlayerRankColor","encodeAccountId","t","formatFullStartTime","startTime","format","getRecordLink","trailer","parseInt","Level","levelId","_home_travis_build_SAPikachu_amae_koromo_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_majorRank","_minorRank","realId","label","getMaxPoint","majorRank","minorRank","maxPoints","level","getNextLevel","getStartingPoint","getPreviousLevel","getTag","getLevelTag","LevelWithDelta","obj","id","formatWithAdjustedScore","delta","Model","toPlain","model","objectSpread","selectedModes","Array","from","fromPlain","searchText","Set","DEFAULT_MODEL","ModelContext","createContext","version","useModel","useContext","isChanged","oldModel","newProps","isSame","newSelectedModes","size","set","other","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","elem","value","has","err","return","isSameSet","ModelProvider","location","useLocation","_useReducer","useReducer","normalizeUpdate","pendingRouteUpdate","state","Date","getTime","_useReducer2","updateModel","useMemo","Provider","ModelBuilders","params","listing","isValid","modes","split","trim","search","RouteSync","view","useParams","_useModel","_useModel2","pathname","react_router","modelResult","newModel","newPath","generatePath","loadingPlaceholder","loading","DUMMY_DATA_ADAPTER","noop","DataAdapter","provider","onDataUpdate","_provider","_onDataUpdate","_triggeredRequest","promise","_callHook","bind","maybeCount","_installHook","getUnfilteredCountSync","isItemLoaded","hook","DataAdapterContext","useDataAdapter","Consumer","DataAdapterProvider","dataProviders","searchPredicate","needPredicate","modeId","some","nickname","toLowerCase","indexOf","usePredicate","dataProvider","key","Error","getProviderKey","createProvider","_useState3","_useState4","dataAdapter","setDataAdapter","refreshDataAdapter","useCallback","setFilterPredicate","adapter","cancelUpdateHook","setUpdateHook","Players","memo","activePlayerId","isActive","cellFormatTime","_ref2","cellData","unix","cellFormatFullTime","_ref3","rowData","cellFormatRank","_ref4","columnData","style","color","slice","cellFormatGameMode","_ref5","GameRecordTable","_ref6","_ref6$showStartEnd","showStartEnd","_ref6$showFullTime","showFullTime","data","scrollerProps","useScrollerProps","isScrolling","onChildScroll","scrollTop","height","registerChild","rowGetter","_ref7","getRowClassName","_ref8","clsx","even","noRowsRenderer","getUnfilteredCount","cellRenderPlayer","_ref9","unfilteredCount","Loadable","preloadAll","ref","AutoSizer","disableHeight","_ref10","width","Table","autoHeight","rowCount","rowHeight","matchMedia","matches","headerHeight","onScroll","rowClassName","dataKey","cellRenderer","flexGrow","headerClassName","CheckboxGroup","_ref$items","items","_ref$selectedItemKeys","selectedItemKeys","_ref$groupKey","groupKey","_ref$onChange","onChange","setSelected","isSelected","newSet","add","delete","item","checked","currentTarget","htmlFor","DatePicker","_ref$date","_","_ref$min","min","_ref$max","max","handleChange","e","FormRow","MODE_CHECKBOXES","String","DEFAULT_DATE","FilterPanel","updateSearchTextFromEvent","setSelectedItems","setDate","formRow_FormRow","RankRateChart","all","RecentRankChart","PlayerDetails","aspect","avg_rank","negative_rate","PLAYER_PATH","PATH","genPath","join","Routes","exact","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_virtualized_dist_es_WindowScroller__WEBPACK_IMPORTED_MODULE_1__","ScrollerContext","Scroller","Player","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_icons_io__WEBPACK_IMPORTED_MODULE_2__","_utils_dataSource__WEBPACK_IMPORTED_MODULE_3__","_routes__WEBPACK_IMPORTED_MODULE_4__","hideDetailLink","isTop","target"],"mappings":"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","file":"static/js/main.0d98dfc6.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\";\r\n\r\nexport const Container = ({ title = undefined, children = undefined as ReactNode, fluid = false }) => (\r\n  <div className={`my-5 container${fluid ? \"-fluid\" : \"\"}`}>\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-12\">\r\n        {title && <h2 className=\"mb-4\">{title}</h2>}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import { useState, useEffect, ReactNode } from \"react\";\r\nimport React from \"react\";\r\nimport { ReactComponentLike } from \"prop-types\";\r\nimport { triggerRelayout } from '../../utils/index';\r\n\r\nexport function Alert({\r\n  className = \"\",\r\n  type = \"info\",\r\n  container = React.Fragment as ReactComponentLike,\r\n  stateName = \"\",\r\n  children = undefined as ReactNode\r\n}) {\r\n  const stateKey = `alertState_${stateName}`;\r\n  const [closed, setClosed] = useState(\r\n    () => stateName && !!localStorage.getItem(stateKey)\r\n  );\r\n  useEffect(() => {\r\n    if (stateName && closed) {\r\n      localStorage.setItem(stateKey, \"true\");\r\n    }\r\n  }, [closed, stateName, stateKey]);\r\n  if (closed) {\r\n    return null;\r\n  }\r\n  const Cont = container;\r\n  return (\r\n    <Cont>\r\n      <div\r\n        className={`alert alert-${type} alert-dismissible fade show ${className}`}\r\n        role=\"alert\"\r\n      >\r\n        {children}\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n          onClick={event => {\r\n            event.preventDefault();\r\n            setClosed(true);\r\n            triggerRelayout();\r\n          }}\r\n        >\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n      </div>\r\n    </Cont>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { Alert } from \"../misc/alert\";\r\n\r\nexport function AppHeader() {\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <h1>\r\n          <Link to=\"/\">雀魂牌谱屋</Link>\r\n        </h1>\r\n      </Container>\r\n      <Alert container={Container} stateName=\"topNote\">\r\n        <h4>说明</h4>\r\n        <ul>\r\n          <li>本页面由第三方维护，与雀魂官方无关。</li>\r\n          <li>记录包含雀魂国服四人半庄段位战玉之间及王座之间的牌谱。</li>\r\n          <li>\r\n            正常情况下全部对局都会被记录，但不排除因网络问题遗漏部分对局的情况。另 2019 年 10 月 10 日前因程序 Bug\r\n            每天晚间可能遗漏掉 10% ~ 20% 的对局，此 Bug 目前已经修复。\r\n          </li>\r\n          <li>页面不是实时更新，对局一般会在结束后二十分钟内出现。</li>\r\n          <li>\r\n            如有问题或建议，请戳 <a href=\"mailto:i@sapika.ch\">SAPikachu (i@sapika.ch)</a> 或{\" \"}\r\n            <a href=\"https://github.com/SAPikachu/amae-koromo/\">提交 Issue</a>。\r\n          </li>\r\n        </ul>\r\n      </Alert>\r\n      <Alert container={Container} stateName=\"changeLog20191025\">\r\n        <h4>最近更新（2019-10-25）</h4>\r\n        <ul>\r\n          <li>新增玩家信息页面</li>\r\n        </ul>\r\n      </Alert>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Scroller from \"../misc/scroller\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { AppHeader } from \"./appHeader\";\r\nimport GameRecords from \"../gameRecords\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Scroller>\r\n        <AppHeader />\r\n        <Container>\r\n          <GameRecords />\r\n        </Container>\r\n      </Scroller>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-virtualized/styles.css\";\nimport \"./styles.css\";\n\nimport App from \"./components/app\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement)\n","export function triggerRelayout() {\r\n  requestAnimationFrame(() => window.dispatchEvent(new UIEvent(\"resize\")));\r\n  setTimeout(function() {\r\n    window.dispatchEvent(new UIEvent(\"resize\"));\r\n  }, 200);\r\n}\r\nexport function scrollToTop() {\r\n  window.scrollTo(0, 0);\r\n  requestAnimationFrame(() => window.scrollTo(0, 0));\r\n}\r\nexport const formatPercent = (x: any) => (x > 0 ? `${(x * 100).toFixed(2)}%` : \"\");\r\n","enum GameMode {\r\n  王座 = 16,\r\n  玉 = 12\r\n}\r\nexport default GameMode;\r\nexport const NUMBER_OF_GAME_MODE = Object.keys(GameMode).filter(\r\n  x => typeof GameMode[x as keyof typeof GameMode] === \"number\"\r\n).length;\r\n","export const DATA_ROOT = \"https://d2ek5tscv4zquv.cloudfront.net/\";\r\nexport const API_ROOT = `${DATA_ROOT}api/`;\r\n","import moment from \"moment\";\r\n\r\nimport { API_ROOT } from \"./constants\";\r\nimport { GameRecord, Metadata, PlayerMetadata } from \"./dataTypes\";\r\n\r\nexport { default as GameMode, NUMBER_OF_GAME_MODE } from \"./gameMode\";\r\nexport * from \"./dataTypes\";\r\n\r\nasync function ApiGet<T>(path: string) {\r\n  const resp = await fetch(API_ROOT + path);\r\n  if (!resp.ok) {\r\n    throw resp;\r\n  }\r\n  return (await resp.json()) as T;\r\n}\r\n\r\ninterface DataLoader<T extends Metadata> {\r\n  getMetadata(): Promise<T>;\r\n  getRecords(skip: number, limit: number, cacheTag?: string): Promise<GameRecord[]>;\r\n}\r\n\r\nclass ListingDataLoader implements DataLoader<Metadata> {\r\n  _date: moment.Moment;\r\n  constructor(date: moment.MomentInput) {\r\n    this._date = moment(date).startOf(\"day\");\r\n  }\r\n  async getMetadata(): Promise<Metadata> {\r\n    return await ApiGet<Metadata>(`count/${this._date.valueOf()}`);\r\n  }\r\n  async getRecords(skip: number, limit: number, cacheTag = \"\"): Promise<GameRecord[]> {\r\n    return await ApiGet<GameRecord[]>(`games/${this._date.valueOf()}?skip=${skip}&limit=${limit}&tag=${cacheTag}`);\r\n  }\r\n}\r\n\r\nclass PlayerDataLoader implements DataLoader<PlayerMetadata> {\r\n  _playerId: string;\r\n  constructor(playerId: string) {\r\n    this._playerId = playerId;\r\n  }\r\n  async getMetadata(): Promise<PlayerMetadata> {\r\n    return await ApiGet<PlayerMetadata>(`player_stats/${this._playerId}`);\r\n  }\r\n  async getRecords(skip: number, limit: number, cacheTag = \"\"): Promise<GameRecord[]> {\r\n    return await ApiGet<GameRecord[]>(`player_records/${this._playerId}?skip=${skip}&limit=${limit}&tag=${cacheTag}`);\r\n  }\r\n}\r\n\r\nexport type FilterPredicate = ((record: GameRecord) => boolean) | null;\r\nexport type ListingDataProvider = _DataProvider<ListingDataLoader>;\r\nexport const ListingDataProvider = Object.freeze({\r\n  create(date: moment.MomentInput): ListingDataProvider {\r\n    return new _DataProvider<ListingDataLoader>(new ListingDataLoader(date));\r\n  }\r\n});\r\nexport type PlayerDataProvider = _DataProvider<PlayerDataLoader>;\r\nexport const PlayerDataProvider = Object.freeze({\r\n  create(playerId: string): PlayerDataProvider {\r\n    return new _DataProvider<PlayerDataLoader>(new PlayerDataLoader(playerId));\r\n  }\r\n});\r\nexport type DataProvider = ListingDataProvider | PlayerDataProvider;\r\nclass _DataProvider<\r\n  TLoader extends DataLoader<TMetadata>,\r\n  TMetadata extends Metadata = TLoader extends DataLoader<infer T> ? T : Metadata\r\n> {\r\n  _loader: TLoader;\r\n  _metadata: TMetadata | Promise<TMetadata> | null;\r\n  _countPromise: Promise<number> | null;\r\n  _chunks: (GameRecord[] | Promise<GameRecord[]>)[];\r\n  _itemsPerChunk: number;\r\n  _filterPredicate: FilterPredicate;\r\n  _filteredIndices: number[] | null;\r\n  _filterResultCache: { [uuid: string]: boolean };\r\n\r\n  constructor(loader: TLoader, itemsPerChunk = 100) {\r\n    this._loader = loader;\r\n    this._metadata = null;\r\n    this._countPromise = null;\r\n    this._chunks = [];\r\n    this._itemsPerChunk = itemsPerChunk;\r\n    this._filterPredicate = null;\r\n    this._filteredIndices = null;\r\n    this._filterResultCache = {};\r\n  }\r\n  setFilterPredicate(predicate: FilterPredicate) {\r\n    if (this._filterPredicate === predicate) {\r\n      return;\r\n    }\r\n    this._filterPredicate = predicate;\r\n    this._filterResultCache = {};\r\n    this.updateFilteredIndices();\r\n  }\r\n  updateFilteredIndices() {\r\n    this._filteredIndices = null;\r\n    if (!this._filterPredicate) {\r\n      return;\r\n    }\r\n    const metadata = this.getMetadataSync();\r\n    if (!metadata) {\r\n      return;\r\n    }\r\n    const count = metadata.count;\r\n    let numShownItems = 0;\r\n    let numLoadedItems = 0;\r\n    const indices = [];\r\n    for (let i = 0; i < count; i++) {\r\n      const chunk = this._chunks[Math.floor(i / this._itemsPerChunk)];\r\n      if (!chunk || chunk instanceof Promise) {\r\n        indices.push(i);\r\n        continue;\r\n      }\r\n      numLoadedItems++;\r\n      const game = chunk[i % this._itemsPerChunk];\r\n      let result = this._filterResultCache[game.uuid];\r\n      if (result === undefined) {\r\n        this._filterResultCache[game.uuid] = result = this._filterPredicate(game);\r\n      }\r\n      if (result) {\r\n        indices.push(i);\r\n        numShownItems++;\r\n      }\r\n    }\r\n    this._filteredIndices = indices;\r\n    if (numShownItems < 10 && numLoadedItems >= this._itemsPerChunk) {\r\n      this._triggerFullLoad();\r\n    }\r\n  }\r\n  getMetadataSync(): TMetadata | null {\r\n    return this._metadata && !(this._metadata instanceof Promise) ? this._metadata : null;\r\n  }\r\n  getCountMaybeSync(): number | Promise<number> {\r\n    let metadata = this.getMetadataSync();\r\n    if (metadata) {\r\n      return this._filteredIndices ? this._filteredIndices.length : metadata.count;\r\n    }\r\n    return this.getCount();\r\n  }\r\n  async getCount(): Promise<number> {\r\n    let metadata = this.getMetadataSync();\r\n    if (metadata) {\r\n      return this.getCountMaybeSync();\r\n    }\r\n    if (this._countPromise) {\r\n      return this._countPromise;\r\n    }\r\n    if (!this._metadata) {\r\n      this._metadata = this._loader.getMetadata().then(metadata => {\r\n        this._metadata = metadata;\r\n        this.updateFilteredIndices();\r\n        this._countPromise = null;\r\n        return metadata;\r\n      });\r\n    }\r\n    this._countPromise = Promise.resolve(this._metadata).then(() => this.getCountMaybeSync());\r\n    return this._countPromise;\r\n  }\r\n  getUnfilteredCountSync(): number | null {\r\n    const metadata = this.getMetadataSync();\r\n    if (!metadata) {\r\n      return null;\r\n    }\r\n    return metadata.count;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    const mappedIndex = this._mapItemIndex(index);\r\n    if (mappedIndex === null) {\r\n      return false;\r\n    }\r\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\r\n    return !!this._chunks[chunkNumber] && !(this._chunks[chunkNumber] instanceof Promise);\r\n  }\r\n  getItem(index: number, skipPreload = false): GameRecord | Promise<GameRecord> {\r\n    const mappedIndex = this._mapItemIndex(index);\r\n    if (mappedIndex === null) {\r\n      return this.getCount().then(() => this.getItem(index));\r\n    }\r\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\r\n    const innerIndex = mappedIndex % this._itemsPerChunk;\r\n    const chunk = this._chunks[chunkNumber];\r\n    if (!chunk || chunk instanceof Promise) {\r\n      return this._getChunk(chunkNumber).then(chunk => chunk[innerIndex]);\r\n    }\r\n    if (!skipPreload && !this._filteredIndices) {\r\n      this.preload(index + this._itemsPerChunk);\r\n    }\r\n    return chunk[innerIndex];\r\n  }\r\n  preload(index: number) {\r\n    const count = this.getCountMaybeSync();\r\n    if (count instanceof Promise) {\r\n      return;\r\n    }\r\n    if (index >= count) {\r\n      return;\r\n    }\r\n    this.getItem(index, true);\r\n  }\r\n  _mapItemIndex(requestedIndex: number): number | null {\r\n    const count = this.getCountMaybeSync();\r\n    if (count instanceof Promise) {\r\n      return null;\r\n    }\r\n    if (requestedIndex < 0) {\r\n      return null;\r\n    }\r\n    // Descending order\r\n    const reversed = count - requestedIndex - 1;\r\n    if (reversed < 0) {\r\n      return null;\r\n    }\r\n    return this._filteredIndices ? this._filteredIndices[reversed] : reversed;\r\n  }\r\n  async _getChunk(chunkIndex: number): Promise<GameRecord[]> {\r\n    if (!this._chunks[chunkIndex]) {\r\n      this._chunks[chunkIndex] = this._loadChunk(chunkIndex);\r\n    }\r\n    return this._chunks[chunkIndex];\r\n  }\r\n  _triggerFullLoad() {\r\n    const count = this.getCountMaybeSync();\r\n    if (typeof count !== \"number\") {\r\n      return;\r\n    }\r\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\r\n    for (let i = 0; i < numChunks; i++) {\r\n      if (this._chunks[i]) {\r\n        continue;\r\n      }\r\n      this._getChunk(i);\r\n    }\r\n  }\r\n  async _loadChunk(chunkIndex: number): Promise<GameRecord[]> {\r\n    const count = await this.getCount();\r\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\r\n    if (!numChunks) {\r\n      return [];\r\n    }\r\n    if (chunkIndex >= numChunks) {\r\n      console.warn(`Loading out-of-index chunk: ${chunkIndex}, number of items: ${count}`);\r\n      return [];\r\n    }\r\n    const chunk = await this._loader.getRecords(\r\n      this._itemsPerChunk * chunkIndex,\r\n      this._itemsPerChunk,\r\n      chunkIndex === numChunks - 1 ? count.toString() : \"\"\r\n    );\r\n    if (chunk.length < this._itemsPerChunk && chunkIndex < numChunks - 1) {\r\n      console.warn(\"Unexpected number of items in chunk:\", chunk.length);\r\n    }\r\n    this._chunks[chunkIndex] = chunk;\r\n    this.updateFilteredIndices();\r\n    return chunk;\r\n  }\r\n}\r\n","import moment from \"moment\";\n\nimport GameMode from \"./gameMode\";\n\nexport const PLAYER_RANKS = \"初士杰豪圣魂\";\nexport const LEVEL_MAX_POINTS = [20, 80, 200, 600, 800, 1000, 1200, 1400, 2000, 2800, 3200, 3600, 4000, 6000, 9000];\nexport const RANK_LABELS = [\"一位\", \"二位\", \"三位\", \"四位\"];\nexport const RANK_COLORS = [\"#28a745\", \"#17a2b8\", \"#6c757d\", \"#dc3545\"];\n\nexport interface PlayerRecord {\n  accountId: number;\n  nickname: string;\n  level: number;\n  score: number;\n}\nexport interface GameRecord {\n  modeId: GameMode;\n  uuid: string;\n  startTime: number;\n  endTime: number;\n  players: PlayerRecord[];\n}\nexport const GameRecord = Object.freeze({\n  getRankIndexByPlayer: function(rec: GameRecord, player: number | string | PlayerRecord): number {\n    const playerId = (typeof player === \"object\" ? player.accountId : player).toString();\n    const sortedPlayers = rec.players.map((player, index) => ({ player, index }));\n    sortedPlayers.sort((a, b) => 5 - b.index + b.player.score - (5 - a.index + a.player.score));\n    for (let i = 0; i < sortedPlayers.length; i++) {\n      if (sortedPlayers[i].player.accountId.toString() === playerId) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  getPlayerRankLabel: function(rec: GameRecord, player: number | string | PlayerRecord): string {\n    return RANK_LABELS[GameRecord.getRankIndexByPlayer(rec, player)] || \"\";\n  },\n  getPlayerRankColor: function(rec: GameRecord, player: number | string | PlayerRecord): string {\n    return RANK_COLORS[GameRecord.getRankIndexByPlayer(rec, player)];\n  },\n  encodeAccountId: (t: number) => 1358437 + ((7 * t + 1117113) ^ 86216345),\n  formatFullStartTime: (rec: GameRecord) => moment(rec.startTime * 1000).format(\"YYYY/M/D HH:mm\"),\n  getRecordLink: function(rec: GameRecord, player?: PlayerRecord | number | string) {\n    const playerId = typeof player === \"object\" ? player.accountId : player;\n    const trailer = playerId\n      ? `_a${GameRecord.encodeAccountId(typeof playerId === \"number\" ? playerId : parseInt(playerId))}`\n      : \"\";\n    return `https://www.majsoul.com/1/?paipu=${rec.uuid}${trailer}`;\n  }\n});\n\nclass Level {\n  _majorRank: number;\n  _minorRank: number;\n  constructor(levelId: number) {\n    const realId = levelId % 10000;\n    this._majorRank = Math.floor(realId / 100);\n    this._minorRank = realId % 100;\n  }\n  getTag(): string {\n    const label = PLAYER_RANKS[this._majorRank - 1];\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return label;\n    }\n    return label + this._minorRank;\n  }\n  getMaxPoint(): number {\n    return LEVEL_MAX_POINTS[(this._majorRank - 1) * 3 + this._minorRank - 1];\n  }\n  getStartingPoint(): number {\n    if (this._majorRank === 1) {\n      return 0;\n    }\n    return this.getMaxPoint() / 2;\n  }\n  getNextLevel(): Level {\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return this;\n    }\n    let majorRank = this._majorRank;\n    let minorRank = this._minorRank + 1;\n    if (minorRank > 3) {\n      majorRank++;\n      minorRank = 1;\n    }\n    return new Level(majorRank * 100 + minorRank);\n  }\n  getPreviousLevel(): Level {\n    if (this._majorRank === 1 && this._minorRank === 1) {\n      return this;\n    }\n    let majorRank = this._majorRank;\n    let minorRank = this._minorRank - 1;\n    if (minorRank < 1) {\n      majorRank--;\n      minorRank = 3;\n    }\n    return new Level(majorRank * 100 + minorRank);\n  }\n  formatWithAdjustedScore(score: number) {\n    let maxPoints = this.getMaxPoint();\n    let level: Level = this;\n    if (maxPoints && score >= maxPoints) {\n      level = this.getNextLevel();\n      maxPoints = level.getMaxPoint();\n      score = level.getStartingPoint();\n    } else if (score < 0) {\n      if (!maxPoints || level._majorRank === 1 || (level._majorRank === 2 && level._minorRank === 1)) {\n        score = 0;\n      } else {\n        level = this.getPreviousLevel();\n        maxPoints = level.getMaxPoint();\n        score = level.getStartingPoint();\n      }\n    }\n    return `${level.getTag()} - ${score}${maxPoints ? \"/\" + maxPoints : \"\"}`;\n  }\n}\nexport function getLevelTag(levelId: number) {\n  return new Level(levelId).getTag();\n}\nexport type LevelWithDelta = {\n  id: number;\n  score: number;\n  delta: number;\n};\nexport const LevelWithDelta = Object.freeze({\n  format(obj: LevelWithDelta): string {\n    return new Level(obj.id).formatWithAdjustedScore(obj.score + obj.delta);\n  }\n});\n\nexport interface Metadata {\n  count: number;\n}\nexport interface PlayerMetadata extends Metadata {\n  id: number;\n  nickname: string;\n  level: LevelWithDelta;\n  rank_rates: [number, number, number, number];\n  avg_rank: number;\n  negative_rate: number;\n}\n","import { MomentInput } from \"moment\";\r\nimport moment from \"moment\";\r\nimport React, { useReducer, useContext, ReactChild } from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport { NUMBER_OF_GAME_MODE } from \"../../utils/gameMode\";\r\nimport { useLocation } from \"react-router\";\r\n\r\ninterface WithRuntimeInfo {\r\n  version: number;\r\n  pendingRouteUpdate?: boolean;\r\n}\r\nexport interface ListingModel {\r\n  type?: undefined;\r\n  date: MomentInput | null;\r\n  selectedModes: Set<string> | null;\r\n  searchText: string;\r\n}\r\nexport interface PlayerModel {\r\n  type: \"player\";\r\n  playerId: string;\r\n}\r\nexport type Model = (ListingModel | PlayerModel) & WithRuntimeInfo;\r\ninterface ListingModelPlain {\r\n  type?: undefined;\r\n  date: number | null;\r\n  selectedModes: string[] | null;\r\n  searchText: string;\r\n}\r\nexport type ModelPlain = (ListingModelPlain | PlayerModel) & WithRuntimeInfo;\r\nexport const Model = Object.freeze({\r\n  toPlain: function(model: Model): ModelPlain {\r\n    if (model.type === \"player\") {\r\n      return model;\r\n    }\r\n    return {\r\n      ...model,\r\n      date: model.date ? moment(model.date).valueOf() : null,\r\n      selectedModes: model.selectedModes ? Array.from(model.selectedModes) : null\r\n    };\r\n  },\r\n  fromPlain: function(model: ModelPlain): ListingModel | PlayerModel {\r\n    if (model.type === \"player\") {\r\n      return model;\r\n    }\r\n    if (model.type === undefined) {\r\n      return {\r\n        date: model.date || null,\r\n        searchText: model.searchText || \"\",\r\n        selectedModes: model.selectedModes ? new Set(model.selectedModes) : null\r\n      };\r\n    }\r\n    console.warn(\"Unknown model data from location state:\", model);\r\n    return DEFAULT_MODEL;\r\n  }\r\n});\r\ntype ModelUpdate = Partial<ListingModel> | PlayerModel;\r\ntype DispatchModelUpdate = (props: ModelUpdate) => void;\r\n\r\nconst DEFAULT_MODEL: ListingModel = { date: null, selectedModes: null, searchText: \"\" };\r\nconst ModelContext = React.createContext<[Readonly<Model>, DispatchModelUpdate]>([\r\n  { ...DEFAULT_MODEL, version: 0 },\r\n  () => {}\r\n]);\r\nexport const useModel = () => useContext(ModelContext);\r\n\r\nfunction isSameSet<T>(set: Set<T>, other: Set<T>) {\r\n  if (set.size !== other.size) {\r\n    return false;\r\n  }\r\n  for (const elem of other) {\r\n    if (!set.has(elem)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction normalizeUpdate(newProps: ModelUpdate): ModelUpdate {\r\n  if (newProps.type === undefined) {\r\n    if (newProps.date) {\r\n      newProps.date = moment(newProps.date).valueOf();\r\n    }\r\n    if (newProps.selectedModes && newProps.selectedModes.size >= NUMBER_OF_GAME_MODE) {\r\n      newProps.selectedModes = null;\r\n    }\r\n  }\r\n  return newProps;\r\n}\r\nfunction isChanged(oldModel: Model, newProps: ModelUpdate): boolean {\r\n  if (oldModel.type !== newProps.type) {\r\n    return true;\r\n  }\r\n  if (oldModel.type === undefined && newProps.type === oldModel.type) {\r\n    if (\r\n      newProps.date !== undefined &&\r\n      newProps.date !== oldModel.date &&\r\n      (!newProps.date || !oldModel.date || !moment(newProps.date).isSame(oldModel.date, \"day\"))\r\n    ) {\r\n      return true;\r\n    }\r\n    if (newProps.searchText !== undefined && newProps.searchText !== oldModel.searchText) {\r\n      return true;\r\n    }\r\n    let newSelectedModes = newProps.selectedModes;\r\n    if (newSelectedModes && newSelectedModes.size >= NUMBER_OF_GAME_MODE) {\r\n      newSelectedModes = null;\r\n    }\r\n    if (newSelectedModes !== undefined && newSelectedModes !== oldModel.selectedModes) {\r\n      if (!newSelectedModes || !oldModel.selectedModes) {\r\n        return true;\r\n      }\r\n      if (isSameSet(oldModel.selectedModes, newSelectedModes)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  if (oldModel.type === \"player\" && newProps.type === oldModel.type) {\r\n    if (newProps.playerId !== undefined && newProps.playerId !== oldModel.playerId) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function ModelProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const location = useLocation();\r\n  const [model, updateModel] = useReducer(\r\n    (oldModel: Model, newProps: ModelUpdate): Model =>\r\n      isChanged(oldModel, newProps)\r\n        ? {\r\n            ...((oldModel.type === newProps.type ? oldModel : {}) as Model),\r\n            ...normalizeUpdate(newProps),\r\n            version: oldModel.version + 1,\r\n            pendingRouteUpdate: true\r\n          }\r\n        : oldModel,\r\n    null,\r\n    (): Model => ({\r\n      ...DEFAULT_MODEL,\r\n      ...Model.fromPlain((location.state || {}).model || {}),\r\n      version: new Date().getTime()\r\n    })\r\n  );\r\n  const value: [Model, DispatchModelUpdate] = useMemo(() => [model, updateModel], [model, updateModel]);\r\n  return <ModelContext.Provider value={value}>{children}</ModelContext.Provider>;\r\n}\r\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport { useParams, useLocation, Redirect } from \"react-router\";\nimport { useModel, Model, ModelPlain } from \"./model\";\nimport { generatePath } from \"./routes\";\nimport { useEffect } from \"react\";\nimport { scrollToTop, triggerRelayout } from \"../../utils/index\";\n\ntype ListingRouteParams = {\n  date?: string;\n  modes?: string;\n  search?: string;\n};\n\ntype HistoryState = {\n  model: ModelPlain;\n  pathname: string;\n};\n\nconst ModelBuilders = {\n  player: function(params: { id: string }): Model | string {\n    return {\n      type: \"player\",\n      playerId: params.id,\n      version: 0\n    };\n  },\n  listing: function(params: ListingRouteParams): Model | string {\n    const date = params.date ? moment(params.date, \"YYYY-MM-DD\") : null;\n    if (date && !date.isValid()) {\n      return \"/\";\n    }\n    const modes = params.modes\n      ? new Set(\n          params.modes\n            .split(\".\")\n            .map(x => x.trim())\n            .filter(x => !!x)\n        )\n      : null;\n    return {\n      date: date ? date.startOf(\"day\").valueOf() : null,\n      selectedModes: modes,\n      searchText: params.search || \"\",\n      version: 0\n    };\n  }\n};\n\nexport function RouteSync({ view }: { view: keyof typeof ModelBuilders }): React.FunctionComponentElement<any> {\n  const params = useParams();\n  const [model, updateModel] = useModel();\n  const location = useLocation<HistoryState>();\n  useEffect(triggerRelayout, [model.type]);\n  const state = location.state;\n  // console.log(params, model, location, state);\n  if (state && state.model.version === model.version) {\n    delete (model as Model).pendingRouteUpdate;\n    if (location.pathname !== state.pathname) {\n      return <Redirect to={{ pathname: state.pathname, state }} />;\n    }\n    return <></>;\n  }\n  if (!state) {\n    // Navigation\n    const modelResult = ModelBuilders[view](params as any);\n    if (typeof modelResult === \"string\") {\n      return <Redirect to={modelResult} />;\n    }\n    const newModel: Model = {\n      ...modelResult,\n      version: model.version\n    };\n    updateModel(newModel);\n    scrollToTop();\n    return (\n      <Redirect\n        to={{ pathname: location.pathname, state: { pathname: location.pathname, model: Model.toPlain(newModel) } }}\n      />\n    );\n  }\n  if (model.pendingRouteUpdate) {\n    // Model updated\n    const newPath = generatePath(model);\n    delete (model as Model).pendingRouteUpdate; // Do not trigger update\n    return <Redirect to={{ pathname: newPath, state: { pathname: newPath, model: Model.toPlain(model) } }} />;\n  } else {\n    const restoredModel = Model.fromPlain(state.model);\n    updateModel(restoredModel);\n    return <></>;\n  }\n}\n","import { useState, useEffect, useMemo, useCallback, useContext } from \"react\";\r\nimport React, { ReactChild } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  DataProvider,\r\n  GameRecord,\r\n  NUMBER_OF_GAME_MODE,\r\n  FilterPredicate,\r\n  ListingDataProvider,\r\n  PlayerDataProvider\r\n} from \"../../utils/dataSource\";\r\nimport { useModel, Model } from \"./model\";\r\nimport { Metadata } from \"../../utils/dataSource\";\r\n\r\ninterface ItemLoadingPlaceholder {\r\n  loading: boolean;\r\n}\r\n\r\nconst loadingPlaceholder = { loading: true };\r\n\r\nexport interface IDataAdapter {\r\n  getCount(): number;\r\n  getUnfilteredCount(): number;\r\n  getMetadata<T extends Metadata>(): T | null;\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder;\r\n  isItemLoaded(index: number): boolean;\r\n}\r\n\r\nclass _DummyDataAdapter implements IDataAdapter {\r\n  getCount(): number {\r\n    return 0;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return 0;\r\n  }\r\n  getMetadata<T extends Metadata>(): T | null {\r\n    return null;\r\n  }\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder {\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const DUMMY_DATA_ADAPTER = new _DummyDataAdapter() as IDataAdapter;\r\n\r\nconst noop = () => {};\r\n\r\nclass DataAdapter implements IDataAdapter {\r\n  _provider: DataProvider;\r\n  _onDataUpdate: () => void;\r\n  _triggeredRequest: boolean;\r\n\r\n  constructor(provider: DataProvider, onDataUpdate = noop) {\r\n    this._provider = provider;\r\n    this._onDataUpdate = onDataUpdate;\r\n    this._triggeredRequest = false;\r\n  }\r\n  _installHook(promise: Promise<any>) {\r\n    if (this._triggeredRequest) {\r\n      return;\r\n    }\r\n    this._triggeredRequest = true;\r\n    promise.then(this._callHook.bind(this));\r\n  }\r\n  _callHook() {\r\n    this._onDataUpdate();\r\n  }\r\n  getCount(): number {\r\n    const maybeCount = this._provider.getCountMaybeSync();\r\n    if (maybeCount instanceof Promise) {\r\n      this._installHook(maybeCount);\r\n      return 0;\r\n    }\r\n    return maybeCount;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return this._provider.getUnfilteredCountSync() || 0;\r\n  }\r\n  getMetadata<T extends Metadata>(): T | null {\r\n    return this._provider.getMetadataSync() as T | null;\r\n  }\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder {\r\n    if (this._provider.isItemLoaded(index)) {\r\n      return this._provider.getItem(index) as GameRecord;\r\n    }\r\n    if (!this._triggeredRequest) {\r\n      this._installHook(this._provider.getItem(index) as Promise<GameRecord>);\r\n    }\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    if (index < 0) {\r\n      return false;\r\n    }\r\n    return this._provider.isItemLoaded(index);\r\n  }\r\n  setUpdateHook(hook: () => void) {\r\n    this._onDataUpdate = hook;\r\n  }\r\n  cancelUpdateHook() {\r\n    this._onDataUpdate = noop;\r\n  }\r\n}\r\n\r\nconst DataAdapterContext = React.createContext(DUMMY_DATA_ADAPTER);\r\n\r\nexport const useDataAdapter = () => useContext(DataAdapterContext);\r\nexport const DataAdapterConsumer = DataAdapterContext.Consumer;\r\n\r\nfunction getProviderKey(model: Model): string {\r\n  if (model.type === undefined) {\r\n    return moment(model.date || moment())\r\n      .startOf(\"day\")\r\n      .valueOf()\r\n      .toString();\r\n  } else if (model.type === \"player\") {\r\n    return `player-${model.playerId}`;\r\n  }\r\n  throw new Error(\"Unknown model type\");\r\n}\r\n\r\nfunction createProvider(model: Model): DataProvider {\r\n  if (model.type === undefined) {\r\n    return ListingDataProvider.create(model.date || moment().startOf(\"day\"));\r\n  }\r\n  if (model.type === \"player\") {\r\n    return PlayerDataProvider.create(model.playerId);\r\n  }\r\n  throw new Error(\"Not implemented\");\r\n}\r\n\r\nfunction usePredicate(model: Model): FilterPredicate {\r\n  if (model.type !== undefined) {\r\n    return useMemo(() => null, [null, \"\"]);\r\n  }\r\n  const searchText = (model.searchText || \"\").trim() || \"\";\r\n  const needPredicate = searchText || (model.selectedModes && model.selectedModes.size < NUMBER_OF_GAME_MODE);\r\n  return useMemo(\r\n    () =>\r\n      needPredicate\r\n        ? game => {\r\n            if (model.selectedModes && !model.selectedModes.has(game.modeId.toString())) {\r\n              return false;\r\n            }\r\n            if (!game.players.some(player => player.nickname.toLowerCase().indexOf(searchText) > -1)) {\r\n              return false;\r\n            }\r\n            return true;\r\n          }\r\n        : null,\r\n    [(model.type === undefined && model.selectedModes) || null, searchText]\r\n  );\r\n}\r\n\r\nexport function DataAdapterProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const [model] = useModel();\r\n  const [dataProviders] = useState(() => ({} as { [key: string]: DataProvider }));\r\n  const searchPredicate = usePredicate(model);\r\n  const dataProvider = useMemo(() => {\r\n    const key = getProviderKey(model);\r\n    if (!dataProviders[key]) {\r\n      dataProviders[key] = createProvider(model);\r\n    }\r\n    return dataProviders[key];\r\n  }, [model, dataProviders]);\r\n  const [dataAdapter, setDataAdapter] = useState(() => DUMMY_DATA_ADAPTER);\r\n  const refreshDataAdapter = useCallback(() => {\r\n    dataProvider.setFilterPredicate(searchPredicate);\r\n    const adapter = new DataAdapter(dataProvider);\r\n    setDataAdapter(adapter);\r\n  }, [dataProvider, searchPredicate]);\r\n  useEffect(refreshDataAdapter, [refreshDataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      return () => adapter.cancelUpdateHook();\r\n    }\r\n  }, [dataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      adapter.setUpdateHook(refreshDataAdapter);\r\n    }\r\n  }, [dataAdapter, refreshDataAdapter]);\r\n  return <DataAdapterContext.Provider value={dataAdapter}>{children}</DataAdapterContext.Provider>;\r\n}\r\n","import React from \"react\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport { TableCellProps, Index } from \"react-virtualized\";\r\nimport { Table, Column } from \"react-virtualized/dist/es/Table\";\r\nimport { AutoSizer } from \"react-virtualized/dist/es/AutoSizer\";\r\nimport moment from \"moment\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { GameRecord, GameMode } from \"../../utils/dataSource\";\r\nimport { Player } from \"./player\";\r\nimport { useScrollerProps } from \"../misc/scroller\";\r\nimport { useDataAdapter } from \"./dataAdapterProvider\";\r\nimport { triggerRelayout } from \"../../utils/index\";\r\nimport { useModel } from \"./model\";\r\nimport Loadable from \"react-loadable\";\r\n\r\nconst formatTime = (x: number) => (x ? moment.unix(x).format(\"HH:mm\") : null);\r\n\r\nconst Players = React.memo(({ game, activePlayerId }: { game: GameRecord; activePlayerId?: string }) => (\r\n  <div className=\"row no-gutters\">\r\n    {game.players.map(x => (\r\n      <div key={x.accountId} className=\"col-12 col-md-6 pr-1\">\r\n        <Player game={game} player={x} isActive={x.accountId.toString() === activePlayerId} />\r\n      </div>\r\n    ))}\r\n  </div>\r\n));\r\n\r\nconst cellFormatTime = ({ cellData }: TableCellProps) => formatTime(cellData);\r\nconst cellFormatFullTime = ({ rowData }: TableCellProps) =>\r\n  rowData.loading ? \"\" : GameRecord.formatFullStartTime(rowData);\r\nconst cellFormatRank = ({ rowData, columnData }: TableCellProps) =>\r\n  !rowData || rowData.loading || !columnData.activePlayerId ? (\r\n    \"\"\r\n  ) : (\r\n    <span\r\n      className=\"font-weight-bold\"\r\n      style={{ color: GameRecord.getPlayerRankColor(rowData, columnData.activePlayerId) }}\r\n    >\r\n      {GameRecord.getPlayerRankLabel(rowData, columnData.activePlayerId).slice(0, 1)}\r\n    </span>\r\n  );\r\nconst cellFormatGameMode = ({ cellData }: TableCellProps) => GameMode[cellData];\r\n\r\nexport function GameRecordTable({ showStartEnd = true, showFullTime = false } = {}) {\r\n  const data = useDataAdapter();\r\n  const [model] = useModel();\r\n  const scrollerProps = useScrollerProps();\r\n  const { isScrolling, onChildScroll, scrollTop, height, registerChild } = scrollerProps;\r\n  const rowGetter = useCallback(({ index }: Index) => data.getItem(index), [data]);\r\n  const getRowClassName = useCallback(\r\n    ({ index }: Index) => (index >= 0 ? clsx({ loading: !data.isItemLoaded(index), even: (index & 1) === 0 }) : \"\"),\r\n    [data]\r\n  );\r\n  const noRowsRenderer = useCallback(\r\n    () => (data.getUnfilteredCount() ? null : <p className=\"text-center\">加载中...</p>),\r\n    [data]\r\n  );\r\n  const activePlayerId = model.type === \"player\" ? model.playerId : undefined;\r\n  const cellRenderPlayer = useCallback(\r\n    ({ rowData }: TableCellProps) =>\r\n      rowData && rowData.players ? <Players game={rowData} activePlayerId={activePlayerId} /> : null,\r\n    [activePlayerId]\r\n  );\r\n  const unfilteredCount = data.getUnfilteredCount();\r\n  useEffect(() => {\r\n    triggerRelayout();\r\n    if (unfilteredCount) {\r\n      Loadable.preloadAll();\r\n    }\r\n  }, [!!unfilteredCount]);\r\n  return (\r\n    <div ref={registerChild as any}>\r\n      <AutoSizer disableHeight>\r\n        {({ width }) => (\r\n          <Table\r\n            autoHeight\r\n            className={activePlayerId ? \"with-active-player\" : \"\"}\r\n            rowCount={data.getCount()}\r\n            rowGetter={rowGetter}\r\n            rowHeight={window.matchMedia(\"(min-width: 768px)\").matches ? 70 : 140}\r\n            headerHeight={50}\r\n            width={width}\r\n            height={height}\r\n            isScrolling={isScrolling}\r\n            onScroll={onChildScroll}\r\n            scrollTop={scrollTop}\r\n            rowClassName={getRowClassName}\r\n            noRowsRenderer={noRowsRenderer}\r\n          >\r\n            <Column dataKey=\"modeId\" label=\"等级\" cellRenderer={cellFormatGameMode} width={40} />\r\n            {activePlayerId ? (\r\n              <Column\r\n                dataKey=\"modeId\"\r\n                label=\"顺位\"\r\n                columnData={{ activePlayerId }}\r\n                cellRenderer={cellFormatRank}\r\n                width={40}\r\n              />\r\n            ) : null}\r\n            <Column dataKey=\"players\" label=\"玩家\" cellRenderer={cellRenderPlayer} width={120} flexGrow={1} />\r\n            {showStartEnd\r\n              ? [\r\n                  <Column\r\n                    key=\"startTime\"\r\n                    dataKey=\"startTime\"\r\n                    label=\"开始\"\r\n                    cellRenderer={cellFormatTime}\r\n                    width={50}\r\n                    className=\"text-right\"\r\n                    headerClassName=\"text-right\"\r\n                  />,\r\n                  <Column\r\n                    key=\"endTime\"\r\n                    dataKey=\"endTime\"\r\n                    label=\"结束\"\r\n                    cellRenderer={cellFormatTime}\r\n                    width={50}\r\n                    headerClassName=\"text-right\"\r\n                    className=\"text-right\"\r\n                  />\r\n                ]\r\n              : null}\r\n            {showFullTime ? (\r\n              <Column\r\n                dataKey=\"startTime\"\r\n                label=\"时间\"\r\n                cellRenderer={cellFormatFullTime}\r\n                width={140}\r\n                className=\"text-right\"\r\n                headerClassName=\"text-right\"\r\n              />\r\n            ) : null}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport interface CheckboxItem {\r\n  key: string;\r\n  label: string;\r\n}\r\n\r\nexport function CheckboxGroup({\r\n  items = [] as CheckboxItem[],\r\n  selectedItemKeys = null as Set<string> | null,\r\n  groupKey = \"default\",\r\n  onChange = (selectedItemKeys: Set<string>) => {}\r\n}) {\r\n  const setSelected = function(key: string, isSelected: boolean) {\r\n    if (isSelected && (!selectedItemKeys || selectedItemKeys.has(key))) {\r\n      return;\r\n    }\r\n    if (!isSelected && selectedItemKeys && !selectedItemKeys.has(key)) {\r\n      return;\r\n    }\r\n    const newSet = new Set(selectedItemKeys || items.map(x => x.key));\r\n    if (isSelected) {\r\n      newSet.add(key);\r\n    } else {\r\n      newSet.delete(key);\r\n    }\r\n    onChange(newSet);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {items.map(item => (\r\n        <div className=\"form-check form-check-inline\" key={item.key}>\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            id={`CG_${groupKey}_${item.key}`}\r\n            value={item.key}\r\n            checked={!selectedItemKeys || selectedItemKeys.has(item.key)}\r\n            onChange={event => setSelected(item.key, event.currentTarget.checked)}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor={`CG_${groupKey}_${item.key}`}>\r\n            {item.label}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport { useCallback } from \"react\";\r\nimport { MomentInput } from \"moment\";\r\n\r\nexport function DatePicker({\r\n  date = moment() as MomentInput,\r\n  onChange = (_: MomentInput) => {},\r\n  className = \"\",\r\n  min = undefined as MomentInput,\r\n  max = moment() as MomentInput\r\n}) {\r\n  const handleChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => onChange(moment(e.currentTarget.value, \"YYYY-MM-DD\")),\r\n    [onChange]\r\n  );\r\n  return (\r\n    <input\r\n      className={className}\r\n      type=\"date\"\r\n      value={moment(date).format(\"YYYY-MM-DD\")}\r\n      min={min ? moment(min).format(\"YYYY-MM-DD\") : undefined}\r\n      max={max ? moment(max).format(\"YYYY-MM-DD\") : undefined}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const FormRow = ({ title = \"\", children = undefined as ReactNode }) => (\r\n  <div className=\"form-group row\">\r\n    <label className=\"col-sm-2 col-form-label\">{title}</label>\r\n    <div className=\"col-sm-10\">{children}</div>\r\n  </div>\r\n);\r\n","import { useCallback } from \"react\";\r\nimport React from \"react\";\r\n\r\nimport { FormRow, DatePicker, CheckboxGroup } from \"../form\";\r\nimport { GameMode } from \"../../utils/dataSource\";\r\nimport { useModel } from \"./model\";\r\nimport { MomentInput } from \"moment\";\r\nimport moment from \"moment\";\r\n\r\nexport const MODE_CHECKBOXES = Object.keys(GameMode)\r\n  .filter(x => typeof GameMode[x as keyof typeof GameMode] !== \"string\")\r\n  .map(x => ({\r\n    key: String(GameMode[x as keyof typeof GameMode]),\r\n    label: x\r\n  }));\r\n\r\nconst DEFAULT_DATE = moment().startOf(\"day\");\r\n\r\nexport function FilterPanel() {\r\n  const [model, updateModel] = useModel();\r\n  const updateSearchTextFromEvent = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => updateModel({ searchText: e.currentTarget.value }),\r\n    [updateModel]\r\n  );\r\n  const setSelectedItems = useCallback(\r\n    (selectedItemKeys: Set<string>) => updateModel({ selectedModes: selectedItemKeys }),\r\n    [updateModel]\r\n  );\r\n  const setDate = useCallback((date: MomentInput) => updateModel({ date }), [updateModel]);\r\n  if (model.type !== undefined) {\r\n    return null;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <FormRow title=\"日期\">\r\n        <DatePicker min=\"2019-08-23\" date={model.date || DEFAULT_DATE} onChange={setDate} className=\"form-control\" />\r\n      </FormRow>\r\n      <FormRow title=\"查找玩家\">\r\n        <input type=\"text\" className=\"form-control\" value={model.searchText} onChange={updateSearchTextFromEvent} />\r\n      </FormRow>\r\n      <FormRow>\r\n        <CheckboxGroup items={MODE_CHECKBOXES} selectedItemKeys={model.selectedModes} onChange={setSelectedItems} />\r\n      </FormRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Loadable from \"react-loadable\";\n\nimport { useDataAdapter } from \"./dataAdapterProvider\";\nimport { PlayerMetadata } from \"../../utils/dataSource\";\nimport { useEffect } from \"react\";\nimport { triggerRelayout, formatPercent } from \"../../utils/index\";\nimport { LevelWithDelta } from \"../../utils/dataTypes\";\nconst RankRateChart = Loadable({\n  loader: () => import(\"./charts/rankRate\"),\n  loading: () => <></>\n});\nconst RecentRankChart = Loadable({\n  loader: () => import(\"./charts/recentRank\"),\n  loading: () => <></>\n});\n\nexport function PlayerDetails() {\n  const dataAdapter = useDataAdapter();\n  const metadata = dataAdapter.getMetadata<PlayerMetadata>();\n  useEffect(triggerRelayout, [!!metadata]);\n  if (!metadata || !metadata.nickname) {\n    return null;\n  }\n  return (\n    <div>\n      <h2 className=\"text-center\">玩家：{metadata.nickname}</h2>\n      <div className=\"row mt-4\">\n        <div className=\"col-md-8\">\n          <h3 className=\"text-center mb-4\">最近走势</h3>\n          <RecentRankChart dataAdapter={dataAdapter} playerId={metadata.id} aspect={6} />\n          <h3 className=\"text-center mt-4 mb-4\">相关数据</h3>\n          <dl className=\"row\">\n            <dt className=\"col-4 col-md-2\">记录场数</dt>\n            <dd className=\"col-8 col-md-4\">{metadata.count}</dd>\n            <dt className=\"col-4 col-md-2\">当前等级</dt>\n            <dd className=\"col-8 col-md-4\">{LevelWithDelta.format(metadata.level)}</dd>\n            <dt className=\"col-4 col-md-2\">平均顺位</dt>\n            <dd className=\"col-8 col-md-4\">{metadata.avg_rank.toFixed(3)}</dd>\n            <dt className=\"col-4 col-md-2\">被飞率</dt>\n            <dd className=\"col-8 col-md-4\">{formatPercent(metadata.negative_rate)}</dd>\n          </dl>\n        </div>\n        <div className=\"col-md-4\">\n          <h3 className=\"text-center mb-4\">累计战绩</h3>\n          <RankRateChart metadata={metadata} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Switch, Route, Redirect, generatePath as genPath } from \"react-router-dom\";\n\nimport { Model, ModelProvider } from \"./model\";\nimport moment from \"moment\";\nimport { RouteSync } from \"./routeSync\";\nimport { DataAdapterProvider } from \"./dataAdapterProvider\";\nimport { GameRecordTable } from \"./table\";\nimport { FilterPanel } from \"./filterPanel\";\nimport { PlayerDetails } from \"./playerDetails\";\n\nconst PLAYER_PATH = \"/player/:id\";\nconst PATH = \"/:date(\\\\d{4}-\\\\d{2}-\\\\d{2})/:modes([0-9.]+)?/:search?\";\n\nexport function generatePath(model: Model): string {\n  if (model.type === \"player\") {\n    return genPath(PLAYER_PATH, { id: model.playerId });\n  }\n  if ((!model.selectedModes || !model.selectedModes.size) && !model.searchText && !model.date) {\n    return \"/\";\n  }\n  return genPath(PATH, {\n    date: moment(model.date || new Date()).format(\"YYYY-MM-DD\"),\n    modes: model.selectedModes && model.selectedModes.size ? Array.from(model.selectedModes).join(\".\") : undefined,\n    search: model.searchText || undefined\n  });\n}\n\nfunction Routes() {\n  return (\n    <ModelProvider>\n      <DataAdapterProvider>\n        <Switch>\n          <Route exact path={PLAYER_PATH}>\n            <RouteSync view=\"player\" />\n            <PlayerDetails />\n            <GameRecordTable showFullTime showStartEnd={false} />\n          </Route>\n          <Route exact path={[\"/\", PATH]}>\n            <RouteSync view=\"listing\" />\n            <FilterPanel />\n            <GameRecordTable />\n          </Route>\n          <Route>\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </DataAdapterProvider>\n    </ModelProvider>\n  );\n}\nexport default Routes;\n","import React, { ReactChild, useContext } from \"react\";\r\n\r\nimport { WindowScrollerChildProps } from \"react-virtualized\";\r\nimport { WindowScroller } from \"react-virtualized/dist/es/WindowScroller\";\r\n\r\nconst ScrollerContext = React.createContext<WindowScrollerChildProps>({} as any);\r\n\r\nexport const useScrollerProps = () => useContext(ScrollerContext);\r\n\r\nfunction Scroller({ children }: { children: ReactChild | ReactChild[] }) {\r\n  return (\r\n    <WindowScroller>\r\n      {scrollerProps => <ScrollerContext.Provider value={scrollerProps}>{children}</ScrollerContext.Provider>}\r\n    </WindowScroller>\r\n  );\r\n}\r\nexport default Scroller;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoMdBook } from \"react-icons/io\";\r\n\r\nimport { GameRecord, PlayerRecord, getLevelTag } from \"../../utils/dataSource\";\r\nimport { generatePath } from \"./routes\";\r\n\r\nexport const Player = React.memo(function({\r\n  player,\r\n  game,\r\n  isActive,\r\n  hideDetailLink\r\n}: {\r\n  player: PlayerRecord;\r\n  game: GameRecord;\r\n  isActive: boolean;\r\n  hideDetailLink?: boolean;\r\n}) {\r\n  const { nickname, level, score, accountId } = player;\r\n  const isTop = GameRecord.getRankIndexByPlayer(game, player) === 0;\r\n  return (\r\n    <span className={`player ${isTop && \"font-weight-bold\"} ${isActive && \"active-player\"}`}>\r\n      <a href={GameRecord.getRecordLink(game, player)} title=\"查看牌谱\" target=\"_blank\">\r\n        [{getLevelTag(level)}] {nickname} {score !== undefined && `[${score}]`}\r\n      </a>{\" \"}\r\n      {hideDetailLink || isActive ? null : (\r\n        <Link title=\"玩家记录\" to={generatePath({ type: \"player\", playerId: accountId.toString(), version: 0 })}>\r\n          <IoMdBook />\r\n        </Link>\r\n      )}\r\n    </span>\r\n  );\r\n});\r\n"],"sourceRoot":""}