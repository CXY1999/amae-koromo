{"version":3,"sources":["components/gameRecords/model.tsx","data/source/api.ts","data/types/record.ts","components/gameRecords/player.tsx","serviceWorker.ts","components/layout/container.tsx","components/app/appHeader.tsx","components/app/maintenance.tsx","components/app/navbar.tsx","components/misc/canonicalLink.tsx","components/gameRecords/index.tsx","components/app/index.tsx","index.tsx","components/misc/loading.tsx","data/types/constants.ts","utils/constants.ts","components/misc/customizedLoadable.ts","utils/index.ts","data/types/gameMode.ts","components/form/checkboxGroup.tsx","components/form/datePicker.tsx","components/form/index.tsx","data/source/constants.ts","data/types/level.ts","components/misc/alert.tsx","components/gameRecords/routeSync.tsx","components/gameRecords/filterPanel.tsx","components/gameRecords/playerSearch.tsx","components/gameRecords/table.tsx","components/gameRecords/routes.tsx","data/source/records/loader.ts","data/source/records/provider.ts","components/gameRecords/dataAdapterProvider.tsx","components/misc/scroller.tsx","data/source/misc.ts","components/gameRecords/modeSelector.tsx","components/form/formRow.tsx","data/types/metadata.ts","data/types/ranking.ts","data/types/index.ts"],"names":["Model","Object","freeze","toPlain","model","type","startDate","dayjs","valueOf","endDate","undefined","date","fromPlain","searchText","selectedMode","console","warn","DEFAULT_MODEL","removeExtraParams","playerId","version","ModelContext","React","createContext","useModel","useContext","isSameDateValue","d1","d2","isSame","ModelProvider","children","location","useLocation","useReducer","oldModel","newProps","isChanged","keys","key","normalizeUpdate","pendingRouteUpdate","state","Date","getTime","updateModel","value","useMemo","Provider","onMaintenance","setMaintenanceHandler","handler","apiGet","path","a","async","fetch","API_ROOT","resp","ok","json","data","maintenance","Promise","GameRecord","getRankIndexByPlayer","rec","player","accountId","toString","sortedPlayers","players","map","index","sort","b","score","i","length","getPlayerRankLabel","RANK_LABELS","getPlayerRankColor","RANK_COLORS","encodeAccountId","t","getStartTime","startTime","formatFullStartTime","format","formatStartDate","getRecordLink","trailer","parseInt","uuid","Player","memo","game","isActive","hideDetailLink","nickname","level","isTop","className","href","title","target","rel","getLevelTag","to","generatePlayerPathById","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","error","Container","fluid","AppHeader","container","stateName","MaintenanceHandler","useState","msg","setMsg","closable","pathname","startsWith","Navbar","mobileVisible","setMobileVisible","onToggleButtonClick","useCallback","e","preventDefault","stopPropagation","useEffect","classList","contains","document","addEventListener","removeEventListener","TITLE_PREFIX","CONTEST_MODE","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","id","activeClassName","CanonicalLink","loc","Helmet","CANONICAL_DOMAIN","Routes","Loadable","loader","loading","GameRecords","Ranking","Statistics","App","defaultTitle","titleTemplate","rootElement","getElementById","render","URL","process","origin","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","waitingServiceWorker","waiting","event","postMessage","Loading","size","role","PLAYER_RANKS","DATE_MIN","CustomizedLoadable","options","delay","triggerRelayout","requestAnimationFrame","dispatchEvent","UIEvent","setTimeout","scrollToTop","scrollTo","formatPercent","x","toFixed","formatFixed3","formatIdentity","NOT_FINISHED","notFinished","__useAsyncCache","useAsync","maybePromise","cacheKey","fulfilledValue","setFulfilledValue","cancelled","result","useAsyncFactory","factory","deps","join","sum","numbers","reduce","GameMode","filter","CheckboxGroup","props","items","groupKey","selectedItemKeys","onChange","setSelected","isSelected","has","newSet","Set","add","delete","isChecked","selectedItemKey","Fragment","item","name","checked","currentTarget","htmlFor","label","DatePicker","min","max","handleChange","API_ROOT_PROD","API_SUFFIX","m","exec","LEVEL_MAX_POINTS","LEVEL_PENALTY","LEVEL_ALLOWED_MODES","玉","王座","Level","levelId","_majorRank","_minorRank","realId","this","Math","floor","other","mode","includes","getMaxPoint","majorRank","minorRank","maxPoints","getNextLevel","getStartingPoint","getPreviousLevel","getAdjustedLevel","getTag","formatAdjustedScore","LevelWithDelta","obj","formatAdjustedScoreWithTag","delta","Alert","stateKey","localStorage","getItem","closed","setClosed","setItem","Cont","data-dismiss","aria-hidden","parseOptionalDate","s","defaultValue","ModelBuilders","params","listing","isValid","startOf","search","RouteSync","view","useParams","modelResult","newModel","newPath","generatePath","DEFAULT_DATE","FilterPanel","updateSearchTextFromEvent","setMode","setDate","playerSearchCache","NUM_RESULTS_SHOWN","NUM_FETCH","normalizeName","toLowerCase","trim","PlayerSearchResult","setVersion","cachedResult","prefix","normalizedPrefix","isExactMatch","slice","findRawResultFromCache","mayHaveMore","filteredPlayers","forEach","push","isLoading","debounceToken","searchPlayer","clearTimeout","PlayerSearch","Players","activePlayerId","isMobile","matchMedia","matches","cellFormatTime","cellData","unix","cellFormatFullTime","rowData","cellFormatRank","columnData","style","color","cellFormatGameMode","makeColumn","builder","random","args","outer","ret","cloneElement","COLUMN_GAMEMODE","dataKey","cellRenderer","width","COLUMN_RANK","COLUMN_PLAYERS","flexGrow","COLUMN_STARTTIME","headerClassName","COLUMN_ENDTIME","COLUMN_FULLTIME","GameRecordTable","columns","withActivePlayer","useDataAdapter","scrollerProps","useScrollerProps","isScrolling","onChildScroll","scrollTop","height","registerChild","rowGetter","getRowClassName","clsx","isItemLoaded","even","noRowsRenderer","getUnfilteredCount","shouldTriggerLayout","memoColumns","ref","AutoSizer","disableHeight","Table","autoHeight","rowCount","getCount","rowHeight","headerHeight","onScroll","rowClassName","PlayerDetails","PLAYER_PATH","PATH","genPath","GameRecordTablePlayerView","exact","ListingDataLoader","_date","skip","limit","cacheTag","PlayerDataLoader","_playerId","_startDate","_endDate","_mode","_getDatePath","_getParams","stats","extended_stats","extendedStats","DataProviderImpl","itemsPerChunk","_loader","_metadata","_countPromise","_chunks","_itemsPerChunk","_filterPredicate","_filteredIndices","_filterResultCache","predicate","updateFilteredIndices","metadata","getMetadataSync","count","numShownItems","numLoadedItems","indices","chunk","_triggerFullLoad","getCountMaybeSync","getMetadata","Error","resolve","mappedIndex","_mapItemIndex","chunkNumber","skipPreload","innerIndex","_getChunk","preload","requestedIndex","reversed","chunkIndex","_loadChunk","numChunks","ceil","getRecords","ListingDataProvider","create","PlayerDataProvider","endOf","loadingPlaceholder","DUMMY_DATA_ADAPTER","noop","DataAdapter","provider","onDataUpdate","_provider","_onDataUpdate","_triggeredRequest","promise","_callHook","isError","maybeCount","_installHook","getUnfilteredCountSync","hook","DataAdapterContext","Consumer","DataAdapterProvider","dataProviders","searchPredicate","memoFunc","memoDeps","needPredicate","modeId","some","usePredicate","dataProvider","getProviderKey","createProvider","dataAdapter","setDataAdapter","refreshDataAdapter","setFilterPredicate","adapter","cancelUpdateHook","setUpdateHook","ScrollerContext","Scroller","encodeURIComponent","getDeltaRanking","timespan","getCareerRanking","getGlobalStatistics","getFanStats","getRankRateBySeat","rawResp","counts","rank","modeIdStr","seatId","numGames","MODE_CHECKBOXES","String","ModeSelector","unshift","FormRow","inline","RANK_DELTA","MODE_DELTA","calculateDeltaPoint","includePenalty","getPenaltyPoint","PlayerMetadata","calculateRankDeltaPoints","trimNumber","rankDeltaPoints","rank_avg_score","calculateExpectedGamePoint","rankWeightedPoints","point","rank_rates","expectedGamePoint","estimateStableLevel","lastPositiveLevel","abs","isAllowedMode","prevLevel","formatStableLevel2","formatNumber","getStableLevelComponents","estimateStableLevel2","RankingTimeSpan","CareerRankingType"],"mappings":"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","file":"static/js/main.282e0d6a.chunk.js","sourcesContent":["import dayjs from \"dayjs\";\r\nimport React, { useReducer, useContext, ReactChild } from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\ninterface WithRuntimeInfo {\r\n  version: number;\r\n  pendingRouteUpdate?: boolean;\r\n}\r\nexport interface ListingModel {\r\n  type: undefined;\r\n  date: dayjs.ConfigType | null;\r\n  selectedMode: string;\r\n  searchText: string;\r\n}\r\nexport interface PlayerModel {\r\n  type: \"player\";\r\n  playerId: string;\r\n  startDate: dayjs.ConfigType | null;\r\n  endDate: dayjs.ConfigType | null;\r\n  selectedMode: string;\r\n}\r\nexport type Model = (ListingModel | PlayerModel) & WithRuntimeInfo;\r\ninterface ListingModelPlain {\r\n  type: undefined;\r\n  date: number | null;\r\n  selectedMode: string;\r\n  searchText: string;\r\n}\r\nexport interface PlayerModelPlain {\r\n  type: \"player\";\r\n  playerId: string;\r\n  startDate: number | null;\r\n  endDate: number | null;\r\n  selectedMode: string;\r\n}\r\nexport type ModelPlain = (ListingModelPlain | PlayerModelPlain) & WithRuntimeInfo;\r\nexport const Model = Object.freeze({\r\n  toPlain(model: Model): ModelPlain {\r\n    if (model.type === \"player\") {\r\n      return {\r\n        ...model,\r\n        startDate: model.startDate ? dayjs(model.startDate).valueOf() : null,\r\n        endDate: model.endDate ? dayjs(model.endDate).valueOf() : null\r\n      };\r\n    }\r\n    return {\r\n      ...model,\r\n      type: undefined,\r\n      date: model.date ? dayjs(model.date).valueOf() : null\r\n    };\r\n  },\r\n  fromPlain(model: ModelPlain): ListingModel | PlayerModel {\r\n    if (model.type === \"player\") {\r\n      return model;\r\n    }\r\n    if (model.type === undefined) {\r\n      return {\r\n        type: undefined,\r\n        date: model.date || null,\r\n        searchText: model.searchText || \"\",\r\n        selectedMode: model.selectedMode\r\n      };\r\n    }\r\n    console.warn(\"Unknown model data from location state:\", model);\r\n    // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\r\n    return DEFAULT_MODEL;\r\n  },\r\n  removeExtraParams(model: Model): Model {\r\n    if (model.type === \"player\") {\r\n      return {\r\n        type: \"player\",\r\n        playerId: model.playerId,\r\n        selectedMode: \"\",\r\n        startDate: null,\r\n        endDate: null,\r\n        version: 0\r\n      };\r\n    }\r\n    return {\r\n      type: undefined,\r\n      searchText: \"\",\r\n      selectedMode: \"\",\r\n      date: null,\r\n      version: 0\r\n    };\r\n  }\r\n});\r\ntype ModelUpdate = Partial<ListingModel> | ({ type: \"player\" } & Partial<PlayerModel>);\r\ntype DispatchModelUpdate = (props: ModelUpdate) => void;\r\n\r\nconst DEFAULT_MODEL: ListingModel = { type: undefined, date: null, selectedMode: \"\", searchText: \"\" };\r\nconst ModelContext = React.createContext<[Readonly<Model>, DispatchModelUpdate]>([\r\n  { ...DEFAULT_MODEL, version: 0 },\r\n  () => {}\r\n]);\r\nexport const useModel = () => useContext(ModelContext);\r\n\r\nfunction normalizeUpdate(newProps: ModelUpdate): ModelUpdate {\r\n  if (newProps.type === undefined) {\r\n    if (newProps.date) {\r\n      newProps.date = dayjs(newProps.date).valueOf();\r\n    }\r\n  }\r\n  for (const key of Object.keys(newProps)) {\r\n    if (key !== \"type\" && newProps[key as keyof typeof newProps] === undefined) {\r\n      delete newProps[key as keyof typeof newProps];\r\n    }\r\n  }\r\n  return newProps;\r\n}\r\nfunction isSameDateValue(d1?: dayjs.ConfigType | null, d2?: dayjs.ConfigType | null): boolean {\r\n  if (d1 === d2) {\r\n    return true;\r\n  }\r\n  if (!d1 || !d2) {\r\n    return false;\r\n  }\r\n  return dayjs(d1).isSame(d2, \"day\");\r\n}\r\nfunction isChanged(oldModel: Model, newProps: ModelUpdate): boolean {\r\n  if (oldModel.type !== newProps.type) {\r\n    return true;\r\n  }\r\n  if (newProps.selectedMode !== undefined && newProps.selectedMode !== oldModel.selectedMode) {\r\n    return true;\r\n  }\r\n  if (oldModel.type === undefined && newProps.type === oldModel.type) {\r\n    if (newProps.date !== undefined && !isSameDateValue(newProps.date, oldModel.date)) {\r\n      return true;\r\n    }\r\n    if (newProps.searchText !== undefined && newProps.searchText !== oldModel.searchText) {\r\n      return true;\r\n    }\r\n  }\r\n  if (oldModel.type === \"player\" && newProps.type === oldModel.type) {\r\n    if (newProps.playerId !== undefined && newProps.playerId !== oldModel.playerId) {\r\n      return true;\r\n    }\r\n    if (newProps.startDate !== undefined && !isSameDateValue(oldModel.startDate, newProps.startDate)) {\r\n      return true;\r\n    }\r\n    if (newProps.endDate !== undefined && !isSameDateValue(oldModel.endDate, newProps.endDate)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function ModelProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const location = useLocation();\r\n  const [model, updateModel] = useReducer(\r\n    (oldModel: Model, newProps: ModelUpdate): Model =>\r\n      isChanged(oldModel, newProps)\r\n        ? {\r\n            ...((oldModel.type === newProps.type ? oldModel : {}) as Model),\r\n            ...(normalizeUpdate(newProps) as Model),\r\n            version: oldModel.version + 1,\r\n            pendingRouteUpdate: true\r\n          }\r\n        : oldModel,\r\n    null,\r\n    (): Model => ({\r\n      ...DEFAULT_MODEL,\r\n      ...Model.fromPlain((location.state || {}).model || {}),\r\n      version: new Date().getTime()\r\n    })\r\n  );\r\n  const value: [Model, DispatchModelUpdate] = useMemo(() => [model, updateModel], [model, updateModel]);\r\n  return <ModelContext.Provider value={value}>{children}</ModelContext.Provider>;\r\n}\r\n","import { API_ROOT } from \"./constants\";\n\nlet onMaintenance: (msg: string) => void = () => {};\n\nexport function setMaintenanceHandler(handler: (msg: string) => void) {\n  onMaintenance = handler;\n}\n\nexport async function apiGet<T>(path: string) {\n  const resp = await fetch(API_ROOT + path);\n  if (!resp.ok) {\n    throw resp;\n  }\n  const data = await resp.json();\n  if (data.maintenance) {\n    onMaintenance(data.maintenance);\n    return new Promise(() => {}) as Promise<T>; // Freeze all other components\n  }\n  return data as T;\n}\n","import dayjs from \"dayjs\";\n\nimport { GameMode } from \"./gameMode\";\nimport { RANK_LABELS, RANK_COLORS } from \"./constants\";\n\nexport interface PlayerRecord {\n  accountId: number;\n  nickname: string;\n  level: number;\n  score: number;\n}\nexport interface GameRecord {\n  modeId: GameMode;\n  uuid: string;\n  startTime: number;\n  endTime: number;\n  players: PlayerRecord[];\n}\nexport const GameRecord = Object.freeze({\n  getRankIndexByPlayer(rec: GameRecord, player: number | string | PlayerRecord): number {\n    const playerId = (typeof player === \"object\" ? player.accountId : player).toString();\n    const sortedPlayers = rec.players.map((player, index) => ({ player, index }));\n    sortedPlayers.sort((a, b) => 5 - b.index + b.player.score - (5 - a.index + a.player.score));\n    for (let i = 0; i < sortedPlayers.length; i++) {\n      if (sortedPlayers[i].player.accountId.toString() === playerId) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  getPlayerRankLabel(rec: GameRecord, player: number | string | PlayerRecord): string {\n    return RANK_LABELS[GameRecord.getRankIndexByPlayer(rec, player)] || \"\";\n  },\n  getPlayerRankColor(rec: GameRecord, player: number | string | PlayerRecord): string {\n    return RANK_COLORS[GameRecord.getRankIndexByPlayer(rec, player)];\n  },\n  encodeAccountId: (t: number) => 1358437 + ((7 * t + 1117113) ^ 86216345),\n  getStartTime: (rec: GameRecord | number) => (typeof rec === \"number\" ? rec : rec.startTime) * 1000,\n  formatFullStartTime: (rec: GameRecord | number) => dayjs(GameRecord.getStartTime(rec)).format(\"YYYY/M/D HH:mm\"),\n  formatStartDate: (rec: GameRecord | number) => dayjs(GameRecord.getStartTime(rec)).format(\"M/D\"),\n  getRecordLink(rec: GameRecord | string, player?: PlayerRecord | number | string) {\n    const playerId = typeof player === \"object\" ? player.accountId : player;\n    const trailer = playerId\n      ? `_a${GameRecord.encodeAccountId(typeof playerId === \"number\" ? playerId : parseInt(playerId))}`\n      : \"\";\n    const uuid = typeof rec === \"string\" ? rec : rec.uuid;\n    return `https://www.majsoul.com/1/?paipu=${uuid}${trailer}`;\n  }\n});\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { IoMdBook } from \"react-icons/io\";\n\nimport { GameRecord, PlayerRecord, getLevelTag } from \"../../data/types\";\nimport { generatePlayerPathById } from \"./routes\";\n\nexport const Player = React.memo(function({\n  player,\n  game,\n  isActive,\n  hideDetailLink\n}: {\n  player: PlayerRecord;\n  game: GameRecord;\n  isActive: boolean;\n  hideDetailLink?: boolean;\n}) {\n  const { nickname, level, score, accountId } = player;\n  const isTop = GameRecord.getRankIndexByPlayer(game, player) === 0;\n  return (\n    <span className={`player ${isTop && \"font-weight-bold\"} ${isActive && \"active-player\"}`}>\n      <a href={GameRecord.getRecordLink(game, player)} title=\"查看牌谱\" target=\"_blank\" rel=\"noopener noreferrer\">\n        [{getLevelTag(level)}] {nickname} {score !== undefined && `[${score}]`}\n      </a>{\" \"}\n      {hideDetailLink || isActive ? null : (\n        <Link title=\"玩家记录\" to={generatePlayerPathById(accountId)}>\n          <IoMdBook />\n        </Link>\n      )}\n    </span>\n  );\n});\n","/* eslint-disable no-eq-null */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const Container = ({ title = undefined, children = undefined as ReactNode, fluid = false }) => (\r\n  <div className={`my-5 container${fluid ? \"-fluid\" : \"\"}`}>\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-12\">\r\n        {title && <h2 className=\"mb-4\">{title}</h2>}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { Alert } from \"../misc/alert\";\r\n\r\nexport function AppHeader() {\r\n  return (\r\n    <Alert container={Container} stateName=\"topNote\">\r\n      <h4>说明</h4>\r\n      <ul>\r\n        <li>本页面数据由第三方维护，不能绝对保证完整和正确，信息仅供参考，请勿用于不良用途。</li>\r\n        <li>记录包含雀魂国服四人半庄段位战玉之间及王座之间的牌谱。</li>\r\n        <li>对局数据收集从 2019 年 8 月 23 日开始，之前的对局已无法获取。</li>\r\n        <li>\r\n          正常情况下全部对局都会被记录，但不排除因网络问题遗漏部分对局的情况。另 2019 年 10 月 10 日前因程序 Bug\r\n          每天晚间可能遗漏掉 10% ~ 20% 的对局，此 Bug 目前已经修复。\r\n        </li>\r\n        <li>页面不是实时更新，对局一般会在结束后数分钟至数小时内出现。</li>\r\n        <li>\r\n          如有问题或建议，请戳 <a href=\"mailto:i@sapika.ch\">SAPikachu (i@sapika.ch)</a> 或{\" \"}\r\n          <a href=\"https://github.com/SAPikachu/amae-koromo/\">提交 Issue</a>。\r\n        </li>\r\n      </ul>\r\n    </Alert>\r\n  );\r\n}\r\n","import * as React from \"react\";\nimport { useState } from \"react\";\n\nimport { Alert } from \"../misc/alert\";\nimport { Container } from \"../layout/container\";\nimport { setMaintenanceHandler } from \"../../data/source/api\";\n\nexport function MaintenanceHandler({ children }: { children: React.ReactElement }): React.ReactElement {\n  const [msg, setMsg] = useState(\"\");\n  setMaintenanceHandler(setMsg);\n  if (!msg) {\n    return children;\n  }\n  return (\n    <Alert container={Container} closable={false}>\n      <h4>临时维护公告</h4>\n      <p>{msg}</p>\n    </Alert>\n  );\n}\n","import React from \"react\";\nimport { Location } from \"history\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { TITLE_PREFIX } from \"../../utils/constants\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { CONTEST_MODE } from \"../../data/source/constants\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isActive(match: any, location: Location): boolean {\n  if (!match) {\n    return false;\n  }\n  return !location.pathname.startsWith(\"/ranking\") && !location.pathname.startsWith(\"/statistics\");\n}\n\nexport default function Navbar() {\n  const [mobileVisible, setMobileVisible] = useState(false);\n  const onToggleButtonClick = useCallback(\n    (e: React.MouseEvent<HTMLButtonElement>) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setMobileVisible(!mobileVisible);\n    },\n    [mobileVisible, setMobileVisible]\n  );\n  useEffect(() => {\n    if (!mobileVisible) {\n      return;\n    }\n    const handler = (e: MouseEvent) => {\n      if ((e.target as HTMLElement).classList.contains(\"navbar-toggler\")) {\n        return;\n      }\n      setMobileVisible(false);\n    };\n    document.addEventListener(\"click\", handler);\n    return () => document.removeEventListener(\"click\", handler);\n  }, [mobileVisible, setMobileVisible]);\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n      <div className=\"container\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          {TITLE_PREFIX}\n        </Link>\n        {!CONTEST_MODE && (\n          <>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarNavAltMarkup\"\n              aria-controls=\"navbarNavAltMarkup\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n              onClick={onToggleButtonClick}\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div\n              className={`collapse navbar-collapse justify-content-end ${mobileVisible ? \"\" : \"d-none\"} d-lg-block`}\n              id=\"navbarNavAltMarkup\"\n            >\n              <div className=\"navbar-nav\">\n                <NavLink className=\"nav-item nav-link\" activeClassName=\"active\" to=\"/\" isActive={isActive}>\n                  主页\n                </NavLink>\n                <NavLink className=\"nav-item nav-link\" activeClassName=\"active\" to=\"/ranking\">\n                  排行榜\n                </NavLink>\n                <NavLink className=\"nav-item nav-link\" activeClassName=\"active\" to=\"/statistics\">\n                  大数据\n                </NavLink>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { CANONICAL_DOMAIN } from \"../../utils/constants\";\nimport { useLocation } from \"react-router\";\n\nexport default function CanonicalLink() {\n  const loc = useLocation();\n  return (\n    <Helmet>\n      <link rel=\"canonical\" href={`https://${CANONICAL_DOMAIN}${loc.pathname}`} />\n    </Helmet>\n  );\n}\n","import React from \"react\";\r\n\r\nimport { ModelProvider } from \"./model\";\r\nimport { DataAdapterProvider } from \"./dataAdapterProvider\";\r\nimport Loadable from \"../misc/customizedLoadable\";\r\nimport Loading from \"../misc/loading\";\r\n\r\nconst Routes = Loadable({\r\n  loader: () => import(\"./routes\"),\r\n  loading: () => <Loading />\r\n});\r\n\r\nexport default function GameRecords() {\r\n  // This makes data load in parallel with subcomponents\r\n  return (\r\n    <ModelProvider>\r\n      <DataAdapterProvider>\r\n        <Routes />\r\n      </DataAdapterProvider>\r\n    </ModelProvider>\r\n  );\r\n}\r\n","import React from \"react\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Loadable from \"../misc/customizedLoadable\";\nimport Scroller from \"../misc/scroller\";\n\nimport { Container } from \"../layout\";\nimport { AppHeader } from \"./appHeader\";\nimport { TITLE_PREFIX } from \"../../utils/constants\";\nimport { MaintenanceHandler } from \"./maintenance\";\nimport Navbar from \"./navbar\";\nimport CanonicalLink from \"../misc/canonicalLink\";\nimport Loading from \"../misc/loading\";\nimport GameRecords from \"../gameRecords\";\n\nconst Helmet = Loadable({\n  loader: () => import(\"react-helmet\"),\n  loading: () => <></>\n});\nconst Ranking = Loadable({\n  loader: () => import(\"../ranking\"),\n  loading: () => <Loading />\n});\nconst Statistics = Loadable({\n  loader: () => import(\"../statistics\"),\n  loading: () => <Loading />\n});\n\nfunction App() {\n  return (\n    <Router>\n      <Helmet defaultTitle={TITLE_PREFIX} titleTemplate={`%s | ${TITLE_PREFIX}`} />\n      <CanonicalLink />\n      <Navbar />\n      <MaintenanceHandler>\n        <Scroller>\n          <AppHeader />\n          <Container>\n            <Switch>\n              <Route path=\"/ranking\">\n                <Ranking />\n              </Route>\n              <Route path=\"/statistics\">\n                <Statistics />\n              </Route>\n              <Route path=\"/\">\n                <GameRecords />\n              </Route>\n            </Switch>\n          </Container>\n        </Scroller>\n      </MaintenanceHandler>\n    </Router>\n  );\n}\nexport default App;\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./styles/bootstrap-custom.scss\";\nimport \"./styles/styles.scss\";\n\nimport App from \"./components/app\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n\nserviceWorker.register({\n  onUpdate(registration) {\n    const waitingServiceWorker = registration.waiting || navigator.serviceWorker.controller;\n\n    if (waitingServiceWorker) {\n      if (waitingServiceWorker.state === \"activated\") {\n        window.location.reload();\n        return;\n      }\n      waitingServiceWorker.addEventListener(\"statechange\", event => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (event.target && (event.target as any).state === \"activated\") {\n          window.location.reload();\n        }\n      });\n      waitingServiceWorker.postMessage({ type: \"SKIP_WAITING\" });\n    }\n  }\n});\n","import React from \"react\";\n\nexport default function Loading({ size = \"normal\" }: { size?: \"normal\" | \"small\" }) {\n  return (\n    <div className={`d-flex justify-content-center m-${size === \"normal\" ? 5 : 1}`}>\n      <div className={`spinner-border ${size === \"normal\" ? \"\" : \"spinner-border-sm\"}`} role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n}\n","export const PLAYER_RANKS = \"初士杰豪圣魂\";\nexport const RANK_LABELS = [\"一位\", \"二位\", \"三位\", \"四位\"];\nexport const RANK_COLORS = [\"#28a745\", \"#17a2b8\", \"#6c757d\", \"#dc3545\"];\n","import dayjs from \"dayjs\";\r\n\r\nexport const TITLE_PREFIX = \"雀魂牌谱屋\";\r\nexport const DATE_MIN = dayjs(\"2019-08-23\", \"YYYY-MM-DD\");\r\nexport const CANONICAL_DOMAIN = \"amae-koromo.sapk.ch\";","import Loadable from \"react-loadable\";\nimport { LoadableComponent, Options } from \"react-loadable\";\n\nfunction CustomizedLoadable<Props, Exports extends object>(\n  options: Options<Props, Exports>\n): React.ComponentType<Props> & LoadableComponent {\n  return Loadable<Props, Exports>({ delay: 200, ...options });\n}\n\nexport default CustomizedLoadable;\n","import { useState, useEffect, useMemo } from \"react\";\nexport function triggerRelayout() {\n  requestAnimationFrame(() => window.dispatchEvent(new UIEvent(\"resize\")));\n  setTimeout(function() {\n    window.dispatchEvent(new UIEvent(\"resize\"));\n  }, 200);\n}\nexport function scrollToTop() {\n  window.scrollTo(0, 0);\n  requestAnimationFrame(() => window.scrollTo(0, 0));\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const formatPercent = (x: any) => {\n  if (!x) {\n    return \"\";\n  }\n  if (x < 0.0001) {\n    return \"<0.01%\";\n  }\n  return `${(x * 100).toFixed(2)}%`;\n};\n\nexport const formatFixed3 = (x: number) => x.toFixed(3);\nexport const formatIdentity = (x: number) => x.toString();\n\ntype NotFinished = { notFinished: string };\nconst NOT_FINISHED = { notFinished: \"yes\" };\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst __useAsyncCache = {} as { [key: string]: any };\n\nexport function useAsync<T>(maybePromise: T | Promise<T>, cacheKey?: string): T | undefined {\n  if (cacheKey && __useAsyncCache[cacheKey]) {\n    maybePromise = __useAsyncCache[cacheKey];\n  }\n  const [fulfilledValue, setFulfilledValue] = useState<T | NotFinished>(\n    maybePromise instanceof Promise ? NOT_FINISHED : maybePromise\n  );\n  useEffect(() => {\n    let cancelled = false;\n    if (maybePromise instanceof Promise) {\n      setFulfilledValue(NOT_FINISHED);\n      maybePromise.then(result => {\n        if (cancelled) {\n          return;\n        }\n        if (cacheKey) {\n          __useAsyncCache[cacheKey] = result;\n        }\n        setFulfilledValue(result);\n      });\n    } else {\n      setFulfilledValue(maybePromise);\n    }\n    return () => {\n      cancelled = true;\n    };\n  }, [maybePromise, cacheKey]);\n  if (fulfilledValue !== NOT_FINISHED) {\n    return fulfilledValue as T;\n  }\n  return undefined;\n}\nexport function useAsyncFactory<T>(\n  factory: () => Promise<T>,\n  deps: React.DependencyList,\n  cacheKey?: string\n): T | undefined {\n  const promise = useMemo(factory, deps);\n  return useAsync(promise, cacheKey ? `${cacheKey}-${deps.join(\",\")}` : undefined);\n}\n\nexport function sum(numbers: number[]): number {\n  return numbers.reduce((a, b) => a + b, 0);\n}\n","export enum GameMode {\n  王座 = 16,\n  玉 = 12\n}\nexport const NUMBER_OF_GAME_MODE = Object.keys(GameMode).filter(\n  x => typeof GameMode[x as keyof typeof GameMode] === \"number\"\n).length;\n","import React from \"react\";\r\n\r\nexport interface CheckboxItem {\r\n  key: string;\r\n  label: string;\r\n}\r\n\r\ntype CommonGroupParams = {\r\n  items: CheckboxItem[];\r\n  groupKey: string;\r\n};\r\ntype CheckboxGroupParams = CommonGroupParams & {\r\n  type: \"checkbox\";\r\n  selectedItemKeys: Set<string> | null;\r\n  onChange: (selectedItemKeys: Set<string>) => void;\r\n};\r\ntype RadioGroupParams = CommonGroupParams & {\r\n  type: \"radio\";\r\n  selectedItemKey: string;\r\n  onChange: (selectedItemKey: string) => void;\r\n};\r\n\r\nexport function CheckboxGroup(\r\n  props: CheckboxGroupParams | RadioGroupParams = {\r\n    type: \"checkbox\",\r\n    items: [],\r\n    groupKey: \"default\",\r\n    selectedItemKeys: null,\r\n    onChange: () => {}\r\n  }\r\n) {\r\n  const { type, items, groupKey } = props;\r\n  const { setSelected, isChecked } = (() => {\r\n    if (props.type === \"checkbox\") {\r\n      const { selectedItemKeys, onChange } = props;\r\n      return {\r\n        setSelected(key: string, isSelected: boolean) {\r\n          if (isSelected && (!selectedItemKeys || selectedItemKeys.has(key))) {\r\n            return;\r\n          }\r\n          if (!isSelected && selectedItemKeys && !selectedItemKeys.has(key)) {\r\n            return;\r\n          }\r\n          const newSet = new Set(selectedItemKeys || items.map(x => x.key));\r\n          if (isSelected) {\r\n            newSet.add(key);\r\n          } else {\r\n            newSet.delete(key);\r\n          }\r\n          onChange(newSet);\r\n        },\r\n        isChecked: (key: string) => !selectedItemKeys || selectedItemKeys.has(key)\r\n      };\r\n    } else {\r\n      const { selectedItemKey, onChange } = props;\r\n      return {\r\n        setSelected(key: string, isSelected: boolean) {\r\n          if (!isSelected) {\r\n            return;\r\n          }\r\n          onChange(key);\r\n        },\r\n        isChecked: (key: string) => selectedItemKey === key\r\n      };\r\n    }\r\n  })();\r\n  return (\r\n    <React.Fragment>\r\n      {items.map(item => (\r\n        <div className=\"form-check form-check-inline\" key={item.key}>\r\n          <input\r\n            className=\"form-check-input\"\r\n            type={type}\r\n            id={`CG_${groupKey}_${item.key}`}\r\n            name={`CG_${groupKey}_${item.key}`}\r\n            value={item.key}\r\n            checked={isChecked(item.key)}\r\n            onChange={event => setSelected(item.key, event.currentTarget.checked)}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor={`CG_${groupKey}_${item.key}`}>\r\n            {item.label}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport dayjs from \"dayjs\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport function DatePicker({\r\n  date = dayjs() as dayjs.ConfigType,\r\n  onChange = (() => {}) as (_: dayjs.Dayjs) => void,\r\n  className = \"\",\r\n  min = 0 as dayjs.ConfigType,\r\n  max = dayjs() as dayjs.ConfigType\r\n}) {\r\n  const handleChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => onChange(dayjs(e.currentTarget.value, \"YYYY-MM-DD\")),\r\n    [onChange]\r\n  );\r\n  return (\r\n    <input\r\n      className={className}\r\n      type=\"date\"\r\n      value={dayjs(date).format(\"YYYY-MM-DD\")}\r\n      min={min ? dayjs(min).format(\"YYYY-MM-DD\") : undefined}\r\n      max={max ? dayjs(max).format(\"YYYY-MM-DD\") : undefined}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n","export * from \"./checkboxGroup\";\r\nexport * from \"./datePicker\";\r\nexport * from \"./formRow\";\r\n","export const DATA_ROOT = \"https://ak-data-2.sapk.ch/\";\nconst API_ROOT_PROD = `${DATA_ROOT}api/`;\nconst API_ROOT_TEST = `${DATA_ROOT}api-test/`;\n\nlet API_SUFFIX = \"\";\nif (process.env.NODE_ENV === \"development\") {\n  API_SUFFIX = sessionStorage.getItem(\"apiSuffix\") || \"\";\n} else {\n  const m = /^([^.]+)\\.contest\\./.exec(window.location.hostname);\n  if (m) {\n    API_SUFFIX = `contest/${m[1]}/`;\n  }\n}\nexport const CONTEST_MODE = API_SUFFIX.indexOf(\"contest/\") === 0;\nexport const API_ROOT =\n  (process.env.NODE_ENV === \"development\" && !CONTEST_MODE ? API_ROOT_TEST : API_ROOT_PROD) + API_SUFFIX;\n","import { GameMode } from \"./gameMode\";\nimport { PLAYER_RANKS } from \"./constants\";\n\nconst LEVEL_MAX_POINTS = [20, 80, 200, 600, 800, 1000, 1200, 1400, 2000, 2800, 3200, 3600, 4000, 6000, 9000];\nconst LEVEL_PENALTY = [0, 0, 0, 20, 40, 60, 80, 100, 120, 165, 180, 195, 210, 225, 240, 255];\n\nconst LEVEL_ALLOWED_MODES: { [key: string]: GameMode[] } = {\n  \"1\": [],\n  \"2\": [],\n  \"3\": [],\n  \"4\": [GameMode.玉],\n  \"5\": [GameMode.玉, GameMode.王座],\n  \"6\": [GameMode.王座]\n};\n\nexport class Level {\n  _majorRank: number;\n  _minorRank: number;\n  constructor(levelId: number) {\n    const realId = levelId % 10000;\n    this._majorRank = Math.floor(realId / 100);\n    this._minorRank = realId % 100;\n  }\n  isSameMajorRank(other: Level): boolean {\n    return this._majorRank === other._majorRank;\n  }\n  isSame(other: Level): boolean {\n    return this._majorRank === other._majorRank && this._minorRank === other._minorRank;\n  }\n  isAllowedMode(mode: GameMode): boolean {\n    return LEVEL_ALLOWED_MODES[this._majorRank.toString() as keyof typeof LEVEL_ALLOWED_MODES].includes(mode);\n  }\n  getTag(): string {\n    const label = PLAYER_RANKS[this._majorRank - 1];\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return label;\n    }\n    return label + this._minorRank;\n  }\n  getMaxPoint(): number {\n    return LEVEL_MAX_POINTS[(this._majorRank - 1) * 3 + this._minorRank - 1];\n  }\n  getPenaltyPoint(): number {\n    return LEVEL_PENALTY[(this._majorRank - 1) * 3 + this._minorRank - 1];\n  }\n  getStartingPoint(): number {\n    if (this._majorRank === 1) {\n      return 0;\n    }\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return 10000;\n    }\n    return this.getMaxPoint() / 2;\n  }\n  getNextLevel(): Level {\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return this;\n    }\n    let majorRank = this._majorRank;\n    let minorRank = this._minorRank + 1;\n    if (minorRank > 3) {\n      majorRank++;\n      minorRank = 1;\n    }\n    return new Level(majorRank * 100 + minorRank);\n  }\n  getPreviousLevel(): Level {\n    if (this._majorRank === 1 && this._minorRank === 1) {\n      return this;\n    }\n    let majorRank = this._majorRank;\n    let minorRank = this._minorRank - 1;\n    if (minorRank < 1) {\n      majorRank--;\n      minorRank = 3;\n    }\n    return new Level(majorRank * 100 + minorRank);\n  }\n  getAdjustedLevel(score: number): Level {\n    let maxPoints = this.getMaxPoint();\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let level: Level = this;\n    if (maxPoints && score >= maxPoints) {\n      level = this.getNextLevel();\n      maxPoints = level.getMaxPoint();\n      score = level.getStartingPoint();\n    } else if (score < 0) {\n      if (!maxPoints || level._majorRank === 1 || (level._majorRank === 2 && level._minorRank === 1)) {\n        score = 0;\n      } else {\n        level = this.getPreviousLevel();\n        maxPoints = level.getMaxPoint();\n        score = level.getStartingPoint();\n      }\n    }\n    return level;\n  }\n  formatAdjustedScoreWithTag(score: number) {\n    const level = this.getAdjustedLevel(score);\n    return `${level.getTag()} - ${this.formatAdjustedScore(score)}`;\n  }\n  formatAdjustedScore(score: number) {\n    const level = this.getAdjustedLevel(score);\n    return `${level === this ? Math.max(score, 0) : level.getStartingPoint()}${\n      level.getMaxPoint() ? \"/\" + level.getMaxPoint() : \"\"\n    }`;\n  }\n}\nexport function getLevelTag(levelId: number) {\n  return new Level(levelId).getTag();\n}\nexport type LevelWithDelta = {\n  id: number;\n  score: number;\n  delta: number;\n};\nexport const LevelWithDelta = Object.freeze({\n  format(obj: LevelWithDelta): string {\n    return new Level(obj.id).formatAdjustedScoreWithTag(obj.score + obj.delta);\n  },\n  formatAdjustedScore(obj: LevelWithDelta): string {\n    return new Level(obj.id).formatAdjustedScore(obj.score + obj.delta);\n  },\n  getTag(obj: LevelWithDelta): string {\n    return LevelWithDelta.getAdjustedLevel(obj).getTag();\n  },\n  getAdjustedLevel(obj: LevelWithDelta): Level {\n    return new Level(obj.id).getAdjustedLevel(obj.score + obj.delta);\n  }\n});\n","import { useState, useEffect, ReactNode } from \"react\";\r\nimport React from \"react\";\r\nimport { ReactComponentLike } from \"prop-types\";\r\nimport { triggerRelayout } from \"../../utils/index\";\r\n\r\nexport function Alert({\r\n  className = \"\",\r\n  type = \"info\",\r\n  container = React.Fragment as ReactComponentLike,\r\n  stateName = \"\",\r\n  closable = true,\r\n  children = undefined as ReactNode\r\n}) {\r\n  const stateKey = `alertState_${stateName}`;\r\n  const [closed, setClosed] = useState(() => stateName && !!localStorage.getItem(stateKey));\r\n  useEffect(() => {\r\n    if (stateName && closed) {\r\n      localStorage.setItem(stateKey, \"true\");\r\n    }\r\n  }, [closed, stateName, stateKey]);\r\n  if (closed && closable) {\r\n    return null;\r\n  }\r\n  const Cont = container;\r\n  return (\r\n    <Cont>\r\n      <div className={`alert alert-${type} alert-dismissible fade show ${className}`} role=\"alert\">\r\n        {children}\r\n        {closable && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            onClick={event => {\r\n              event.preventDefault();\r\n              setClosed(true);\r\n              triggerRelayout();\r\n            }}\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </Cont>\r\n  );\r\n}\r\n","import React from \"react\";\nimport dayjs from \"dayjs\";\n\nimport { useParams, useLocation, Redirect } from \"react-router\";\nimport { useModel, Model, ModelPlain } from \"./model\";\nimport { generatePath } from \"./routes\";\nimport { useEffect } from \"react\";\nimport { scrollToTop, triggerRelayout } from \"../../utils/index\";\n\ntype ListingRouteParams = {\n  date?: string;\n  mode?: string;\n  search?: string;\n};\n\ntype PlayerRouteParams = {\n  id: string;\n  startDate?: string;\n  endDate?: string;\n  mode?: string;\n};\n\ntype HistoryState = {\n  model: ModelPlain;\n  pathname: string;\n};\n\nfunction parseOptionalDate<T>(s: string | null | undefined, defaultValue: T): dayjs.Dayjs | T {\n  return s ? dayjs(s, \"YYYY-MM-DD\") : defaultValue;\n}\n\nconst ModelBuilders = {\n  player(params: PlayerRouteParams): Model | string {\n    return {\n      type: \"player\",\n      playerId: params.id,\n      startDate: parseOptionalDate(params.startDate, null),\n      endDate: parseOptionalDate(params.endDate, null),\n      selectedMode: params.mode || \"\",\n      version: 0\n    };\n  },\n  listing(params: ListingRouteParams): Model | string {\n    const date = parseOptionalDate(params.date, null);\n    if (date && !date.isValid()) {\n      return \"/\";\n    }\n    return {\n      type: undefined,\n      date: date ? date.startOf(\"day\").valueOf() : null,\n      selectedMode: params.mode || \"\",\n      searchText: params.search || \"\",\n      version: 0\n    };\n  }\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function RouteSync({ view }: { view: keyof typeof ModelBuilders }): React.FunctionComponentElement<any> {\n  const params = useParams();\n  const [model, updateModel] = useModel();\n  const location = useLocation<HistoryState>();\n  useEffect(triggerRelayout, [model.type]);\n  const state = location.state;\n  // console.log(params, model, location, state);\n  if (state && state.model.version === model.version) {\n    delete (model as Model).pendingRouteUpdate;\n    if (location.pathname !== state.pathname) {\n      return <Redirect to={{ pathname: state.pathname, state }} />;\n    }\n    return <></>;\n  }\n  if (!state) {\n    // Navigation\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const modelResult = ModelBuilders[view](params as any);\n    if (typeof modelResult === \"string\") {\n      return <Redirect to={modelResult} />;\n    }\n    const newModel: Model = {\n      ...modelResult,\n      version: model.version\n    };\n    updateModel(newModel);\n    scrollToTop();\n    return (\n      <Redirect\n        to={{ pathname: location.pathname, state: { pathname: location.pathname, model: Model.toPlain(newModel) } }}\n      />\n    );\n  }\n  if (model.pendingRouteUpdate) {\n    // Model updated\n    const newPath = generatePath(model);\n    delete (model as Model).pendingRouteUpdate; // Do not trigger update\n    return <Redirect to={{ pathname: newPath, state: { pathname: newPath, model: Model.toPlain(model) } }} />;\n  } else {\n    const restoredModel = Model.fromPlain(state.model);\n    updateModel(restoredModel);\n    return <></>;\n  }\n}\n","import { useCallback } from \"react\";\r\nimport React from \"react\";\r\n\r\nimport { FormRow, DatePicker } from \"../form\";\r\nimport { useModel } from \"./model\";\r\nimport dayjs from \"dayjs\";\r\nimport { DATE_MIN } from \"../../utils/constants\";\r\nimport { ModeSelector } from \"./modeSelector\";\r\n\r\nconst DEFAULT_DATE = dayjs().startOf(\"day\");\r\n\r\nexport function FilterPanel({ className = \"\" }) {\r\n  const [model, updateModel] = useModel();\r\n  const updateSearchTextFromEvent = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => updateModel({ searchText: e.currentTarget.value }),\r\n    [updateModel]\r\n  );\r\n  const setMode = useCallback((mode: string) => updateModel({ selectedMode: mode }), [updateModel]);\r\n  const setDate = useCallback((date: dayjs.ConfigType) => updateModel({ date }), [updateModel]);\r\n  if (model.type !== undefined) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={className}>\r\n      <FormRow title=\"日期\">\r\n        <DatePicker min={DATE_MIN} date={model.date || DEFAULT_DATE} onChange={setDate} className=\"form-control\" />\r\n      </FormRow>\r\n      <FormRow title=\"查找玩家\">\r\n        <input type=\"text\" className=\"form-control\" value={model.searchText} onChange={updateSearchTextFromEvent} />\r\n      </FormRow>\r\n      <FormRow>\r\n        <ModeSelector mode={model.selectedMode} onChange={setMode} />\r\n      </FormRow>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { useEffect, useState, useMemo } from \"react\";\n\nimport { useModel } from \"./model\";\nimport Loading from \"../misc/loading\";\nimport { PlayerMetadataLite, getLevelTag } from \"../../data/types\";\nimport { searchPlayer } from \"../../data/source/misc\";\nimport { Link } from \"react-router-dom\";\nimport { generatePlayerPathById } from \"./routes\";\n\nconst playerSearchCache = {} as { [prefix: string]: PlayerMetadataLite[] | Promise<PlayerMetadataLite[]> };\nconst NUM_RESULTS_SHOWN = 6;\nconst NUM_FETCH = 20;\n\nconst normalizeName = (s: string) => s.toLowerCase().trim();\n\nfunction findRawResultFromCache(prefix: string): { result: PlayerMetadataLite[]; isExactMatch: boolean } | null {\n  const normalizedPrefix = normalizeName(prefix);\n  prefix = normalizedPrefix;\n  while (prefix) {\n    const players = playerSearchCache[prefix];\n    if (!players || players instanceof Promise) {\n      prefix = prefix.slice(0, prefix.length - 1);\n      continue;\n    }\n    return {\n      isExactMatch: prefix === normalizedPrefix,\n      result: players\n    };\n  }\n  return null;\n}\n\nfunction PlayerSearchResult({ searchText }: { searchText: string }) {\n  const [version, setVersion] = useState(0);\n  const [players, isLoading, mayHaveMore] = useMemo(() => {\n    const cachedResult = findRawResultFromCache(searchText);\n    if (!cachedResult) {\n      return [[], true];\n    }\n    if (cachedResult.isExactMatch) {\n      return [cachedResult.result, false];\n    }\n    const normalizedPrefix = normalizeName(searchText);\n    let mayHaveMore = cachedResult.result.length >= NUM_FETCH;\n    const filteredPlayers = [] as PlayerMetadataLite[];\n    cachedResult.result.forEach(player => {\n      if (normalizeName(player.nickname).startsWith(normalizedPrefix)) {\n        filteredPlayers.push(player);\n      } else if (filteredPlayers.length) {\n        // Result covers all players who have the specified prefix\n        mayHaveMore = false;\n      }\n    });\n    return [filteredPlayers, mayHaveMore && filteredPlayers.length < NUM_RESULTS_SHOWN, mayHaveMore];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchText, version]);\n  useEffect(() => {\n    const prefix = normalizeName(searchText);\n    if (playerSearchCache[prefix]) {\n      return;\n    }\n    if (!isLoading) {\n      return;\n    }\n    let cancelled = false;\n    let debounceToken: NodeJS.Timeout | undefined = setTimeout(() => {\n      debounceToken = undefined;\n      if (cancelled) {\n        return;\n      }\n      if (playerSearchCache[prefix]) {\n        return;\n      }\n      playerSearchCache[prefix] = searchPlayer(prefix).then(function(players) {\n        playerSearchCache[prefix] = players;\n        if (!cancelled) {\n          setVersion(new Date().getTime());\n        }\n        return players;\n      });\n    }, 500);\n    return () => {\n      cancelled = true;\n      if (debounceToken) {\n        clearTimeout(debounceToken);\n      }\n    };\n  }, [searchText, isLoading]);\n  return (\n    <>\n      <h6 className=\"text-center mb-2\">玩家前缀搜索</h6>\n      <ul className=\"list-unstyled row mb-2\">\n        {players.slice(0, NUM_RESULTS_SHOWN).map(x => (\n          <li key={x.id} className=\"col-6\">\n            <Link to={generatePlayerPathById(x.id)}>\n              <span>\n                [{getLevelTag(x.level.id)}] {x.nickname}\n              </span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      {(isLoading && <Loading size=\"small\" />) ||\n        ((players.length > NUM_RESULTS_SHOWN || mayHaveMore) && (\n          <small className=\"d-block text-center text-muted\">（输入更长名字显示其它结果）</small>\n        ))}\n    </>\n  );\n}\n\nexport function PlayerSearch({ className = \"\" }) {\n  const [model] = useModel();\n  if (\"playerId\" in model || !model.searchText) {\n    return <></>;\n  }\n  return (\n    <div className={className}>\n      <PlayerSearchResult searchText={model.searchText} />\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport { useCallback, useEffect, useMemo } from \"react\";\r\nimport { TableCellProps, Index } from \"react-virtualized\";\r\nimport { Table, Column } from \"react-virtualized/dist/es/Table\";\r\nimport { AutoSizer } from \"react-virtualized/dist/es/AutoSizer\";\r\nimport dayjs from \"dayjs\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { GameRecord, GameMode } from \"../../data/types\";\r\nimport { Player } from \"./player\";\r\nimport { useScrollerProps } from \"../misc/scroller\";\r\nimport { useDataAdapter } from \"./dataAdapterProvider\";\r\nimport { triggerRelayout } from \"../../utils/index\";\r\nimport Loading from \"../misc/loading\";\r\nimport { CONTEST_MODE } from \"../../data/source/constants\";\r\n\r\nconst formatTime = (x: number) => (x ? dayjs.unix(x).format(\"HH:mm\") : null);\r\n\r\nconst Players = React.memo(({ game, activePlayerId }: { game: GameRecord; activePlayerId?: string }) => (\r\n  <div className=\"row no-gutters\">\r\n    {game.players.map(x => (\r\n      <div key={x.accountId} className=\"col-12 col-md-6 pr-1\">\r\n        <Player game={game} player={x} isActive={x.accountId.toString() === activePlayerId} />\r\n      </div>\r\n    ))}\r\n  </div>\r\n));\r\n\r\nfunction isMobile() {\r\n  return !!window.matchMedia(\"(max-width: 575.75px)\").matches;\r\n}\r\n\r\nconst cellFormatTime = ({ cellData }: TableCellProps) => formatTime(cellData);\r\nconst cellFormatFullTime = ({ rowData }: TableCellProps) =>\r\n  rowData.loading ? \"\" : isMobile() ? GameRecord.formatStartDate(rowData) : GameRecord.formatFullStartTime(rowData);\r\nconst cellFormatRank = ({ rowData, columnData }: TableCellProps) =>\r\n  !rowData || rowData.loading || !columnData.activePlayerId ? (\r\n    \"\"\r\n  ) : (\r\n    <span\r\n      className=\"font-weight-bold\"\r\n      style={{ color: GameRecord.getPlayerRankColor(rowData, columnData.activePlayerId) }}\r\n    >\r\n      {GameRecord.getPlayerRankLabel(rowData, columnData.activePlayerId).slice(0, 1)}\r\n    </span>\r\n  );\r\nconst cellFormatGameMode = ({ cellData }: TableCellProps) => GameMode[cellData];\r\n\r\nfunction getRowHeight() {\r\n  if (window.matchMedia(\"(min-width: 768px)\").matches) {\r\n    return 70;\r\n  }\r\n  if (!isMobile()) {\r\n    return 140;\r\n  }\r\n  return 100;\r\n}\r\n\r\ntype TableColumnDefKey = {\r\n  key?: string;\r\n};\r\nexport type TableColumn = React.FunctionComponentElement<Column> | false | undefined | null;\r\nexport type TableColumnDef = TableColumnDefKey & (() => TableColumn);\r\n\r\nfunction makeColumn<T extends (string | number)[]>(\r\n  builder: (...args: T) => TableColumn\r\n): (...args: T) => TableColumnDef {\r\n  const key = Math.random().toString();\r\n  const newBuilder = (...args: T) => {\r\n    const outer = () => {\r\n      const ret = builder(...args);\r\n      if (ret) {\r\n        return React.cloneElement(ret, { key });\r\n      }\r\n      return ret;\r\n    };\r\n    outer.key = key + args.join(\"-\");\r\n    return outer;\r\n  };\r\n  return newBuilder;\r\n}\r\n\r\nexport const COLUMN_GAMEMODE = makeColumn(\r\n  () =>\r\n    !CONTEST_MODE && (\r\n      <Column\r\n        dataKey=\"modeId\"\r\n        label={isMobile() ? \"\" : \"等级\"}\r\n        cellRenderer={cellFormatGameMode}\r\n        width={isMobile() ? 20 : 40}\r\n      />\r\n    )\r\n)();\r\n\r\nexport const COLUMN_RANK = makeColumn((activePlayerId: number | string) => (\r\n  <Column\r\n    dataKey=\"modeId\"\r\n    label={isMobile() ? \"\" : \"顺位\"}\r\n    columnData={{ activePlayerId }}\r\n    cellRenderer={cellFormatRank}\r\n    width={isMobile() ? 20 : 40}\r\n  />\r\n));\r\n\r\nexport const COLUMN_PLAYERS = makeColumn((activePlayerId: number | string) => (\r\n  <Column\r\n    dataKey=\"players\"\r\n    label=\"玩家\"\r\n    cellRenderer={({ rowData }: TableCellProps) =>\r\n      rowData && rowData.players ? <Players game={rowData} activePlayerId={activePlayerId.toString()} /> : null\r\n    }\r\n    width={120}\r\n    flexGrow={1}\r\n  />\r\n));\r\n\r\nexport const COLUMN_STARTTIME = makeColumn(() => (\r\n  <Column\r\n    dataKey=\"startTime\"\r\n    label=\"开始\"\r\n    cellRenderer={cellFormatTime}\r\n    width={isMobile() ? 40 : 50}\r\n    className=\"text-right\"\r\n    headerClassName=\"text-right\"\r\n  />\r\n))();\r\n\r\nexport const COLUMN_ENDTIME = makeColumn(() => (\r\n  <Column\r\n    dataKey=\"endTime\"\r\n    label=\"结束\"\r\n    cellRenderer={cellFormatTime}\r\n    width={isMobile() ? 40 : 50}\r\n    headerClassName=\"text-right\"\r\n    className=\"text-right\"\r\n  />\r\n))();\r\n\r\nexport const COLUMN_FULLTIME = makeColumn(() => (\r\n  <Column\r\n    dataKey=\"startTime\"\r\n    label=\"时间\"\r\n    cellRenderer={cellFormatFullTime}\r\n    width={isMobile() ? 40 : 140}\r\n    className=\"text-right\"\r\n    headerClassName=\"text-right\"\r\n  />\r\n))();\r\n\r\nexport default function GameRecordTable({\r\n  columns,\r\n  withActivePlayer = false\r\n}: {\r\n  columns: TableColumnDef[];\r\n  withActivePlayer?: boolean;\r\n}) {\r\n  const data = useDataAdapter();\r\n  const scrollerProps = useScrollerProps();\r\n  const { isScrolling, onChildScroll, scrollTop, height, registerChild } = scrollerProps;\r\n  const rowGetter = useCallback(({ index }: Index) => data.getItem(index), [data]);\r\n  const getRowClassName = useCallback(\r\n    ({ index }: Index) => (index >= 0 ? clsx({ loading: !data.isItemLoaded(index), even: (index & 1) === 0 }) : \"\"),\r\n    [data]\r\n  );\r\n  const noRowsRenderer = useCallback(() => (data.getUnfilteredCount() ? null : <Loading />), [data]);\r\n  const unfilteredCount = data.getUnfilteredCount();\r\n  const shouldTriggerLayout = !!unfilteredCount;\r\n  useEffect(() => {\r\n    triggerRelayout();\r\n  }, [shouldTriggerLayout]);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const memoColumns = useMemo(() => columns.map(x => x()).filter(x => x), [\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    isMobile(),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    ...columns.map(x => x.key || x)\r\n  ]);\r\n  return (\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    <div ref={registerChild as any} className=\"font-xs-adjust\">\r\n      <AutoSizer disableHeight>\r\n        {({ width }) => (\r\n          <Table\r\n            autoHeight\r\n            className={withActivePlayer ? \"with-active-player\" : \"\"}\r\n            rowCount={data.getCount()}\r\n            rowGetter={rowGetter}\r\n            rowHeight={getRowHeight()}\r\n            headerHeight={50}\r\n            width={width}\r\n            height={height}\r\n            isScrolling={isScrolling}\r\n            onScroll={onChildScroll}\r\n            scrollTop={scrollTop}\r\n            rowClassName={getRowClassName}\r\n            noRowsRenderer={noRowsRenderer}\r\n          >\r\n            {memoColumns}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\n\nimport { Switch, Route, Redirect, generatePath as genPath } from \"react-router-dom\";\n\nimport { Model, useModel } from \"./model\";\nimport dayjs from \"dayjs\";\nimport { RouteSync } from \"./routeSync\";\nimport { FilterPanel } from \"./filterPanel\";\nimport Loadable from \"../misc/customizedLoadable\";\nimport Loading from \"../misc/loading\";\nimport { PlayerSearch } from \"./playerSearch\";\nimport { COLUMN_RANK } from \"./table\";\nimport {\n  default as GameRecordTable,\n  COLUMN_GAMEMODE,\n  COLUMN_PLAYERS,\n  COLUMN_STARTTIME,\n  COLUMN_ENDTIME,\n  COLUMN_FULLTIME\n} from \"./table\";\nconst PlayerDetails = Loadable({\n  loader: () => import(\"../playerDetails/playerDetails\"),\n  loading: () => <Loading />\n});\n\nconst PLAYER_PATH = \"/player/:id/:mode([0-9]+)?/:startDate(\\\\d{4}-\\\\d{2}-\\\\d{2})?/:endDate(\\\\d{4}-\\\\d{2}-\\\\d{2})?\";\nconst PATH = \"/:date(\\\\d{4}-\\\\d{2}-\\\\d{2})/:mode([0-9]+)?/:search?\";\n\nexport function generatePath(model: Model): string {\n  if (model.type === \"player\") {\n    return genPath(PLAYER_PATH, {\n      id: model.playerId,\n      startDate: model.startDate ? dayjs(model.startDate).format(\"YYYY-MM-DD\") : undefined,\n      endDate: model.endDate ? dayjs(model.endDate).format(\"YYYY-MM-DD\") : undefined,\n      mode: model.selectedMode || undefined\n    });\n  }\n  if (!model.selectedMode && !model.searchText && !model.date) {\n    return \"/\";\n  }\n  return genPath(PATH, {\n    date: dayjs(model.date || new Date()).format(\"YYYY-MM-DD\"),\n    mode: model.selectedMode || undefined,\n    search: model.searchText || undefined\n  });\n}\nexport function generatePlayerPathById(playerId: number | string): string {\n  return generatePath({\n    type: \"player\",\n    playerId: playerId.toString(),\n    startDate: null,\n    endDate: null,\n    selectedMode: \"\",\n    version: 0\n  });\n}\n\nfunction GameRecordTablePlayerView() {\n  const [model] = useModel();\n  if (!(\"playerId\" in model)) {\n    return null;\n  }\n  return (\n    <GameRecordTable\n      withActivePlayer\n      columns={[COLUMN_GAMEMODE, COLUMN_RANK(model.playerId), COLUMN_PLAYERS(model.playerId), COLUMN_FULLTIME]}\n    />\n  );\n}\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact path={PLAYER_PATH}>\n        <RouteSync view=\"player\" />\n        <PlayerDetails />\n        <GameRecordTablePlayerView />\n      </Route>\n      <Route exact path={[\"/\", PATH]}>\n        <RouteSync view=\"listing\" />\n        <div className=\"row\">\n          <FilterPanel className=\"col\" />\n          <PlayerSearch className=\"col-12 col-sm-6 col-md-4\" />\n        </div>\n        <GameRecordTable columns={[COLUMN_GAMEMODE, COLUMN_PLAYERS(\"\"), COLUMN_STARTTIME, COLUMN_ENDTIME]} />\n      </Route>\n      <Route>\n        <Redirect to=\"/\" />\n      </Route>\n    </Switch>\n  );\n}\nexport default Routes;\n","/* eslint-disable @typescript-eslint/camelcase */\nimport dayjs from \"dayjs\";\n\nimport { GameRecord } from \"../../types/record\";\nimport { Metadata, PlayerMetadata, PlayerExtendedStats } from \"../../types/metadata\";\nimport { apiGet } from \"../api\";\n\nexport interface DataLoader<T extends Metadata, TRecord = GameRecord> {\n  getMetadata(): Promise<T>;\n  getRecords(skip: number, limit: number, cacheTag?: string): Promise<TRecord[]>;\n}\n\nexport class ListingDataLoader implements DataLoader<Metadata> {\n  _date: dayjs.Dayjs;\n  constructor(date: dayjs.ConfigType) {\n    this._date = dayjs(date).startOf(\"day\");\n  }\n  async getMetadata(): Promise<Metadata> {\n    return await apiGet<Metadata>(`count/${this._date.valueOf()}`);\n  }\n  async getRecords(skip: number, limit: number, cacheTag = \"\"): Promise<GameRecord[]> {\n    return await apiGet<GameRecord[]>(`games/${this._date.valueOf()}?skip=${skip}&limit=${limit}&tag=${cacheTag}`);\n  }\n}\n\nexport class PlayerDataLoader implements DataLoader<PlayerMetadata> {\n  _playerId: string;\n  _startDate?: dayjs.Dayjs;\n  _endDate?: dayjs.Dayjs;\n  _mode: string;\n  constructor(playerId: string, startDate?: dayjs.Dayjs, endDate?: dayjs.Dayjs, mode = \"\") {\n    this._playerId = playerId;\n    this._startDate = startDate;\n    this._endDate = endDate;\n    this._mode = mode;\n  }\n  _getDatePath(): string {\n    let result = \"\";\n    if (this._startDate) {\n      result += `/${this._startDate.valueOf()}`;\n      if (this._endDate) {\n        result += `/${this._endDate.valueOf()}`;\n      }\n    }\n    return result;\n  }\n  _getParams(): string {\n    return `${this._playerId}${this._getDatePath()}?mode=${this._mode}`;\n  }\n  async getMetadata(): Promise<PlayerMetadata> {\n    return await apiGet<PlayerMetadata>(`player_stats/${this._getParams()}`).then(stats => {\n      stats.extended_stats = apiGet<PlayerExtendedStats>(`player_extended_stats/${this._getParams()}`).then(\n        extendedStats => (stats.extended_stats = extendedStats)\n      );\n      return stats;\n    });\n  }\n  async getRecords(skip: number, limit: number, cacheTag = \"\"): Promise<GameRecord[]> {\n    return await apiGet<GameRecord[]>(\n      `player_records/${this._playerId}${this._getDatePath()}?skip=${skip}&limit=${limit}&mode=${\n        this._mode\n      }&tag=${cacheTag}`\n    );\n  }\n}\n","import dayjs from \"dayjs\";\n\nimport { GameRecord } from \"../../types/record\";\nimport { Metadata } from \"../../types/metadata\";\nimport { ListingDataLoader, PlayerDataLoader, DataLoader } from \"./loader\";\n\nexport type FilterPredicate<TRecord = GameRecord> = ((record: TRecord) => boolean) | null;\nclass DataProviderImpl<\n  TLoader extends DataLoader<TMetadata, TRecord>,\n  TMetadata extends Metadata = TLoader extends DataLoader<infer T> ? T : Metadata,\n  TRecord extends { uuid: string } = GameRecord\n> {\n  _loader: TLoader;\n  _metadata: TMetadata | Promise<TMetadata> | null;\n  _countPromise: Promise<number> | null;\n  _chunks: (TRecord[] | Promise<TRecord[]>)[];\n  _itemsPerChunk: number;\n  _filterPredicate: FilterPredicate<TRecord>;\n  _filteredIndices: number[] | null;\n  _filterResultCache: { [uuid: string]: boolean };\n\n  constructor(loader: TLoader, itemsPerChunk = 100) {\n    this._loader = loader;\n    this._metadata = null;\n    this._countPromise = null;\n    this._chunks = [];\n    this._itemsPerChunk = itemsPerChunk;\n    this._filterPredicate = null;\n    this._filteredIndices = null;\n    this._filterResultCache = {};\n  }\n  setFilterPredicate(predicate: FilterPredicate<TRecord>) {\n    if (this._filterPredicate === predicate) {\n      return;\n    }\n    this._filterPredicate = predicate;\n    this._filterResultCache = {};\n    this.updateFilteredIndices();\n  }\n  updateFilteredIndices() {\n    this._filteredIndices = null;\n    if (!this._filterPredicate) {\n      return;\n    }\n    const metadata = this.getMetadataSync();\n    if (!metadata) {\n      return;\n    }\n    const count = metadata.count;\n    let numShownItems = 0;\n    let numLoadedItems = 0;\n    const indices = [];\n    for (let i = 0; i < count; i++) {\n      const chunk = this._chunks[Math.floor(i / this._itemsPerChunk)];\n      if (!chunk || chunk instanceof Promise) {\n        indices.push(i);\n        continue;\n      }\n      numLoadedItems++;\n      const game = chunk[i % this._itemsPerChunk];\n      let result = this._filterResultCache[game.uuid];\n      if (result === undefined) {\n        this._filterResultCache[game.uuid] = result = this._filterPredicate(game);\n      }\n      if (result) {\n        indices.push(i);\n        numShownItems++;\n      }\n    }\n    this._filteredIndices = indices;\n    if (numShownItems < 10 && numLoadedItems >= this._itemsPerChunk) {\n      this._triggerFullLoad();\n    }\n  }\n  getMetadataSync(): TMetadata | null {\n    return this._metadata && !(this._metadata instanceof Promise) ? this._metadata : null;\n  }\n  getCountMaybeSync(): number | Promise<number> {\n    const metadata = this.getMetadataSync();\n    if (metadata) {\n      return this._filteredIndices ? this._filteredIndices.length : metadata.count;\n    }\n    return this.getCount();\n  }\n  async getCount(): Promise<number> {\n    const metadata = this.getMetadataSync();\n    if (metadata) {\n      return this.getCountMaybeSync();\n    }\n    if (!this._metadata) {\n      this._metadata = this._loader.getMetadata().then(metadata => {\n        if (!metadata) {\n          console.log(\"No metadata returned\");\n          throw new Error(\"No metadata returned\");\n        }\n        this._metadata = metadata;\n        this.updateFilteredIndices();\n        this._countPromise = null;\n        return metadata;\n      });\n    }\n    if (this._countPromise) {\n      return this._countPromise;\n    }\n    this._countPromise = Promise.resolve(this._metadata)\n      .then(() => new Promise(resolve => setTimeout(resolve, 100)))\n      .then(() => this.getCountMaybeSync());\n    return this._countPromise;\n  }\n  getUnfilteredCountSync(): number | null {\n    const metadata = this.getMetadataSync();\n    if (!metadata) {\n      return null;\n    }\n    return metadata.count;\n  }\n  isItemLoaded(index: number): boolean {\n    const mappedIndex = this._mapItemIndex(index);\n    if (mappedIndex === null) {\n      return false;\n    }\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\n    return !!this._chunks[chunkNumber] && !(this._chunks[chunkNumber] instanceof Promise);\n  }\n  getItem(index: number, skipPreload = false): TRecord | Promise<TRecord | null> {\n    const mappedIndex = this._mapItemIndex(index);\n    if (mappedIndex === null) {\n      return this.getCount().then(count => {\n        if (index > count - 1 || this._mapItemIndex(index) === null) {\n          return null;\n        }\n        return this.getItem(index);\n      });\n    }\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\n    const innerIndex = mappedIndex % this._itemsPerChunk;\n    const chunk = this._chunks[chunkNumber];\n    if (!chunk || chunk instanceof Promise) {\n      return this._getChunk(chunkNumber).then(chunk => chunk[innerIndex]);\n    }\n    if (!skipPreload && !this._filteredIndices) {\n      this.preload(index + this._itemsPerChunk);\n    }\n    return chunk[innerIndex];\n  }\n  preload(index: number) {\n    const count = this.getCountMaybeSync();\n    if (count instanceof Promise) {\n      return;\n    }\n    if (index >= count) {\n      return;\n    }\n    this.getItem(index, true);\n  }\n  _mapItemIndex(requestedIndex: number): number | null {\n    const count = this.getCountMaybeSync();\n    if (count instanceof Promise) {\n      return null;\n    }\n    if (requestedIndex < 0) {\n      return null;\n    }\n    // Descending order\n    const reversed = count - requestedIndex - 1;\n    if (reversed < 0) {\n      return null;\n    }\n    return this._filteredIndices ? this._filteredIndices[reversed] : reversed;\n  }\n  async _getChunk(chunkIndex: number): Promise<TRecord[]> {\n    if (!this._chunks[chunkIndex]) {\n      this._chunks[chunkIndex] = this._loadChunk(chunkIndex);\n    }\n    return this._chunks[chunkIndex];\n  }\n  _triggerFullLoad() {\n    const count = this.getCountMaybeSync();\n    if (typeof count !== \"number\") {\n      return;\n    }\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\n    for (let i = 0; i < numChunks; i++) {\n      if (this._chunks[i]) {\n        continue;\n      }\n      this._getChunk(i);\n    }\n  }\n  async _loadChunk(chunkIndex: number): Promise<TRecord[]> {\n    const count = await this.getCount();\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\n    if (!numChunks) {\n      return [];\n    }\n    if (chunkIndex >= numChunks) {\n      console.warn(`Loading out-of-index chunk: ${chunkIndex}, number of items: ${count}`);\n      return [];\n    }\n    const chunk = await this._loader.getRecords(\n      this._itemsPerChunk * chunkIndex,\n      this._itemsPerChunk,\n      chunkIndex === numChunks - 1 ? count.toString() : \"\"\n    );\n    if (chunk.length < this._itemsPerChunk && chunkIndex < numChunks - 1) {\n      console.warn(\"Unexpected number of items in chunk:\", chunk.length);\n    }\n    this._chunks[chunkIndex] = chunk;\n    this.updateFilteredIndices();\n    return chunk;\n  }\n}\n\nexport type ListingDataProvider = DataProviderImpl<ListingDataLoader>;\nexport const ListingDataProvider = Object.freeze({\n  create(date: dayjs.ConfigType): ListingDataProvider {\n    return new DataProviderImpl<ListingDataLoader>(new ListingDataLoader(date));\n  }\n});\nexport type PlayerDataProvider = DataProviderImpl<PlayerDataLoader>;\nexport const PlayerDataProvider = Object.freeze({\n  create(\n    playerId: string,\n    startDate: dayjs.ConfigType | null,\n    endDate: dayjs.ConfigType | null,\n    mode: string\n  ): PlayerDataProvider {\n    return new DataProviderImpl<PlayerDataLoader>(\n      new PlayerDataLoader(\n        playerId,\n        startDate ? dayjs(startDate).startOf(\"day\") : undefined,\n        endDate ? dayjs(endDate).endOf(\"day\") : undefined,\n        mode\n      )\n    );\n  }\n});\nexport type DataProvider = ListingDataProvider | PlayerDataProvider;\n","import { useState, useEffect, useMemo, useCallback, useContext } from \"react\";\r\nimport React, { ReactChild } from \"react\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport {\r\n  DataProvider,\r\n  FilterPredicate,\r\n  ListingDataProvider,\r\n  PlayerDataProvider\r\n} from \"../../data/source/records/provider\";\r\nimport { useModel, Model } from \"./model\";\r\nimport { Metadata, GameRecord } from \"../../data/types\";\r\nimport { generatePath } from \"./routes\";\r\n\r\ninterface ItemLoadingPlaceholder {\r\n  loading: boolean;\r\n}\r\n\r\nconst loadingPlaceholder = { loading: true };\r\n\r\n// eslint-disable-next-line @typescript-eslint/interface-name-prefix\r\nexport interface IDataAdapter {\r\n  getCount(): number;\r\n  getUnfilteredCount(): number;\r\n  getMetadata<T extends Metadata>(): T | null;\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder;\r\n  isItemLoaded(index: number): boolean;\r\n}\r\n\r\nclass DummyDataAdapter implements IDataAdapter {\r\n  getCount(): number {\r\n    return 0;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return 0;\r\n  }\r\n  getMetadata<T extends Metadata>(): T | null {\r\n    return null;\r\n  }\r\n  getItem(): GameRecord | ItemLoadingPlaceholder {\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const DUMMY_DATA_ADAPTER = new DummyDataAdapter() as IDataAdapter;\r\n\r\nconst noop = () => {};\r\n\r\nclass DataAdapter implements IDataAdapter {\r\n  _provider: DataProvider;\r\n  _onDataUpdate: (isError: boolean) => void;\r\n  _triggeredRequest: boolean;\r\n\r\n  constructor(provider: DataProvider, onDataUpdate = noop) {\r\n    this._provider = provider;\r\n    this._onDataUpdate = onDataUpdate;\r\n    this._triggeredRequest = false;\r\n  }\r\n  _installHook<T>(promise: Promise<T>) {\r\n    if (this._triggeredRequest) {\r\n      return;\r\n    }\r\n    this._triggeredRequest = true;\r\n    promise.then(() => this._callHook(false)).catch(() => this._callHook(true));\r\n  }\r\n  _callHook(isError: boolean) {\r\n    this._onDataUpdate(isError);\r\n  }\r\n  getCount(): number {\r\n    const maybeCount = this._provider.getCountMaybeSync();\r\n    if (maybeCount instanceof Promise) {\r\n      this._installHook(maybeCount);\r\n      return 0;\r\n    }\r\n    return maybeCount;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return this._provider.getUnfilteredCountSync() || 0;\r\n  }\r\n  getMetadata<T extends Metadata>(): T | null {\r\n    return this._provider.getMetadataSync() as T | null;\r\n  }\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder {\r\n    if (index >= this.getCount()) {\r\n      return loadingPlaceholder;\r\n    }\r\n    if (this._provider.isItemLoaded(index)) {\r\n      return this._provider.getItem(index) as GameRecord;\r\n    }\r\n    if (!this._triggeredRequest) {\r\n      this._installHook(this._provider.getItem(index) as Promise<GameRecord>);\r\n    }\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    if (index < 0) {\r\n      return false;\r\n    }\r\n    return this._provider.isItemLoaded(index);\r\n  }\r\n  setUpdateHook(hook: () => void) {\r\n    this._onDataUpdate = hook;\r\n  }\r\n  cancelUpdateHook() {\r\n    this._onDataUpdate = noop;\r\n  }\r\n}\r\n\r\nconst DataAdapterContext = React.createContext(DUMMY_DATA_ADAPTER);\r\n\r\nexport const useDataAdapter = () => useContext(DataAdapterContext);\r\nexport const DataAdapterConsumer = DataAdapterContext.Consumer;\r\n\r\nfunction getProviderKey(model: Model): string {\r\n  if (model.type === undefined) {\r\n    return dayjs(model.date || dayjs())\r\n      .startOf(\"day\")\r\n      .valueOf()\r\n      .toString();\r\n  } else if (model.type === \"player\") {\r\n    return generatePath(model);\r\n  }\r\n  throw new Error(\"Unknown model type\");\r\n}\r\n\r\nfunction createProvider(model: Model): DataProvider {\r\n  if (model.type === undefined) {\r\n    return ListingDataProvider.create(model.date || dayjs().startOf(\"day\"));\r\n  }\r\n  if (model.type === \"player\") {\r\n    return PlayerDataProvider.create(model.playerId, model.startDate, model.endDate, model.selectedMode);\r\n  }\r\n  throw new Error(\"Not implemented\");\r\n}\r\n\r\nfunction usePredicate(model: Model): FilterPredicate {\r\n  let memoFunc: () => FilterPredicate = () => null;\r\n  let memoDeps = [null, \"\"];\r\n  if (model.type === undefined) {\r\n    const searchText = (model.searchText || \"\").trim() || \"\";\r\n    const needPredicate = searchText || model.selectedMode;\r\n    memoFunc = () =>\r\n      needPredicate\r\n        ? game => {\r\n            if (model.selectedMode && model.selectedMode !== game.modeId.toString()) {\r\n              return false;\r\n            }\r\n            if (!game.players.some(player => player.nickname.toLowerCase().indexOf(searchText) > -1)) {\r\n              return false;\r\n            }\r\n            return true;\r\n          }\r\n        : null;\r\n    memoDeps = [(model.type === undefined && model.selectedMode) || null, searchText];\r\n  }\r\n  return useMemo(memoFunc, memoDeps);\r\n}\r\n\r\nexport function DataAdapterProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const [model, updateModel] = useModel();\r\n  const [dataProviders] = useState(() => ({} as { [key: string]: DataProvider }));\r\n  const searchPredicate = usePredicate(model);\r\n  const dataProvider = useMemo(() => {\r\n    const key = getProviderKey(model);\r\n    if (!dataProviders[key]) {\r\n      dataProviders[key] = createProvider(model);\r\n    }\r\n    return dataProviders[key];\r\n  }, [model, dataProviders]);\r\n  const [dataAdapter, setDataAdapter] = useState(() => DUMMY_DATA_ADAPTER);\r\n  const refreshDataAdapter = useCallback(\r\n    (isError?: boolean) => {\r\n      if (isError) {\r\n        updateModel(Model.removeExtraParams(model));\r\n        return;\r\n      }\r\n      dataProvider.setFilterPredicate(searchPredicate);\r\n      const adapter = new DataAdapter(dataProvider);\r\n      setDataAdapter(adapter);\r\n    },\r\n    [dataProvider, searchPredicate, model, updateModel]\r\n  );\r\n  useEffect(refreshDataAdapter, [refreshDataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      return () => adapter.cancelUpdateHook();\r\n    }\r\n  }, [dataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      adapter.setUpdateHook(refreshDataAdapter);\r\n    }\r\n  }, [dataAdapter, refreshDataAdapter]);\r\n  useEffect(() => {\r\n    dataProvider.getCountMaybeSync(); // Preload metadata\r\n  }, [dataProvider]);\r\n  return <DataAdapterContext.Provider value={dataAdapter}>{children}</DataAdapterContext.Provider>;\r\n}\r\n","import React, { ReactChild, useContext } from \"react\";\r\n\r\nimport { WindowScrollerChildProps } from \"react-virtualized\";\r\nimport { WindowScroller } from \"react-virtualized/dist/es/WindowScroller\";\r\n\r\nconst ScrollerContext = React.createContext<WindowScrollerChildProps>({} as any);\r\n\r\nexport const useScrollerProps = () => useContext(ScrollerContext);\r\n\r\nfunction Scroller({ children }: { children: ReactChild | ReactChild[] }) {\r\n  return (\r\n    <WindowScroller>\r\n      {scrollerProps => <ScrollerContext.Provider value={scrollerProps}>{children}</ScrollerContext.Provider>}\r\n    </WindowScroller>\r\n  );\r\n}\r\nexport default Scroller;\r\n","/* eslint-disable @typescript-eslint/camelcase */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable no-use-before-define */\nimport dayjs from \"dayjs\";\n\nimport { apiGet } from \"./api\";\nimport { PlayerMetadataLite, PlayerExtendedStats } from \"../types\";\nimport { RankingTimeSpan, DeltaRankingResponse } from \"../types\";\nimport { RankRateBySeat } from \"../types\";\nimport { CareerRankingItem, CareerRankingType } from \"../types/ranking\";\nimport { GlobalStatistics, FanStats } from \"../types/statistics\";\n\nexport async function searchPlayer(prefix: string, limit = 20): Promise<PlayerMetadataLite[]> {\n  prefix = prefix.trim();\n  if (!prefix) {\n    return [];\n  }\n  return apiGet<PlayerMetadataLite[]>(`search_player/${encodeURIComponent(prefix)}?limit=${limit}`);\n}\n\nexport async function getExtendedStats(\n  playerId: number,\n  startDate?: dayjs.ConfigType,\n  endDate?: dayjs.ConfigType,\n  mode = \"\"\n): Promise<PlayerExtendedStats> {\n  let datePath = \"\";\n  if (startDate) {\n    datePath += `/${dayjs(startDate).valueOf()}`;\n    if (endDate) {\n      datePath += `/${dayjs(endDate).valueOf()}`;\n    }\n  }\n  return await apiGet<PlayerExtendedStats>(`player_extended_stats/${playerId}${datePath}?mode=${mode}`);\n}\n\nexport async function getDeltaRanking(timespan: RankingTimeSpan): Promise<DeltaRankingResponse> {\n  return await apiGet<DeltaRankingResponse>(`player_delta_ranking/${timespan}`);\n}\n\nexport async function getCareerRanking(type: CareerRankingType, modeId?: string): Promise<CareerRankingItem[]> {\n  return await apiGet<CareerRankingItem[]>(`career_ranking/${type}?mode=${modeId || \"\"}`);\n}\n\nexport async function getGlobalStatistics(): Promise<GlobalStatistics> {\n  return await apiGet<GlobalStatistics>(\"global_statistics\");\n}\nexport async function getFanStats(): Promise<FanStats> {\n  return await apiGet<FanStats>(\"fan_stats\");\n}\n\nexport async function getRankRateBySeat(): Promise<RankRateBySeat> {\n  type RawResponse = [[number, number, number], number][];\n  const rawResp = await apiGet<RawResponse>(\"rank_rate_by_seat\");\n  const counts: {\n    [modeId: string]: { [rank: number]: number };\n  } = {};\n  for (const [[modeId, rank], count] of rawResp) {\n    const modeIdStr = modeId.toString();\n    counts[modeIdStr] = counts[modeIdStr] || [];\n    counts[modeIdStr][rank] = counts[modeIdStr][rank] || 0;\n    counts[modeIdStr][rank] += count;\n  }\n  const result: RankRateBySeat = {};\n  for (const [[modeId, rank, seatId], count] of rawResp) {\n    const modeIdStr = modeId.toString();\n    result[modeIdStr] = result[modeIdStr] || [];\n    result[modeIdStr].numGames = counts[modeIdStr][rank];\n    result[modeIdStr][rank] = result[modeIdStr][rank] || [0, 0, 0, 0];\n    result[modeIdStr][rank][seatId] = count / counts[modeIdStr][rank];\n  }\n  return result;\n}\n","import React from \"react\";\n\nimport { CheckboxGroup } from \"../form\";\nimport { GameMode } from \"../../data/types\";\n\nconst MODE_CHECKBOXES = Object.keys(GameMode)\n  .filter(x => typeof GameMode[x as keyof typeof GameMode] !== \"string\")\n  .map(x => ({\n    key: String(GameMode[x as keyof typeof GameMode]),\n    label: x\n  }));\nMODE_CHECKBOXES.unshift({\n  key: \"\",\n  label: \"全部\"\n});\n\nexport function ModeSelector({ mode, onChange }: { mode: string; onChange: (x: string) => void }) {\n  return (\n    <CheckboxGroup\n      type=\"radio\"\n      groupKey=\"ModeSelector\"\n      items={MODE_CHECKBOXES}\n      selectedItemKey={mode || \"\"}\n      onChange={onChange}\n    />\n  );\n}\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const FormRow = ({ title = \"\", inline = false, children = undefined as ReactNode }) => (\r\n  <div className=\"form-group row\">\r\n    <label className={`col-${inline ? \"lg\" : \"md\"}-2 col-form-label`}>{title}</label>\r\n    <div className={`col-${inline ? \"lg\" : \"md\"}-10 ${inline ? \"form-inline\" : \"\"}`}>{children}</div>\r\n  </div>\r\n);\r\n","/* eslint-disable @typescript-eslint/camelcase */\nimport { LevelWithDelta, Level } from \"./level\";\nimport { GameMode } from \"./gameMode\";\n\nconst RANK_DELTA = [15, 5, -5, -15];\nconst MODE_DELTA = {\n  \"12\": [110, 55, 0, 0],\n  \"16\": [120, 60, 0, 0]\n};\n\ntype RankRates = [number, number, number, number];\n\nexport interface PlayerExtendedStats {\n  和牌率: number;\n  自摸率: number;\n  默听率: number;\n  放铳率: number;\n  副露率: number;\n  立直率: number;\n  平均打点: number;\n  最大连庄?: number;\n  和了巡数: number;\n  平均铳点: number;\n  流局率: number;\n  流听率: number;\n  里宝率: number;\n  一发率: number;\n  被炸率: number;\n  平均被炸点数: number;\n  放铳时立直率: number;\n  放铳时副露率: number;\n  立直后放铳率: number;\n  副露后放铳率: number;\n  立直后和牌率: number;\n  副露后和牌率: number;\n  立直后流局率: number;\n  副露后流局率: number;\n  役满?: number;\n  累计役满?: number;\n  最大累计番数?: number;\n  W立直?: number;\n  流满?: number;\n  平均起手向听: number;\n  最近大铳?: {\n    id: string;\n    start_time: number;\n    fans: {\n      label: string;\n      count: number;\n      役满: number;\n    }[];\n  };\n}\nexport interface Metadata {\n  count: number;\n}\nexport interface PlayerMetadataLite extends Metadata {\n  id: number;\n  nickname: string;\n  level: LevelWithDelta;\n}\nexport interface PlayerMetadataLite2 extends Metadata {\n  rank_rates: RankRates;\n  avg_rank: number;\n  negative_rate: number;\n}\nexport interface PlayerMetadata extends PlayerMetadataLite, PlayerMetadataLite2 {\n  rank_avg_score: RankRates;\n  max_level: LevelWithDelta;\n  extended_stats?: PlayerExtendedStats | Promise<PlayerExtendedStats>;\n}\n\nfunction calculateDeltaPoint(\n  score: number,\n  rank: number,\n  mode: GameMode,\n  level: Level,\n  includePenalty = true,\n  trimNumber = true\n): number {\n  let result =\n    (trimNumber ? Math.ceil : (x: number) => x)((score - 25000) / 1000 + RANK_DELTA[rank]) +\n    MODE_DELTA[mode.toString() as keyof typeof MODE_DELTA][rank];\n  if (rank === 3 && includePenalty) {\n    result -= level.getPenaltyPoint();\n  }\n  /*\n  console.log(\n    `calculateDeltaPoint: score=${score}, rank=${rank}, mode=${mode}, level=${level.getTag()}, result=${result}`\n  );\n  */\n  return result;\n}\n\nexport const PlayerMetadata = Object.freeze({\n  calculateRankDeltaPoints(\n    metadata: PlayerMetadata,\n    mode: GameMode,\n    level?: Level,\n    includePenalty = true,\n    trimNumber = true\n  ): RankRates {\n    const rankDeltaPoints = metadata.rank_avg_score.map((score, rank) =>\n      calculateDeltaPoint(\n        score,\n        rank,\n        mode,\n        level || LevelWithDelta.getAdjustedLevel(metadata.level),\n        includePenalty,\n        trimNumber\n      )\n    ) as typeof metadata.rank_avg_score;\n    return rankDeltaPoints;\n  },\n  calculateExpectedGamePoint(metadata: PlayerMetadata, mode: GameMode, level?: Level, includePenalty = true): number {\n    const rankDeltaPoints = PlayerMetadata.calculateRankDeltaPoints(metadata, mode, level, includePenalty);\n    const rankWeightedPoints = rankDeltaPoints.map((point, rank) => point * metadata.rank_rates[rank]);\n    const expectedGamePoint = rankWeightedPoints.reduce((a, b) => a + b, 0);\n    /*\n    console.log(rankDeltaPoints);\n    console.log(rankWeightedPoints);\n    console.log(\n      `calculateExpectedGamePoint: mode=${mode}, level=${level ? level.getTag() : \"\"}, result=${expectedGamePoint}`\n    );\n    */\n    return expectedGamePoint;\n  },\n  estimateStableLevel(metadata: PlayerMetadata, mode: GameMode): string {\n    let level = new Level(metadata.level.id);\n    let lastPositiveLevel: Level | undefined = undefined;\n    for (;;) {\n      const expectedGamePoint = PlayerMetadata.calculateExpectedGamePoint(metadata, mode, level);\n      if (Math.abs(expectedGamePoint) < 0.001) {\n        return level.getTag();\n      }\n      if (expectedGamePoint >= 0) {\n        lastPositiveLevel = level;\n        level = level.getNextLevel();\n        if (!level.isAllowedMode(mode)) {\n          return lastPositiveLevel.getTag() + \"+\";\n        }\n        if (level === lastPositiveLevel) {\n          return level.getTag() + \"+\";\n        }\n      } else {\n        if (lastPositiveLevel) {\n          return lastPositiveLevel.getTag();\n        }\n        break;\n      }\n    }\n    if (!level.getMaxPoint()) {\n      // 魂天不会掉段\n      return level.getTag() + \"-\";\n    }\n    for (;;) {\n      const prevLevel = level.getPreviousLevel();\n      if (!prevLevel.isAllowedMode(mode) || prevLevel === level) {\n        return level.getTag() + \"-\";\n      }\n      level = prevLevel;\n      const expectedGamePoint = PlayerMetadata.calculateExpectedGamePoint(metadata, mode, level);\n      if (expectedGamePoint + 0.001 >= 0) {\n        return level.getTag();\n      }\n    }\n  },\n  formatStableLevel2(level: number): string {\n    const formatNumber = function(x: number): string {\n      // Trim after the second digit after decimal point\n      let s = x.toString();\n      if (s.indexOf(\".\") === -1) {\n        s += \".00\";\n      }\n      if (s.length < 8) {\n        s += \"00\";\n      }\n      return s.slice(0, s.indexOf(\".\") + 3);\n    };\n    if (level >= 7) {\n      return `魂${formatNumber(level - 6)}`;\n    }\n    if (level >= 4) {\n      return `圣${formatNumber(level - 3)}`;\n    }\n    return `豪${formatNumber(level)}`;\n  },\n  getStableLevelComponents(metadata: PlayerMetadata, mode: GameMode): RankRates {\n    return this.calculateRankDeltaPoints(metadata, mode, undefined, false, false);\n  },\n  estimateStableLevel2(metadata: PlayerMetadata, mode: GameMode): string {\n    if (!metadata.rank_rates[3]) {\n      return \"\";\n    }\n    const estimatedPoints = this.calculateExpectedGamePoint(metadata, mode, undefined, false);\n    const result = estimatedPoints / (metadata.rank_rates[3] * 15) - 10;\n    return PlayerMetadata.formatStableLevel2(result);\n  }\n});\n","import { LevelWithDelta } from \"./level\";\nimport { PlayerMetadataLite } from \"./metadata\";\n\nexport enum RankingTimeSpan {\n  OneWeek = \"1w\",\n  FourWeeks = \"4w\"\n}\nexport type DeltaRankingItem = {\n  id: number;\n  nickname: string;\n  level: LevelWithDelta;\n  delta: number;\n};\nexport type DeltaRankingResponse = {\n  [modeId: string]: {\n    top: DeltaRankingItem[];\n    bottom: DeltaRankingItem[];\n  };\n};\nexport interface CareerRankingItem extends PlayerMetadataLite {\n  rank_key: number;\n  count: number;\n}\nexport enum CareerRankingType {\n  Rank1 = \"rank1\",\n  Rank12 = \"rank12\",\n  Rank123 = \"rank123\",\n  Rank4 = \"rank4\",\n  AvgRank = \"avg_rank\",\n  NumGames = \"num_games\",\n  StableLevel = \"stable_level\"\n}\n","export * from \"./constants\";\nexport * from \"./gameMode\";\nexport * from \"./level\";\nexport * from \"./metadata\";\nexport * from \"./record\";\nexport * from \"./ranking\";\nexport * from \"./statistics\";\n"],"sourceRoot":""}