{"version":3,"sources":["components/modeModel/model.tsx","components/routing/index.tsx","components/modeModel/modelModeSelector.tsx","components/modeModel/index.tsx","components/charts/simplePieChart.tsx","components/statistics/rankBySeats.tsx","components/statistics/dataByRank.tsx","components/statistics/fanStats.tsx","components/statistics/index.tsx"],"names":["DEFAULT_MODEL","selectedMode","ModelContext","React","createContext","useModel","useContext","ModelModeProvider","children","useReducer","oldModel","newProps","model","updateModel","value","useMemo","Provider","RouteDef","Error","ViewRoutes","Context","NavButtons","className","replace","keepState","routes","urlBase","useRouteMatch","url","map","route","key","path","to","loc","pathname","state","undefined","exact","activeClassName","title","ViewSwitch","defaultRenderDirectly","mutateTitle","match","useLocation","push","SimpleRoutedSubViews","props","x","slice","ModelModeSelector","setModeId","useCallback","modeId","Conf","availableModes","length","mode","onChange","DEFAULT_COLORS","RADIAN","Math","PI","renderCustomizedLabelFactory","lineHeight","innerLabelFontSize","lines","toString","trim","split","viewBox","cx","cy","outerRadius","startAngle","radius","angle","cos","y","sin","polarToCartesian","endAngle","sign","min","abs","getDeltaAngle","yStart","text","index","stroke","strokeWidth","fill","fontSize","textAnchor","dominantBaseline","defaultInnerLabel","item","innerLabel","defaultOuterLabel","outerLabel","SimplePieChart","items","outerLabelOffset","innerLabelLineHeight","colors","aspect","cells","Array","_","fillOpacity","renderCustomizedLabel","wrappedOuterLabel","ret","offsetRadius","width","height","isAnimationActive","data","nameKey","dataKey","label","valueAccessor","position","content","SEAT_LABELS","Chart","rates","numGames","toFixed","round","HEADERS","SORTERS","a","b","count","ROUTES","useAsyncFactory","getRankRateBySeat","selectedData","getGlobalStatistics","modeData","Object","entries","sort","localeCompare","levelId","levelData","Level","parseInt","getTag","basic","rank_rates","i","formatPercent","negative_rate","formatFixed3","avg_rank","extended","和牌率","放铳率","副露率","立直率","自摸率","流局率","流听率","num_players","floor","reduce","getFanStats","useState","sorterIndex","setSorterIndex","sortedData","keys","modeLabel","onClick","Routes"],"mappings":"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","file":"static/js/5.862aa505.chunk.js","sourcesContent":["import React, { useReducer, useContext, ReactChild } from \"react\";\nimport { useMemo } from \"react\";\n\nexport interface Model {\n  selectedMode: string;\n}\n\ntype ModelUpdate = Partial<Model>;\ntype DispatchModelUpdate = (props: ModelUpdate) => void;\n\nconst DEFAULT_MODEL: Model = { selectedMode: \"\" };\nconst ModelContext = React.createContext<[Readonly<Model>, DispatchModelUpdate]>([{ ...DEFAULT_MODEL }, () => {}]);\nexport const useModel = () => useContext(ModelContext);\n\nexport function ModelModeProvider({ children }: { children: ReactChild | ReactChild[] }) {\n  const [model, updateModel] = useReducer(\n    (oldModel: Model, newProps: ModelUpdate): Model => ({\n      ...oldModel,\n      ...newProps\n    }),\n    null,\n    (): Model => ({\n      ...DEFAULT_MODEL\n    })\n  );\n  const value: [Model, DispatchModelUpdate] = useMemo(() => [model, updateModel], [model, updateModel]);\n  return <ModelContext.Provider value={value}>{children}</ModelContext.Provider>;\n}\n","import React from \"react\";\nimport { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useRouteMatch, Switch, Route, Redirect, useLocation } from \"react-router\";\nimport { Helmet } from \"react-helmet\";\n\ntype RouteDefProps = { path: string; exact?: boolean; title: string; children: React.ReactChild | React.ReactChildren };\nexport const RouteDef: React.FunctionComponent<RouteDefProps> = () => {\n  throw new Error(\"Not intended for rendering\");\n};\n\ntype RoutesProps = { children: React.FunctionComponentElement<RouteDefProps>[] };\nexport const ViewRoutes: React.FunctionComponent<RoutesProps> = () => {\n  throw new Error(\"Not intended for rendering\");\n};\n\nconst Context = React.createContext<RouteDefProps[]>([]);\n\nexport function NavButtons({ className = \"\", replace = false, keepState = false }) {\n  const routes = useContext(Context);\n  const match = useRouteMatch() || { url: \"\" };\n  const urlBase = match.url.replace(/\\/+$/, \"\");\n  return (\n    <nav className={`nav nav-pills mb-3 ${className}`}>\n      {routes.map(route => (\n        <NavLink\n          key={route.path}\n          to={loc => ({\n            pathname: `${urlBase}/${route.path}`,\n            state: keepState ? loc.state : undefined\n          })}\n          replace={replace}\n          exact={!!route.exact}\n          className=\"nav-link\"\n          activeClassName=\"active\"\n        >\n          {route.title}\n        </NavLink>\n      ))}\n    </nav>\n  );\n}\n\nexport function ViewSwitch({\n  defaultRenderDirectly = false,\n  mutateTitle = true,\n  children\n}: {\n  defaultRenderDirectly?: boolean;\n  mutateTitle?: boolean;\n  children?: React.ReactChild | React.ReactChildren;\n}) {\n  const routes = useContext(Context);\n  const match = useRouteMatch() || { url: \"\" };\n  const loc = useLocation();\n  const urlBase = match.url.replace(/\\/+$/, \"\");\n  return (\n    <Switch>\n      {routes.map(route => (\n        <Route exact={route.exact} key={route.path} path={`${urlBase}/${route.path}`}>\n          {mutateTitle && (\n            <Helmet>\n              <title>{route.title}</title>\n            </Helmet>\n          )}\n          {route.children}\n        </Route>\n      ))}\n      <Route>\n        {defaultRenderDirectly ? (\n          routes[0].children\n        ) : (\n          <Redirect to={{ ...loc, pathname: `${urlBase}/${routes[0].path}` }} push={false} />\n        )}\n      </Route>\n      {children}\n    </Switch>\n  );\n}\n\nexport function SimpleRoutedSubViews({\n  children\n}: {\n  children: [React.FunctionComponentElement<RoutesProps>, ...(React.ReactChild | React.ReactChildren)[]];\n}) {\n  return <Context.Provider value={children[0].props.children.map(x => x.props)}>{children.slice(1)}</Context.Provider>;\n}\n","import React from \"react\";\nimport { useCallback } from \"react\";\nimport { ModeSelector } from \"../gameRecords/modeSelector\";\nimport { useModel } from \"./model\";\nimport Conf from \"../../utils/conf\";\n\nexport default function ModelModeSelector() {\n  const [model, updateModel] = useModel();\n  const setModeId = useCallback(modeId => updateModel({ selectedMode: modeId }), [updateModel]);\n  if (Conf.availableModes.length < 2) {\n    return null;\n  }\n  return (\n    <div className=\"row mb-3\">\n      <div className=\"col\">\n        <ModeSelector mode={model.selectedMode} onChange={setModeId} />\n      </div>\n    </div>\n  );\n}\n","export { ModelModeProvider, useModel } from \"./model\";\nexport { default as ModelModeSelector } from \"./modelModeSelector\";\n","import React from \"react\";\nimport { ResponsiveContainer, PieChart, Pie, Cell, LabelList, LabelProps, PolarViewBox } from \"recharts\";\nimport { useMemo } from \"react\";\n\nconst DEFAULT_COLORS = [\"#003f5c\", \"#7a5195\", \"#ef5675\", \"#ffa600\"];\n\nconst getDeltaAngle = (startAngle: number, endAngle: number) => {\n  const sign = Math.sign(endAngle - startAngle);\n  const deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);\n\n  return sign * deltaAngle;\n};\n\nconst RADIAN = Math.PI / 180;\n\nconst polarToCartesian = (cx: number, cy: number, radius: number, angle: number) => ({\n  x: cx + Math.cos(-RADIAN * angle) * radius,\n  y: cy + Math.sin(-RADIAN * angle) * radius\n});\n\nconst renderCustomizedLabelFactory = ({ lineHeight = 24, innerLabelFontSize = \"1rem\" }) => (props: LabelProps) => {\n  const { value } = props;\n  if (!value) {\n    return null;\n  }\n  const lines = value\n    .toString()\n    .trim()\n    .split(\"\\n\");\n  const { cx, cy, outerRadius, startAngle, endAngle } = props.viewBox as Required<PolarViewBox>;\n  const labelAngle = startAngle + getDeltaAngle(startAngle, endAngle) / 2;\n  const { x, y } = polarToCartesian(cx, cy, outerRadius / 2, labelAngle);\n  const yStart = y - (lines.length - 1) * (lineHeight / 2);\n  return (\n    <g>\n      {lines.map((text, index) => (\n        <text\n          key={index}\n          x={x}\n          y={yStart + index * lineHeight}\n          stroke=\"#fff\"\n          strokeWidth=\"0.5\"\n          fill=\"#fff\"\n          fontSize={innerLabelFontSize}\n          textAnchor=\"middle\"\n          dominantBaseline=\"central\"\n        >\n          {text}\n        </text>\n      ))}\n    </g>\n  );\n};\n\nexport type PieChartItem = {\n  value: number;\n  innerLabel?: string;\n  outerLabel?: string;\n};\n\nfunction defaultInnerLabel<T extends PieChartItem>(item: T) {\n  return item.innerLabel || \"\";\n}\nfunction defaultOuterLabel<T extends PieChartItem>(item: T) {\n  return item.outerLabel || \"\";\n}\n\ndeclare module \"recharts\" {\n  interface LabelListProps {\n    fill?: string;\n  }\n}\n\nexport default function SimplePieChart<T extends PieChartItem>({\n  items,\n  innerLabel = defaultInnerLabel,\n  outerLabel = defaultOuterLabel,\n  outerLabelOffset = 0,\n  innerLabelLineHeight = 24,\n  startAngle = 0,\n  colors = DEFAULT_COLORS,\n  innerLabelFontSize = \"1rem\",\n  aspect = 1\n}: {\n  items: T[];\n  innerLabel?: (item: T) => string;\n  outerLabel?: (item: T) => string;\n  outerLabelOffset?: number;\n  innerLabelLineHeight?: number;\n  startAngle?: number;\n  colors?: string[];\n  innerLabelFontSize?: string;\n  aspect?: number;\n}) {\n  const cells = useMemo(\n    () =>\n      Array(items.length)\n        .fill(0)\n        .map((_, index) => <Cell fill={colors[index % colors.length]} fillOpacity={1} key={`cell-${index}`} />),\n    [items.length, colors]\n  );\n  const renderCustomizedLabel = useMemo(\n    () => renderCustomizedLabelFactory({ lineHeight: innerLabelLineHeight, innerLabelFontSize }),\n    [innerLabelLineHeight, innerLabelFontSize]\n  );\n  const wrappedOuterLabel = useMemo(() => {\n    const ret = (item: T) => outerLabel(item);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (ret as any).offsetRadius = outerLabelOffset;\n    return ret;\n  }, [outerLabel, outerLabelOffset]);\n  return (\n    <ResponsiveContainer width=\"100%\" aspect={aspect} height=\"auto\">\n      <PieChart>\n        <Pie\n          isAnimationActive={false}\n          data={items}\n          nameKey=\"outerLabel\"\n          dataKey=\"value\"\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          label={wrappedOuterLabel as (x: any) => string}\n          startAngle={startAngle}\n          endAngle={startAngle + 360}\n        >\n          {cells}\n          <LabelList\n            valueAccessor={innerLabel}\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            dataKey={undefined as any}\n            position=\"inside\"\n            fill=\"#fff\"\n            content={renderCustomizedLabel}\n          />\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n","import React from \"react\";\nimport { useAsyncFactory } from \"../../utils/index\";\nimport { getRankRateBySeat } from \"../../data/source/misc\";\nimport Loading from \"../misc/loading\";\nimport { useMemo } from \"react\";\nimport { useModel, ModelModeSelector } from \"../modeModel\";\nimport SimplePieChart from \"../charts/simplePieChart\";\n\nconst SEAT_LABELS = \"东南西北\";\n\nfunction Chart({\n  rates,\n  numGames,\n  aspect = 1\n}: {\n  rates: [number, number, number, number];\n  numGames: number;\n  aspect?: number;\n}) {\n  const items = useMemo(\n    () =>\n      rates.map((x, index) => ({\n        value: x,\n        outerLabel: SEAT_LABELS[index],\n        innerLabel: `${(x * 100).toFixed(2)}%\\n[${Math.round(x * numGames)}]`\n      })),\n    [rates, numGames]\n  );\n  return <SimplePieChart aspect={aspect} items={items} />;\n}\n\nexport default function RankBySeats() {\n  const data = useAsyncFactory(getRankRateBySeat, [], \"getRankRateBySeat\");\n  const [model] = useModel();\n  if (!data) {\n    return <Loading />;\n  }\n  const selectedData = data[model.selectedMode || \"0\"];\n  return (\n    <>\n      <ModelModeSelector />\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <h3 className=\"text-center\">坐席吃一率</h3>\n          <Chart rates={selectedData[1]} numGames={selectedData.numGames} />\n        </div>\n        <div className=\"col-lg-6\">\n          <h3 className=\"text-center\">坐席吃四率</h3>\n          <Chart rates={selectedData[4]} numGames={selectedData.numGames} />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col text-right\">统计半庄数：{selectedData.numGames}</div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { useAsyncFactory, formatPercent, formatFixed3 } from \"../../utils/index\";\nimport { getGlobalStatistics } from \"../../data/source/misc\";\nimport Loading from \"../misc/loading\";\nimport { useModel } from \"../modeModel/model\";\nimport { Level } from \"../../data/types/level\";\nimport { ModelModeSelector } from \"../modeModel\";\n\nconst HEADERS = [\n  \"等级\",\n  \"一位率\",\n  \"二位率\",\n  \"三位率\",\n  \"四位率\",\n  \"被飞率\",\n  \"平均顺位\",\n  \"和牌率\",\n  \"放铳率\",\n  \"副露率\",\n  \"立直率\",\n  \"自摸率\",\n  \"流局率\",\n  \"流听率\",\n  \"对战数\",\n  \"在位记录\"\n];\n\nexport default function DataByRank() {\n  const data = useAsyncFactory(getGlobalStatistics, [], \"getGlobalStatistics\");\n  const [model] = useModel();\n  if (!data) {\n    return <Loading />;\n  }\n  const modeData = Object.entries(data[model.selectedMode || \"0\"]);\n  modeData.sort((a, b) => a[0].localeCompare(b[0]));\n\n  return (\n    <>\n      <ModelModeSelector />\n      <table className=\"table table-responsive-xl table-striped table-sm table-hover text-center\">\n        <thead className=\"vertical-table-header\">\n          <tr>\n            {HEADERS.map(x => (\n              <th key={x}>\n                <div>{x}</div>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {modeData.map(([levelId, levelData]) => (\n            <tr key={levelId}>\n              <td className=\"text-nowrap\">{new Level(parseInt(levelId)).getTag()}</td>\n              {levelData.basic.rank_rates.map((x, i) => (\n                <td key={i}>{formatPercent(x)}</td>\n              ))}\n              <td>{formatPercent(levelData.basic.negative_rate)}</td>\n              <td>{formatFixed3(levelData.basic.avg_rank)}</td>\n              <td>{formatPercent(levelData.extended.和牌率)}</td>\n              <td>{formatPercent(levelData.extended.放铳率)}</td>\n              <td>{formatPercent(levelData.extended.副露率)}</td>\n              <td>{formatPercent(levelData.extended.立直率)}</td>\n              <td>{formatPercent(levelData.extended.自摸率)}</td>\n              <td>{formatPercent(levelData.extended.流局率)}</td>\n              <td>{formatPercent(levelData.extended.流听率)}</td>\n              <td>{levelData.basic.count}</td>\n              <td>{levelData.num_players}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"row\">\n        <div className=\"col text-right\">\n          统计半庄数：\n          {Math.floor(modeData.map(([, levelData]) => levelData.basic.count).reduce((a, b) => a + b, 0) / 4)}\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { useAsyncFactory, formatPercent } from \"../../utils/index\";\nimport { getFanStats } from \"../../data/source/misc\";\nimport Loading from \"../misc/loading\";\nimport { FanStatEntry, FanStats, modeLabel } from \"../../data/types\";\nimport { useState, useMemo } from \"react\";\n\nconst SORTERS: (undefined | ((a: FanStatEntry, b: FanStatEntry) => number))[] = [\n  undefined,\n  (a, b) => a.count - b.count,\n  (a, b) => b.count - a.count\n];\n\nexport default function FanStatsView() {\n  const data = useAsyncFactory(getFanStats, [], \"getFanStats\");\n  const [sorterIndex, setSorterIndex] = useState(0);\n  const sortedData = useMemo((): FanStats | undefined => {\n    if (!data) {\n      return undefined;\n    }\n    if (!SORTERS[sorterIndex]) {\n      return data;\n    }\n    const ret = { ...data };\n    for (const key of Object.keys(ret)) {\n      ret[key] = {\n        ...ret[key],\n        entries: [...ret[key].entries].sort(SORTERS[sorterIndex])\n      };\n    }\n    return ret;\n  }, [data, sorterIndex]);\n  if (!sortedData) {\n    return <Loading />;\n  }\n  return (\n    <>\n      <div className=\"row\">\n        {Object.entries(sortedData).map(([modeId, value]) => (\n          <div className=\"col-xl-4\" key={modeId}>\n            <h2 className=\"text-center\">{modeId === \"0\" ? \"全部\" : modeLabel(parseInt(modeId))}</h2>\n            <p className=\"text-center\">记录和出局数：{value.count}</p>\n            <table className=\"table table-striped\">\n              <thead onClick={() => setSorterIndex((sorterIndex + 1) % SORTERS.length)} className=\"cursor-pointer\">\n                <tr>\n                  <th>役</th>\n                  <th className=\"text-right\">记录数</th>\n                  <th className=\"text-right\">比率</th>\n                </tr>\n              </thead>\n              <tbody>\n                {value.entries.map(x => (\n                  <tr key={x.label}>\n                    <td>{x.label}</td>\n                    <td className=\"text-right\">{x.count}</td>\n                    <td className=\"text-right\">\n                      {x.count\n                        ? x.count / value.count < 0.0001\n                          ? \"<0.01%\"\n                          : formatPercent(x.count / value.count)\n                        : \"\"}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { ModelModeProvider } from \"../modeModel\";\nimport { ViewRoutes, SimpleRoutedSubViews, NavButtons, RouteDef } from \"../routing\";\nimport { ViewSwitch } from \"../routing/index\";\n\nimport RankBySeats from \"./rankBySeats\";\nimport DataByRank from \"./dataByRank\";\nimport FanStats from \"./fanStats\";\n\nconst ROUTES = (\n  <ViewRoutes>\n    <RouteDef path=\"rank-by-seat\" title=\"坐席顺位\">\n      <RankBySeats />\n    </RouteDef>\n    <RouteDef path=\"data-by-rank\" title=\"等级数据\">\n      <DataByRank />\n    </RouteDef>\n    <RouteDef path=\"fan-stats\" title=\"和出役种统计\">\n      <FanStats />\n    </RouteDef>\n  </ViewRoutes>\n);\n\nexport default function Routes() {\n  return (\n    <SimpleRoutedSubViews>\n      {ROUTES}\n      <ModelModeProvider>\n        <NavButtons />\n        <ViewSwitch />\n      </ModelModeProvider>\n    </SimpleRoutedSubViews>\n  );\n}\n"],"sourceRoot":""}