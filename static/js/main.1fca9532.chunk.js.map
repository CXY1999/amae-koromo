{"version":3,"sources":["components/misc/scroller.tsx","components/layout/container.tsx","utils/index.ts","components/misc/alert.tsx","components/app/appHeader.tsx","utils/gameMode.ts","components/gameRecords/model.tsx","components/gameRecords/routeSync.tsx","utils/constants.ts","utils/dataTypes.ts","utils/dataSource.ts","components/gameRecords/dataAdapterProvider.tsx","components/gameRecords/player.tsx","components/gameRecords/table.tsx","components/form/checkboxGroup.tsx","components/form/datePicker.tsx","components/form/formRow.tsx","components/gameRecords/filterPanel.tsx","components/gameRecords/playerDetails.tsx","components/gameRecords/routes.tsx","components/app/index.tsx","index.tsx"],"names":["ScrollerContext","React","createContext","useScrollerProps","useContext","Scroller","_ref","children","react_default","a","createElement","es","scrollerProps","Provider","value","Container","_ref$title","title","undefined","_ref$children","_ref$fluid","fluid","className","concat","triggerRelayout","requestAnimationFrame","window","dispatchEvent","UIEvent","setTimeout","Alert","_ref$className","_ref$type","type","_ref$container","container","Fragment","_ref$stateName","stateName","stateKey","_useState","useState","localStorage","getItem","_useState2","Object","slicedToArray","closed","setClosed","useEffect","setItem","Cont","role","data-dismiss","aria-label","onClick","event","preventDefault","aria-hidden","AppHeader","container_Container","react_router_dom","to","href","GameMode","NUMBER_OF_GAME_MODE","keys","filter","x","length","Model","freeze","toPlain","model","objectSpread","date","moment","valueOf","selectedModes","Array","from","fromPlain","searchText","Set","console","warn","DEFAULT_MODEL","ModelContext","version","useModel","isChanged","oldModel","newProps","isSame","newSelectedModes","size","set","other","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","elem","has","err","return","isSameSet","playerId","ModelProvider","location","useLocation","_useReducer","useReducer","normalizeUpdate","pendingRouteUpdate","state","Date","getTime","_useReducer2","updateModel","useMemo","ModelBuilders","player","params","id","listing","isValid","modes","split","map","trim","startOf","search","RouteSync","view","useParams","_useModel","_useModel2","modelResult","react_router","newModel","scrollTo","pathname","newPath","generatePath","API_ROOT","LEVEL_MAX_POINTS","RANK_LABELS","RANK_COLORS","GameRecord","getRankIndexByPlayer","rec","accountId","toString","sortedPlayers","players","index","sort","b","score","i","getPlayerRankLabel","getPlayerRankColor","encodeAccountId","t","formatFullStartTime","startTime","format","getRecordLink","trailer","parseInt","uuid","Level","levelId","classCallCheck","this","_majorRank","_minorRank","realId","Math","floor","label","getMaxPoint","majorRank","minorRank","maxPoints","level","getNextLevel","getStartingPoint","getPreviousLevel","getTag","LevelWithDelta","obj","formatWithAdjustedScore","delta","ApiGet","_callee8","path","resp","regenerator_default","wrap","_context8","prev","fetch","sent","ok","json","abrupt","stop","ListingDataLoader","_date","skip","limit","cacheTag","PlayerDataLoader","_playerId","ListingDataProvider","create","_DataProvider","PlayerDataProvider","loader","itemsPerChunk","arguments","_loader","_metadata","_countPromise","_chunks","_itemsPerChunk","_filterPredicate","_filteredIndices","_filterResultCache","predicate","updateFilteredIndices","metadata","getMetadataSync","count","numShownItems","numLoadedItems","indices","chunk","Promise","push","game","result","_triggerFullLoad","getCount","getCountMaybeSync","getMetadata","then","_this","resolve","mappedIndex","_mapItemIndex","chunkNumber","_this2","skipPreload","innerIndex","_getChunk","preload","requestedIndex","reversed","chunkIndex","_loadChunk","numChunks","ceil","getRecords","loadingPlaceholder","loading","DUMMY_DATA_ADAPTER","noop","DataAdapter","provider","onDataUpdate","_provider","_onDataUpdate","_triggeredRequest","promise","_callHook","bind","maybeCount","_installHook","getUnfilteredCountSync","isItemLoaded","hook","DataAdapterContext","useDataAdapter","Consumer","DataAdapterProvider","dataProviders","searchPredicate","needPredicate","modeId","some","nickname","toLowerCase","indexOf","usePredicate","dataProvider","key","Error","getProviderKey","createProvider","_useState3","_useState4","dataAdapter","setDataAdapter","refreshDataAdapter","useCallback","setFilterPredicate","adapter","cancelUpdateHook","setUpdateHook","Player","isActive","hideDetailLink","isTop","target","index_esm","Players","memo","activePlayerId","player_Player","cellFormatTime","_ref2","cellData","unix","cellFormatFullTime","_ref3","rowData","cellFormatRank","_ref4","columnData","style","color","slice","cellFormatGameMode","_ref5","GameRecordTable","_ref6","_ref6$showStartEnd","showStartEnd","_ref6$showFullTime","showFullTime","data","isScrolling","onChildScroll","scrollTop","height","registerChild","rowGetter","_ref7","getRowClassName","_ref8","clsx","even","noRowsRenderer","getUnfilteredCount","cellRenderPlayer","_ref9","ref","disableHeight","_ref10","width","autoHeight","rowCount","rowHeight","matchMedia","matches","headerHeight","onScroll","rowClassName","dataKey","cellRenderer","flexGrow","headerClassName","CheckboxGroup","_ref$items","items","_ref$selectedItemKeys","selectedItemKeys","_ref$groupKey","groupKey","_ref$onChange","onChange","setSelected","isSelected","newSet","add","delete","item","checked","currentTarget","htmlFor","DatePicker","_ref$date","_","_ref$min","min","_ref$max","max","handleChange","e","FormRow","MODE_CHECKBOXES","String","DEFAULT_DATE","FilterPanel","updateSearchTextFromEvent","setSelectedItems","setDate","formRow_FormRow","CELLS","es6","fill","fillOpacity","formatLabel","rate","formatPercent","toFixed","createLabelLine","props","payload","assign","RankRateChart","_ref$aspect","aspect","ranks","rank_rates","startAngle","isAnimationActive","labelLine","nameKey","endAngle","formatter","position","createDot","active","r","stroke","rank","open","createActiveDot","RankChartTooltip","realPayload","RecentRankChart","_ref3$aspect","_ref3$numGames","numGames","dataPoints","totalGames","unshift","pos","margin","top","right","bottom","left","strokeWidth","dot","activeDot","cursor","content","playerDetails_RankChartTooltip","PlayerDetails","avg_rank","negative_rate","PLAYER_PATH","PATH","genPath","join","Routes","exact","App","scroller","routes","rootElement","document","getElementById","render","react","app"],"mappings":"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","file":"static/js/main.1fca9532.chunk.js","sourcesContent":["import React, { ReactChild, useContext } from \"react\";\r\n\r\nimport { WindowScroller, WindowScrollerChildProps } from \"react-virtualized\";\r\n\r\nconst ScrollerContext = React.createContext<WindowScrollerChildProps>({} as any);\r\n\r\nexport const useScrollerProps = () => useContext(ScrollerContext);\r\n\r\nfunction Scroller({ children }: { children: ReactChild | ReactChild[] }) {\r\n  return (\r\n    <WindowScroller>\r\n      {scrollerProps => <ScrollerContext.Provider value={scrollerProps}>{children}</ScrollerContext.Provider>}\r\n    </WindowScroller>\r\n  );\r\n}\r\nexport default Scroller;\r\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const Container = ({ title = undefined, children = undefined as ReactNode, fluid = false }) => (\r\n  <div className={`my-5 container${fluid ? \"-fluid\" : \"\"}`}>\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-12\">\r\n        {title && <h2 className=\"mb-4\">{title}</h2>}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","export function triggerRelayout() {\r\n  requestAnimationFrame(() => window.dispatchEvent(new UIEvent(\"resize\")));\r\n  setTimeout(function() {\r\n    window.dispatchEvent(new UIEvent(\"resize\"));\r\n  }, 200);\r\n}\r\nexport function scrollToTop() {\r\n  window.scrollTo(0, 0);\r\n  requestAnimationFrame(() => window.scrollTo(0, 0));\r\n}\r\n","import { useState, useEffect, ReactNode } from \"react\";\r\nimport React from \"react\";\r\nimport { ReactComponentLike } from \"prop-types\";\r\nimport { triggerRelayout } from '../../utils/index';\r\n\r\nexport function Alert({\r\n  className = \"\",\r\n  type = \"info\",\r\n  container = React.Fragment as ReactComponentLike,\r\n  stateName = \"\",\r\n  children = undefined as ReactNode\r\n}) {\r\n  const stateKey = `alertState_${stateName}`;\r\n  const [closed, setClosed] = useState(\r\n    () => stateName && !!localStorage.getItem(stateKey)\r\n  );\r\n  useEffect(() => {\r\n    if (stateName && closed) {\r\n      localStorage.setItem(stateKey, \"true\");\r\n    }\r\n  }, [closed, stateName, stateKey]);\r\n  if (closed) {\r\n    return null;\r\n  }\r\n  const Cont = container;\r\n  return (\r\n    <Cont>\r\n      <div\r\n        className={`alert alert-${type} alert-dismissible fade show ${className}`}\r\n        role=\"alert\"\r\n      >\r\n        {children}\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n          onClick={event => {\r\n            event.preventDefault();\r\n            setClosed(true);\r\n            triggerRelayout();\r\n          }}\r\n        >\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n      </div>\r\n    </Cont>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { Alert } from \"../misc/alert\";\r\n\r\nexport function AppHeader() {\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <h1>\r\n          <Link to=\"/\">雀魂牌谱屋</Link>\r\n        </h1>\r\n      </Container>\r\n      <Alert container={Container} stateName=\"topNote\">\r\n        <h4>说明</h4>\r\n        <ul>\r\n          <li>本页面由第三方维护，与雀魂官方无关。</li>\r\n          <li>记录包含雀魂国服四人半庄段位战玉之间及王座之间的牌谱。</li>\r\n          <li>\r\n            正常情况下全部对局都会被记录，但不排除因网络问题遗漏部分对局的情况。另 2019 年 10 月 10 日前因程序 Bug\r\n            每天晚间可能遗漏掉 10% ~ 20% 的对局，此 Bug 目前已经修复。\r\n          </li>\r\n          <li>页面不是实时更新，对局一般会在结束后二十分钟内出现。</li>\r\n          <li>\r\n            如有问题或建议，请戳 <a href=\"mailto:i@sapika.ch\">SAPikachu (i@sapika.ch)</a> 或{\" \"}\r\n            <a href=\"https://github.com/SAPikachu/amae-koromo/\">提交 Issue</a>。\r\n          </li>\r\n        </ul>\r\n      </Alert>\r\n      <Alert container={Container} stateName=\"changeLog20191025\">\r\n        <h4>最近更新（2019-10-25）</h4>\r\n        <ul>\r\n          <li>新增玩家信息页面</li>\r\n        </ul>\r\n      </Alert>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","enum GameMode {\r\n  王座 = 16,\r\n  玉 = 12\r\n}\r\nexport default GameMode;\r\nexport const NUMBER_OF_GAME_MODE = Object.keys(GameMode).filter(\r\n  x => typeof GameMode[x as keyof typeof GameMode] === \"number\"\r\n).length;\r\n","import { MomentInput } from \"moment\";\r\nimport moment from \"moment\";\r\nimport React, { useReducer, useContext, ReactChild } from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport { NUMBER_OF_GAME_MODE } from \"../../utils/gameMode\";\r\nimport { useLocation } from \"react-router\";\r\n\r\ninterface WithRuntimeInfo {\r\n  version: number;\r\n  pendingRouteUpdate?: boolean;\r\n}\r\nexport interface ListingModel {\r\n  type?: undefined;\r\n  date: MomentInput | null;\r\n  selectedModes: Set<string> | null;\r\n  searchText: string;\r\n}\r\nexport interface PlayerModel {\r\n  type: \"player\";\r\n  playerId: string;\r\n}\r\nexport type Model = (ListingModel | PlayerModel) & WithRuntimeInfo;\r\ninterface ListingModelPlain {\r\n  type?: undefined;\r\n  date: number | null;\r\n  selectedModes: string[] | null;\r\n  searchText: string;\r\n}\r\nexport type ModelPlain = (ListingModelPlain | PlayerModel) & WithRuntimeInfo;\r\nexport const Model = Object.freeze({\r\n  toPlain: function(model: Model): ModelPlain {\r\n    if (model.type === \"player\") {\r\n      return model;\r\n    }\r\n    return {\r\n      ...model,\r\n      date: model.date ? moment(model.date).valueOf() : null,\r\n      selectedModes: model.selectedModes ? Array.from(model.selectedModes) : null\r\n    };\r\n  },\r\n  fromPlain: function(model: ModelPlain): ListingModel | PlayerModel {\r\n    if (model.type === \"player\") {\r\n      return model;\r\n    }\r\n    if (model.type === undefined) {\r\n      return {\r\n        date: model.date || null,\r\n        searchText: model.searchText || \"\",\r\n        selectedModes: model.selectedModes ? new Set(model.selectedModes) : null\r\n      };\r\n    }\r\n    console.warn(\"Unknown model data from location state:\", model);\r\n    return DEFAULT_MODEL;\r\n  }\r\n});\r\ntype ModelUpdate = Partial<ListingModel> | PlayerModel;\r\ntype DispatchModelUpdate = (props: ModelUpdate) => void;\r\n\r\nconst DEFAULT_MODEL: ListingModel = { date: null, selectedModes: null, searchText: \"\" };\r\nconst ModelContext = React.createContext<[Readonly<Model>, DispatchModelUpdate]>([\r\n  { ...DEFAULT_MODEL, version: 0 },\r\n  () => {}\r\n]);\r\nexport const useModel = () => useContext(ModelContext);\r\n\r\nfunction isSameSet<T>(set: Set<T>, other: Set<T>) {\r\n  if (set.size !== other.size) {\r\n    return false;\r\n  }\r\n  for (const elem of other) {\r\n    if (!set.has(elem)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction normalizeUpdate(newProps: ModelUpdate): ModelUpdate {\r\n  if (newProps.type === undefined) {\r\n    if (newProps.date) {\r\n      newProps.date = moment(newProps.date).valueOf();\r\n    }\r\n    if (newProps.selectedModes && newProps.selectedModes.size >= NUMBER_OF_GAME_MODE) {\r\n      newProps.selectedModes = null;\r\n    }\r\n  }\r\n  return newProps;\r\n}\r\nfunction isChanged(oldModel: Model, newProps: ModelUpdate): boolean {\r\n  if (oldModel.type !== newProps.type) {\r\n    return true;\r\n  }\r\n  if (oldModel.type === undefined && newProps.type === oldModel.type) {\r\n    if (\r\n      newProps.date !== undefined &&\r\n      newProps.date !== oldModel.date &&\r\n      (!newProps.date || !oldModel.date || !moment(newProps.date).isSame(oldModel.date, \"day\"))\r\n    ) {\r\n      return true;\r\n    }\r\n    if (newProps.searchText !== undefined && newProps.searchText !== oldModel.searchText) {\r\n      return true;\r\n    }\r\n    let newSelectedModes = newProps.selectedModes;\r\n    if (newSelectedModes && newSelectedModes.size >= NUMBER_OF_GAME_MODE) {\r\n      newSelectedModes = null;\r\n    }\r\n    if (newSelectedModes !== undefined && newSelectedModes !== oldModel.selectedModes) {\r\n      if (!newSelectedModes || !oldModel.selectedModes) {\r\n        return true;\r\n      }\r\n      if (isSameSet(oldModel.selectedModes, newSelectedModes)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  if (oldModel.type === \"player\" && newProps.type === oldModel.type) {\r\n    if (newProps.playerId !== undefined && newProps.playerId !== oldModel.playerId) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function ModelProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const location = useLocation();\r\n  const [model, updateModel] = useReducer(\r\n    (oldModel: Model, newProps: ModelUpdate): Model =>\r\n      isChanged(oldModel, newProps)\r\n        ? {\r\n            ...((oldModel.type === newProps.type ? oldModel : {}) as Model),\r\n            ...normalizeUpdate(newProps),\r\n            version: oldModel.version + 1,\r\n            pendingRouteUpdate: true\r\n          }\r\n        : oldModel,\r\n    null,\r\n    (): Model => ({\r\n      ...DEFAULT_MODEL,\r\n      ...Model.fromPlain((location.state || {}).model || {}),\r\n      version: new Date().getTime()\r\n    })\r\n  );\r\n  const value: [Model, DispatchModelUpdate] = useMemo(() => [model, updateModel], [model, updateModel]);\r\n  return <ModelContext.Provider value={value}>{children}</ModelContext.Provider>;\r\n}\r\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport { useParams, useLocation, Redirect } from \"react-router\";\nimport { useModel, Model, ModelPlain } from \"./model\";\nimport { generatePath } from \"./routes\";\nimport { useEffect } from \"react\";\nimport { scrollToTop, triggerRelayout } from \"../../utils/index\";\n\ntype ListingRouteParams = {\n  date?: string;\n  modes?: string;\n  search?: string;\n};\n\ntype HistoryState = {\n  model: ModelPlain;\n};\n\nconst ModelBuilders = {\n  player: function(params: { id: string }): Model | string {\n    return {\n      type: \"player\",\n      playerId: params.id,\n      version: 0\n    };\n  },\n  listing: function(params: ListingRouteParams): Model | string {\n    const date = params.date ? moment(params.date, \"YYYY-MM-DD\") : null;\n    if (date && !date.isValid()) {\n      return \"/\";\n    }\n    const modes = params.modes\n      ? new Set(\n          params.modes\n            .split(\".\")\n            .map(x => x.trim())\n            .filter(x => !!x)\n        )\n      : null;\n    return {\n      date: date ? date.startOf(\"day\").valueOf() : null,\n      selectedModes: modes,\n      searchText: params.search || \"\",\n      version: 0\n    };\n  }\n};\n\nexport function RouteSync({ view }: { view: keyof typeof ModelBuilders }): React.FunctionComponentElement<any> {\n  const params = useParams();\n  const [model, updateModel] = useModel();\n  const location = useLocation<HistoryState>();\n  useEffect(triggerRelayout, [model.type]);\n  const state = location.state;\n  // console.log(params, model, location, state);\n  if (state && state.model.version === model.version) {\n    delete (model as Model).pendingRouteUpdate;\n    return <></>;\n  }\n  if (!state) {\n    // Navigation\n    const modelResult = ModelBuilders[view](params as any);\n    if (typeof modelResult === \"string\") {\n      return <Redirect to={modelResult} />;\n    }\n    const newModel: Model = {\n      ...modelResult,\n      version: model.version\n    };\n    updateModel(newModel);\n    scrollToTop();\n    return <Redirect to={{ pathname: location.pathname, state: { model: Model.toPlain(newModel) } }} />;\n  }\n  if (model.pendingRouteUpdate) {\n    // Model updated\n    const newPath = generatePath(model);\n    delete (model as Model).pendingRouteUpdate; // Do not trigger update\n    return <Redirect to={{ pathname: newPath, state: { model: Model.toPlain(model) } }} />;\n  } else {\n    const restoredModel = Model.fromPlain(state.model);\n    updateModel(restoredModel);\n    return <></>;\n  }\n}\n","export const DATA_ROOT = \"https://d2ek5tscv4zquv.cloudfront.net/\";\r\nexport const API_ROOT = `${DATA_ROOT}api/`;\r\n","import moment from \"moment\";\n\nimport GameMode from \"./gameMode\";\n\nexport const PLAYER_RANKS = \"初士杰豪圣魂\";\nexport const LEVEL_MAX_POINTS = [20, 80, 200, 600, 800, 1000, 1200, 1400, 2000, 2800, 3200, 3600, 4000, 6000, 9000];\nexport const RANK_LABELS = [\"一位\", \"二位\", \"三位\", \"四位\"];\nexport const RANK_COLORS = [\"#28a745\", \"#17a2b8\", \"#6c757d\", \"#dc3545\"];\n\nexport interface PlayerRecord {\n  accountId: number;\n  nickname: string;\n  level: number;\n  score: number;\n}\nexport interface GameRecord {\n  modeId: GameMode;\n  uuid: string;\n  startTime: number;\n  endTime: number;\n  players: PlayerRecord[];\n}\nexport const GameRecord = Object.freeze({\n  getRankIndexByPlayer: function(rec: GameRecord, player: number | string | PlayerRecord): number {\n    const playerId = (typeof player === \"object\" ? player.accountId : player).toString();\n    const sortedPlayers = rec.players.map((player, index) => ({ player, index }));\n    sortedPlayers.sort((a, b) => 5 - b.index + b.player.score - (5 - a.index + a.player.score));\n    for (let i = 0; i < sortedPlayers.length; i++) {\n      if (sortedPlayers[i].player.accountId.toString() === playerId) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  getPlayerRankLabel: function(rec: GameRecord, player: number | string | PlayerRecord): string {\n    return RANK_LABELS[GameRecord.getRankIndexByPlayer(rec, player)] || \"\";\n  },\n  getPlayerRankColor: function(rec: GameRecord, player: number | string | PlayerRecord): string {\n    return RANK_COLORS[GameRecord.getRankIndexByPlayer(rec, player)];\n  },\n  encodeAccountId: (t: number) => 1358437 + ((7 * t + 1117113) ^ 86216345),\n  formatFullStartTime: (rec: GameRecord) => moment(rec.startTime * 1000).format(\"YYYY/M/D HH:mm\"),\n  getRecordLink: function(rec: GameRecord, player?: PlayerRecord | number | string) {\n    const playerId = typeof player === \"object\" ? player.accountId : player;\n    const trailer = playerId\n      ? `_a${GameRecord.encodeAccountId(typeof playerId === \"number\" ? playerId : parseInt(playerId))}`\n      : \"\";\n    return `https://www.majsoul.com/1/?paipu=${rec.uuid}${trailer}`;\n  }\n});\n\nclass Level {\n  _majorRank: number;\n  _minorRank: number;\n  constructor(levelId: number) {\n    const realId = levelId % 10000;\n    this._majorRank = Math.floor(realId / 100);\n    this._minorRank = realId % 100;\n  }\n  getTag(): string {\n    const label = PLAYER_RANKS[this._majorRank - 1];\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return label;\n    }\n    return label + this._minorRank;\n  }\n  getMaxPoint(): number {\n    return LEVEL_MAX_POINTS[(this._majorRank - 1) * 3 + this._minorRank - 1];\n  }\n  getStartingPoint(): number {\n    if (this._majorRank === 1) {\n      return 0;\n    }\n    return this.getMaxPoint() / 2;\n  }\n  getNextLevel(): Level {\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return this;\n    }\n    let majorRank = this._majorRank;\n    let minorRank = this._minorRank + 1;\n    if (minorRank > 3) {\n      majorRank++;\n      minorRank = 1;\n    }\n    return new Level(majorRank * 100 + minorRank);\n  }\n  getPreviousLevel(): Level {\n    if (this._majorRank === 1 && this._minorRank === 1) {\n      return this;\n    }\n    let majorRank = this._majorRank;\n    let minorRank = this._minorRank - 1;\n    if (minorRank < 1) {\n      majorRank--;\n      minorRank = 3;\n    }\n    return new Level(majorRank * 100 + minorRank);\n  }\n  formatWithAdjustedScore(score: number) {\n    let maxPoints = this.getMaxPoint();\n    let level: Level = this;\n    if (maxPoints && score >= maxPoints) {\n      level = this.getNextLevel();\n      maxPoints = level.getMaxPoint();\n      score = level.getStartingPoint();\n    } else if (score < 0) {\n      if (!maxPoints || level._majorRank === 1 || (level._majorRank === 2 && level._minorRank === 1)) {\n        score = 0;\n      } else {\n        level = this.getPreviousLevel();\n        maxPoints = level.getMaxPoint();\n        score = level.getStartingPoint();\n      }\n    }\n    return `${level.getTag()} - ${score}${maxPoints ? \"/\" + maxPoints : \"\"}`;\n  }\n}\nexport function getLevelTag(levelId: number) {\n  return new Level(levelId).getTag();\n}\nexport type LevelWithDelta = {\n  id: number;\n  score: number;\n  delta: number;\n};\nexport const LevelWithDelta = Object.freeze({\n  format(obj: LevelWithDelta): string {\n    return new Level(obj.id).formatWithAdjustedScore(obj.score + obj.delta);\n  }\n});\n\nexport interface Metadata {\n  count: number;\n}\nexport interface PlayerMetadata extends Metadata {\n  id: number;\n  nickname: string;\n  level: LevelWithDelta;\n  rank_rates: [number, number, number, number];\n  avg_rank: number;\n  negative_rate: number;\n}\n","import moment from \"moment\";\r\n\r\nimport { API_ROOT } from \"./constants\";\r\nimport { GameRecord, Metadata, PlayerMetadata } from \"./dataTypes\";\r\n\r\nexport { default as GameMode, NUMBER_OF_GAME_MODE } from \"./gameMode\";\r\nexport * from \"./dataTypes\";\r\n\r\nasync function ApiGet<T>(path: string) {\r\n  const resp = await fetch(API_ROOT + path);\r\n  if (!resp.ok) {\r\n    throw resp;\r\n  }\r\n  return (await resp.json()) as T;\r\n}\r\n\r\ninterface DataLoader<T extends Metadata> {\r\n  getMetadata(): Promise<T>;\r\n  getRecords(skip: number, limit: number, cacheTag?: string): Promise<GameRecord[]>;\r\n}\r\n\r\nclass ListingDataLoader implements DataLoader<Metadata> {\r\n  _date: moment.Moment;\r\n  constructor(date: moment.MomentInput) {\r\n    this._date = moment(date).startOf(\"day\");\r\n  }\r\n  async getMetadata(): Promise<Metadata> {\r\n    return await ApiGet<Metadata>(`count/${this._date.valueOf()}`);\r\n  }\r\n  async getRecords(skip: number, limit: number, cacheTag = \"\"): Promise<GameRecord[]> {\r\n    return await ApiGet<GameRecord[]>(`games/${this._date.valueOf()}?skip=${skip}&limit=${limit}&tag=${cacheTag}`);\r\n  }\r\n}\r\n\r\nclass PlayerDataLoader implements DataLoader<PlayerMetadata> {\r\n  _playerId: string;\r\n  constructor(playerId: string) {\r\n    this._playerId = playerId;\r\n  }\r\n  async getMetadata(): Promise<PlayerMetadata> {\r\n    return await ApiGet<PlayerMetadata>(`player_stats/${this._playerId}`);\r\n  }\r\n  async getRecords(skip: number, limit: number, cacheTag = \"\"): Promise<GameRecord[]> {\r\n    return await ApiGet<GameRecord[]>(`player_records/${this._playerId}?skip=${skip}&limit=${limit}&tag=${cacheTag}`);\r\n  }\r\n}\r\n\r\nexport type FilterPredicate = ((record: GameRecord) => boolean) | null;\r\nexport type ListingDataProvider = _DataProvider<ListingDataLoader>;\r\nexport const ListingDataProvider = Object.freeze({\r\n  create(date: moment.MomentInput): ListingDataProvider {\r\n    return new _DataProvider<ListingDataLoader>(new ListingDataLoader(date));\r\n  }\r\n});\r\nexport type PlayerDataProvider = _DataProvider<PlayerDataLoader>;\r\nexport const PlayerDataProvider = Object.freeze({\r\n  create(playerId: string): PlayerDataProvider {\r\n    return new _DataProvider<PlayerDataLoader>(new PlayerDataLoader(playerId));\r\n  }\r\n});\r\nexport type DataProvider = ListingDataProvider | PlayerDataProvider;\r\nclass _DataProvider<\r\n  TLoader extends DataLoader<TMetadata>,\r\n  TMetadata extends Metadata = TLoader extends DataLoader<infer T> ? T : Metadata\r\n> {\r\n  _loader: TLoader;\r\n  _metadata: TMetadata | Promise<TMetadata> | null;\r\n  _countPromise: Promise<number> | null;\r\n  _chunks: (GameRecord[] | Promise<GameRecord[]>)[];\r\n  _itemsPerChunk: number;\r\n  _filterPredicate: FilterPredicate;\r\n  _filteredIndices: number[] | null;\r\n  _filterResultCache: { [uuid: string]: boolean };\r\n\r\n  constructor(loader: TLoader, itemsPerChunk = 100) {\r\n    this._loader = loader;\r\n    this._metadata = null;\r\n    this._countPromise = null;\r\n    this._chunks = [];\r\n    this._itemsPerChunk = itemsPerChunk;\r\n    this._filterPredicate = null;\r\n    this._filteredIndices = null;\r\n    this._filterResultCache = {};\r\n  }\r\n  setFilterPredicate(predicate: FilterPredicate) {\r\n    if (this._filterPredicate === predicate) {\r\n      return;\r\n    }\r\n    this._filterPredicate = predicate;\r\n    this._filterResultCache = {};\r\n    this.updateFilteredIndices();\r\n  }\r\n  updateFilteredIndices() {\r\n    this._filteredIndices = null;\r\n    if (!this._filterPredicate) {\r\n      return;\r\n    }\r\n    const metadata = this.getMetadataSync();\r\n    if (!metadata) {\r\n      return;\r\n    }\r\n    const count = metadata.count;\r\n    let numShownItems = 0;\r\n    let numLoadedItems = 0;\r\n    const indices = [];\r\n    for (let i = 0; i < count; i++) {\r\n      const chunk = this._chunks[Math.floor(i / this._itemsPerChunk)];\r\n      if (!chunk || chunk instanceof Promise) {\r\n        indices.push(i);\r\n        continue;\r\n      }\r\n      numLoadedItems++;\r\n      const game = chunk[i % this._itemsPerChunk];\r\n      let result = this._filterResultCache[game.uuid];\r\n      if (result === undefined) {\r\n        this._filterResultCache[game.uuid] = result = this._filterPredicate(game);\r\n      }\r\n      if (result) {\r\n        indices.push(i);\r\n        numShownItems++;\r\n      }\r\n    }\r\n    this._filteredIndices = indices;\r\n    if (numShownItems < 10 && numLoadedItems >= this._itemsPerChunk) {\r\n      this._triggerFullLoad();\r\n    }\r\n  }\r\n  getMetadataSync(): TMetadata | null {\r\n    return this._metadata && !(this._metadata instanceof Promise) ? this._metadata : null;\r\n  }\r\n  getCountMaybeSync(): number | Promise<number> {\r\n    let metadata = this.getMetadataSync();\r\n    if (metadata) {\r\n      return this._filteredIndices ? this._filteredIndices.length : metadata.count;\r\n    }\r\n    return this.getCount();\r\n  }\r\n  async getCount(): Promise<number> {\r\n    let metadata = this.getMetadataSync();\r\n    if (metadata) {\r\n      return this.getCountMaybeSync();\r\n    }\r\n    if (this._countPromise) {\r\n      return this._countPromise;\r\n    }\r\n    if (!this._metadata) {\r\n      this._metadata = this._loader.getMetadata().then(metadata => {\r\n        this._metadata = metadata;\r\n        this.updateFilteredIndices();\r\n        this._countPromise = null;\r\n        return metadata;\r\n      });\r\n    }\r\n    this._countPromise = Promise.resolve(this._metadata).then(() => this.getCountMaybeSync());\r\n    return this._countPromise;\r\n  }\r\n  getUnfilteredCountSync(): number | null {\r\n    const metadata = this.getMetadataSync();\r\n    if (!metadata) {\r\n      return null;\r\n    }\r\n    return metadata.count;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    const mappedIndex = this._mapItemIndex(index);\r\n    if (mappedIndex === null) {\r\n      return false;\r\n    }\r\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\r\n    return !!this._chunks[chunkNumber] && !(this._chunks[chunkNumber] instanceof Promise);\r\n  }\r\n  getItem(index: number, skipPreload = false): GameRecord | Promise<GameRecord> {\r\n    const mappedIndex = this._mapItemIndex(index);\r\n    if (mappedIndex === null) {\r\n      return this.getCount().then(() => this.getItem(index));\r\n    }\r\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\r\n    const innerIndex = mappedIndex % this._itemsPerChunk;\r\n    const chunk = this._chunks[chunkNumber];\r\n    if (!chunk || chunk instanceof Promise) {\r\n      return this._getChunk(chunkNumber).then(chunk => chunk[innerIndex]);\r\n    }\r\n    if (!skipPreload && !this._filteredIndices) {\r\n      this.preload(index + this._itemsPerChunk);\r\n    }\r\n    return chunk[innerIndex];\r\n  }\r\n  preload(index: number) {\r\n    const count = this.getCountMaybeSync();\r\n    if (count instanceof Promise) {\r\n      return;\r\n    }\r\n    if (index >= count) {\r\n      return;\r\n    }\r\n    this.getItem(index, true);\r\n  }\r\n  _mapItemIndex(requestedIndex: number): number | null {\r\n    const count = this.getCountMaybeSync();\r\n    if (count instanceof Promise) {\r\n      return null;\r\n    }\r\n    if (requestedIndex < 0) {\r\n      return null;\r\n    }\r\n    // Descending order\r\n    const reversed = count - requestedIndex - 1;\r\n    if (reversed < 0) {\r\n      return null;\r\n    }\r\n    return this._filteredIndices ? this._filteredIndices[reversed] : reversed;\r\n  }\r\n  async _getChunk(chunkIndex: number): Promise<GameRecord[]> {\r\n    if (!this._chunks[chunkIndex]) {\r\n      this._chunks[chunkIndex] = this._loadChunk(chunkIndex);\r\n    }\r\n    return this._chunks[chunkIndex];\r\n  }\r\n  _triggerFullLoad() {\r\n    const count = this.getCountMaybeSync();\r\n    if (typeof count !== \"number\") {\r\n      return;\r\n    }\r\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\r\n    for (let i = 0; i < numChunks; i++) {\r\n      if (this._chunks[i]) {\r\n        continue;\r\n      }\r\n      this._getChunk(i);\r\n    }\r\n  }\r\n  async _loadChunk(chunkIndex: number): Promise<GameRecord[]> {\r\n    const count = await this.getCount();\r\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\r\n    if (!numChunks) {\r\n      return [];\r\n    }\r\n    if (chunkIndex >= numChunks) {\r\n      console.warn(`Loading out-of-index chunk: ${chunkIndex}, number of items: ${count}`);\r\n      return [];\r\n    }\r\n    const chunk = await this._loader.getRecords(\r\n      this._itemsPerChunk * chunkIndex,\r\n      this._itemsPerChunk,\r\n      chunkIndex === numChunks - 1 ? count.toString() : \"\"\r\n    );\r\n    if (chunk.length < this._itemsPerChunk && chunkIndex < numChunks - 1) {\r\n      console.warn(\"Unexpected number of items in chunk:\", chunk.length);\r\n    }\r\n    this._chunks[chunkIndex] = chunk;\r\n    this.updateFilteredIndices();\r\n    return chunk;\r\n  }\r\n}\r\n","import { useState, useEffect, useMemo, useCallback, useContext } from \"react\";\r\nimport React, { ReactChild } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  DataProvider,\r\n  GameRecord,\r\n  NUMBER_OF_GAME_MODE,\r\n  FilterPredicate,\r\n  ListingDataProvider,\r\n  PlayerDataProvider\r\n} from \"../../utils/dataSource\";\r\nimport { useModel, Model } from \"./model\";\r\nimport { Metadata } from \"../../utils/dataSource\";\r\n\r\ninterface ItemLoadingPlaceholder {\r\n  loading: boolean;\r\n}\r\n\r\nconst loadingPlaceholder = { loading: true };\r\n\r\nexport interface IDataAdapter {\r\n  getCount(): number;\r\n  getUnfilteredCount(): number;\r\n  getMetadata<T extends Metadata>(): T | null;\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder;\r\n  isItemLoaded(index: number): boolean;\r\n}\r\n\r\nclass _DummyDataAdapter implements IDataAdapter {\r\n  getCount(): number {\r\n    return 0;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return 0;\r\n  }\r\n  getMetadata<T extends Metadata>(): T | null {\r\n    return null;\r\n  }\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder {\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const DUMMY_DATA_ADAPTER = new _DummyDataAdapter() as IDataAdapter;\r\n\r\nconst noop = () => {};\r\n\r\nclass DataAdapter implements IDataAdapter {\r\n  _provider: DataProvider;\r\n  _onDataUpdate: () => void;\r\n  _triggeredRequest: boolean;\r\n\r\n  constructor(provider: DataProvider, onDataUpdate = noop) {\r\n    this._provider = provider;\r\n    this._onDataUpdate = onDataUpdate;\r\n    this._triggeredRequest = false;\r\n  }\r\n  _installHook(promise: Promise<any>) {\r\n    if (this._triggeredRequest) {\r\n      return;\r\n    }\r\n    this._triggeredRequest = true;\r\n    promise.then(this._callHook.bind(this));\r\n  }\r\n  _callHook() {\r\n    this._onDataUpdate();\r\n  }\r\n  getCount(): number {\r\n    const maybeCount = this._provider.getCountMaybeSync();\r\n    if (maybeCount instanceof Promise) {\r\n      this._installHook(maybeCount);\r\n      return 0;\r\n    }\r\n    return maybeCount;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return this._provider.getUnfilteredCountSync() || 0;\r\n  }\r\n  getMetadata<T extends Metadata>(): T | null {\r\n    return this._provider.getMetadataSync() as T | null;\r\n  }\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder {\r\n    if (this._provider.isItemLoaded(index)) {\r\n      return this._provider.getItem(index) as GameRecord;\r\n    }\r\n    if (!this._triggeredRequest) {\r\n      this._installHook(this._provider.getItem(index) as Promise<GameRecord>);\r\n    }\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    if (index < 0) {\r\n      return false;\r\n    }\r\n    return this._provider.isItemLoaded(index);\r\n  }\r\n  setUpdateHook(hook: () => void) {\r\n    this._onDataUpdate = hook;\r\n  }\r\n  cancelUpdateHook() {\r\n    this._onDataUpdate = noop;\r\n  }\r\n}\r\n\r\nconst DataAdapterContext = React.createContext(DUMMY_DATA_ADAPTER);\r\n\r\nexport const useDataAdapter = () => useContext(DataAdapterContext);\r\nexport const DataAdapterConsumer = DataAdapterContext.Consumer;\r\n\r\nfunction getProviderKey(model: Model): string {\r\n  if (model.type === undefined) {\r\n    return moment(model.date || moment())\r\n      .startOf(\"day\")\r\n      .valueOf()\r\n      .toString();\r\n  } else if (model.type === \"player\") {\r\n    return `player-${model.playerId}`;\r\n  }\r\n  throw new Error(\"Unknown model type\");\r\n}\r\n\r\nfunction createProvider(model: Model): DataProvider {\r\n  if (model.type === undefined) {\r\n    return ListingDataProvider.create(model.date || moment().startOf(\"day\"));\r\n  }\r\n  if (model.type === \"player\") {\r\n    return PlayerDataProvider.create(model.playerId);\r\n  }\r\n  throw new Error(\"Not implemented\");\r\n}\r\n\r\nfunction usePredicate(model: Model): FilterPredicate {\r\n  if (model.type !== undefined) {\r\n    return useMemo(() => null, [null, \"\"]);\r\n  }\r\n  const searchText = (model.searchText || \"\").trim() || \"\";\r\n  const needPredicate = searchText || (model.selectedModes && model.selectedModes.size < NUMBER_OF_GAME_MODE);\r\n  return useMemo(\r\n    () =>\r\n      needPredicate\r\n        ? game => {\r\n            if (model.selectedModes && !model.selectedModes.has(game.modeId.toString())) {\r\n              return false;\r\n            }\r\n            if (!game.players.some(player => player.nickname.toLowerCase().indexOf(searchText) > -1)) {\r\n              return false;\r\n            }\r\n            return true;\r\n          }\r\n        : null,\r\n    [(model.type === undefined && model.selectedModes) || null, searchText]\r\n  );\r\n}\r\n\r\nexport function DataAdapterProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const [model] = useModel();\r\n  const [dataProviders] = useState(() => ({} as { [key: string]: DataProvider }));\r\n  const searchPredicate = usePredicate(model);\r\n  const dataProvider = useMemo(() => {\r\n    const key = getProviderKey(model);\r\n    if (!dataProviders[key]) {\r\n      dataProviders[key] = createProvider(model);\r\n    }\r\n    return dataProviders[key];\r\n  }, [model, dataProviders]);\r\n  const [dataAdapter, setDataAdapter] = useState(() => DUMMY_DATA_ADAPTER);\r\n  const refreshDataAdapter = useCallback(() => {\r\n    dataProvider.setFilterPredicate(searchPredicate);\r\n    const adapter = new DataAdapter(dataProvider);\r\n    setDataAdapter(adapter);\r\n  }, [dataProvider, searchPredicate]);\r\n  useEffect(refreshDataAdapter, [refreshDataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      return () => adapter.cancelUpdateHook();\r\n    }\r\n  }, [dataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      adapter.setUpdateHook(refreshDataAdapter);\r\n    }\r\n  }, [dataAdapter, refreshDataAdapter]);\r\n  return <DataAdapterContext.Provider value={dataAdapter}>{children}</DataAdapterContext.Provider>;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoMdBook } from \"react-icons/io\";\r\n\r\nimport { GameRecord, PlayerRecord, getLevelTag } from \"../../utils/dataSource\";\r\nimport { generatePath } from \"./routes\";\r\n\r\nexport const Player = function({\r\n  player,\r\n  game,\r\n  isActive,\r\n  hideDetailLink\r\n}: {\r\n  player: PlayerRecord;\r\n  game: GameRecord;\r\n  isActive: boolean;\r\n  hideDetailLink?: boolean;\r\n}) {\r\n  const { nickname, level, score, accountId } = player;\r\n  const isTop = GameRecord.getRankIndexByPlayer(game, player) === 0;\r\n  return (\r\n    <span className={`player ${isTop && \"font-weight-bold\"} ${isActive && \"active-player\"}`}>\r\n      <a href={GameRecord.getRecordLink(game, player)} title=\"查看牌谱\" target=\"_blank\">\r\n        [{getLevelTag(level)}] {nickname} {score !== undefined && `[${score}]`}\r\n      </a>{\" \"}\r\n      {hideDetailLink || isActive ? null : (\r\n        <Link title=\"玩家记录\" to={generatePath({ type: \"player\", playerId: accountId.toString(), version: 0 })}>\r\n          <IoMdBook />\r\n        </Link>\r\n      )}\r\n    </span>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport { Table, Column, AutoSizer, TableCellProps, Index } from \"react-virtualized\";\r\nimport moment from \"moment\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { GameRecord, GameMode } from \"../../utils/dataSource\";\r\nimport { Player } from \"./player\";\r\nimport { useScrollerProps } from \"../misc/scroller\";\r\nimport { useDataAdapter } from \"./dataAdapterProvider\";\r\nimport { triggerRelayout } from \"../../utils/index\";\r\nimport { useModel } from \"./model\";\r\n\r\nconst formatTime = (x: number) => (x ? moment.unix(x).format(\"HH:mm\") : null);\r\n\r\nconst Players = React.memo(({ game, activePlayerId }: { game: GameRecord; activePlayerId?: string }) => (\r\n  <div className=\"row no-gutters\">\r\n    {game.players.map(x => (\r\n      <div key={x.accountId} className=\"col-12 col-md-6 pr-1\">\r\n        <Player game={game} player={x} isActive={x.accountId.toString() === activePlayerId} />\r\n      </div>\r\n    ))}\r\n  </div>\r\n));\r\n\r\nconst cellFormatTime = ({ cellData }: TableCellProps) => formatTime(cellData);\r\nconst cellFormatFullTime = ({ rowData }: TableCellProps) =>\r\n  rowData.loading ? \"\" : GameRecord.formatFullStartTime(rowData);\r\nconst cellFormatRank = ({ rowData, columnData }: TableCellProps) =>\r\n  !rowData || rowData.loading || !columnData.activePlayerId ? (\r\n    \"\"\r\n  ) : (\r\n    <span\r\n      className=\"font-weight-bold\"\r\n      style={{ color: GameRecord.getPlayerRankColor(rowData, columnData.activePlayerId) }}\r\n    >\r\n      {GameRecord.getPlayerRankLabel(rowData, columnData.activePlayerId).slice(0, 1)}\r\n    </span>\r\n  );\r\nconst cellFormatGameMode = ({ cellData }: TableCellProps) => GameMode[cellData];\r\n\r\nexport function GameRecordTable({ showStartEnd = true, showFullTime = false } = {}) {\r\n  const data = useDataAdapter();\r\n  const [model] = useModel();\r\n  const scrollerProps = useScrollerProps();\r\n  const { isScrolling, onChildScroll, scrollTop, height, registerChild } = scrollerProps;\r\n  const rowGetter = useCallback(({ index }: Index) => data.getItem(index), [data]);\r\n  const getRowClassName = useCallback(\r\n    ({ index }: Index) => (index >= 0 ? clsx({ loading: !data.isItemLoaded(index), even: (index & 1) === 0 }) : \"\"),\r\n    [data]\r\n  );\r\n  const noRowsRenderer = useCallback(\r\n    () => (data.getUnfilteredCount() ? null : <p className=\"text-center\">加载中...</p>),\r\n    [data]\r\n  );\r\n  const activePlayerId = model.type === \"player\" ? model.playerId : undefined;\r\n  const cellRenderPlayer = useCallback(\r\n    ({ rowData }: TableCellProps) =>\r\n      rowData && rowData.players ? <Players game={rowData} activePlayerId={activePlayerId} /> : null,\r\n    [activePlayerId]\r\n  );\r\n  useEffect(triggerRelayout, [!!data.getUnfilteredCount()]);\r\n  return (\r\n    <div ref={registerChild as any}>\r\n      <AutoSizer disableHeight>\r\n        {({ width }) => (\r\n          <Table\r\n            autoHeight\r\n            className={activePlayerId ? \"with-active-player\" : \"\"}\r\n            rowCount={data.getCount()}\r\n            rowGetter={rowGetter}\r\n            rowHeight={window.matchMedia(\"(min-width: 768px)\").matches ? 70 : 140}\r\n            headerHeight={50}\r\n            width={width}\r\n            height={height}\r\n            isScrolling={isScrolling}\r\n            onScroll={onChildScroll}\r\n            scrollTop={scrollTop}\r\n            rowClassName={getRowClassName}\r\n            noRowsRenderer={noRowsRenderer}\r\n          >\r\n            <Column dataKey=\"modeId\" label=\"等级\" cellRenderer={cellFormatGameMode} width={40} />\r\n            {activePlayerId ? (\r\n              <Column\r\n                dataKey=\"modeId\"\r\n                label=\"顺位\"\r\n                columnData={{ activePlayerId }}\r\n                cellRenderer={cellFormatRank}\r\n                width={40}\r\n              />\r\n            ) : null}\r\n            <Column dataKey=\"players\" label=\"玩家\" cellRenderer={cellRenderPlayer} width={120} flexGrow={1} />\r\n            {showStartEnd\r\n              ? [\r\n                  <Column\r\n                    key=\"startTime\"\r\n                    dataKey=\"startTime\"\r\n                    label=\"开始\"\r\n                    cellRenderer={cellFormatTime}\r\n                    width={50}\r\n                    className=\"text-right\"\r\n                    headerClassName=\"text-right\"\r\n                  />,\r\n                  <Column\r\n                    key=\"endTime\"\r\n                    dataKey=\"endTime\"\r\n                    label=\"结束\"\r\n                    cellRenderer={cellFormatTime}\r\n                    width={50}\r\n                    headerClassName=\"text-right\"\r\n                    className=\"text-right\"\r\n                  />\r\n                ]\r\n              : null}\r\n            {showFullTime ? (\r\n              <Column\r\n                dataKey=\"startTime\"\r\n                label=\"时间\"\r\n                cellRenderer={cellFormatFullTime}\r\n                width={140}\r\n                className=\"text-right\"\r\n                headerClassName=\"text-right\"\r\n              />\r\n            ) : null}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport interface CheckboxItem {\r\n  key: string;\r\n  label: string;\r\n}\r\n\r\nexport function CheckboxGroup({\r\n  items = [] as CheckboxItem[],\r\n  selectedItemKeys = null as Set<string> | null,\r\n  groupKey = \"default\",\r\n  onChange = (selectedItemKeys: Set<string>) => {}\r\n}) {\r\n  const setSelected = function(key: string, isSelected: boolean) {\r\n    if (isSelected && (!selectedItemKeys || selectedItemKeys.has(key))) {\r\n      return;\r\n    }\r\n    if (!isSelected && selectedItemKeys && !selectedItemKeys.has(key)) {\r\n      return;\r\n    }\r\n    const newSet = new Set(selectedItemKeys || items.map(x => x.key));\r\n    if (isSelected) {\r\n      newSet.add(key);\r\n    } else {\r\n      newSet.delete(key);\r\n    }\r\n    onChange(newSet);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {items.map(item => (\r\n        <div className=\"form-check form-check-inline\" key={item.key}>\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            id={`CG_${groupKey}_${item.key}`}\r\n            value={item.key}\r\n            checked={!selectedItemKeys || selectedItemKeys.has(item.key)}\r\n            onChange={event => setSelected(item.key, event.currentTarget.checked)}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor={`CG_${groupKey}_${item.key}`}>\r\n            {item.label}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport { useCallback } from \"react\";\r\nimport { MomentInput } from \"moment\";\r\n\r\nexport function DatePicker({\r\n  date = moment() as MomentInput,\r\n  onChange = (_: MomentInput) => {},\r\n  className = \"\",\r\n  min = undefined as MomentInput,\r\n  max = moment() as MomentInput\r\n}) {\r\n  const handleChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => onChange(moment(e.currentTarget.value, \"YYYY-MM-DD\")),\r\n    [onChange]\r\n  );\r\n  return (\r\n    <input\r\n      className={className}\r\n      type=\"date\"\r\n      value={moment(date).format(\"YYYY-MM-DD\")}\r\n      min={min ? moment(min).format(\"YYYY-MM-DD\") : undefined}\r\n      max={max ? moment(max).format(\"YYYY-MM-DD\") : undefined}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const FormRow = ({ title = \"\", children = undefined as ReactNode }) => (\r\n  <div className=\"form-group row\">\r\n    <label className=\"col-sm-2 col-form-label\">{title}</label>\r\n    <div className=\"col-sm-10\">{children}</div>\r\n  </div>\r\n);\r\n","import { useCallback } from \"react\";\r\nimport React from \"react\";\r\n\r\nimport { FormRow, DatePicker, CheckboxGroup } from \"../form\";\r\nimport { GameMode } from \"../../utils/dataSource\";\r\nimport { useModel } from \"./model\";\r\nimport { MomentInput } from \"moment\";\r\nimport moment from \"moment\";\r\n\r\nexport const MODE_CHECKBOXES = Object.keys(GameMode)\r\n  .filter(x => typeof GameMode[x as keyof typeof GameMode] !== \"string\")\r\n  .map(x => ({\r\n    key: String(GameMode[x as keyof typeof GameMode]),\r\n    label: x\r\n  }));\r\n\r\nconst DEFAULT_DATE = moment().startOf(\"day\");\r\n\r\nexport function FilterPanel() {\r\n  const [model, updateModel] = useModel();\r\n  const updateSearchTextFromEvent = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => updateModel({ searchText: e.currentTarget.value }),\r\n    [updateModel]\r\n  );\r\n  const setSelectedItems = useCallback(\r\n    (selectedItemKeys: Set<string>) => updateModel({ selectedModes: selectedItemKeys }),\r\n    [updateModel]\r\n  );\r\n  const setDate = useCallback((date: MomentInput) => updateModel({ date }), [updateModel]);\r\n  if (model.type !== undefined) {\r\n    return null;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <FormRow title=\"日期\">\r\n        <DatePicker min=\"2019-08-23\" date={model.date || DEFAULT_DATE} onChange={setDate} className=\"form-control\" />\r\n      </FormRow>\r\n      <FormRow title=\"查找玩家\">\r\n        <input type=\"text\" className=\"form-control\" value={model.searchText} onChange={updateSearchTextFromEvent} />\r\n      </FormRow>\r\n      <FormRow>\r\n        <CheckboxGroup items={MODE_CHECKBOXES} selectedItemKeys={model.selectedModes} onChange={setSelectedItems} />\r\n      </FormRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\nimport {\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n  LabelList,\n  LineChart,\n  Line,\n  Dot,\n  Tooltip,\n  TooltipProps,\n  Curve\n} from \"recharts\";\n\nimport { useDataAdapter, IDataAdapter } from \"./dataAdapterProvider\";\nimport { PlayerMetadata, GameRecord, RANK_LABELS, RANK_COLORS, getLevelTag } from \"../../utils/dataSource\";\nimport { useMemo, useEffect } from \"react\";\nimport { triggerRelayout } from \"../../utils/index\";\nimport GameMode from \"../../utils/gameMode\";\nimport { Player } from \"./player\";\nimport { LevelWithDelta } from \"../../utils/dataTypes\";\n\ndeclare module \"recharts\" {\n  interface DotProps {\n    strokeWidth?: number;\n    stroke?: string;\n    fill?: string;\n    payload?: any;\n  }\n  interface LabelListProps {\n    fill?: string;\n  }\n}\n\nconst generateCells = (activeIndex: number) =>\n  RANK_COLORS.map((color, index) => (\n    <Cell fill={color} fillOpacity={activeIndex === index ? 1 : 1} key={`cell-${index}`} />\n  ));\n\nconst CELLS = generateCells(-1);\n\nconst formatLabel = (x: any) => (x.rate > 0 ? x.label : null);\nconst formatPercent = (x: any) => (x > 0 ? `${(x * 100).toFixed(2)}%` : \"\");\nconst createLabelLine = (props: any) =>\n  props.payload.payload.rate > 0 ? <Curve {...props} type=\"linear\" className=\"recharts-pie-label-line\" /> : null;\n\nfunction RankRateChart({ metadata, aspect = 1 }: { metadata: PlayerMetadata; aspect?: number }) {\n  const ranks = useMemo(() => metadata.rank_rates.map((x, index) => ({ label: RANK_LABELS[index], rate: x })), [\n    metadata\n  ]);\n  const startAngle = ranks.filter(x => x.rate > 0).length < 4 ? 45 : 0;\n  return (\n    <ResponsiveContainer width=\"100%\" aspect={aspect} height=\"auto\">\n      <PieChart>\n        <Pie\n          isAnimationActive={false}\n          data={ranks}\n          label={formatLabel}\n          labelLine={createLabelLine}\n          nameKey=\"label\"\n          dataKey=\"rate\"\n          startAngle={startAngle}\n          endAngle={startAngle + 360}\n        >\n          {CELLS}\n          <LabelList dataKey=\"rate\" formatter={formatPercent} position=\"inside\" fill=\"#fff\" />\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n\ntype DotPayload = { pos: number; rank: number; game: GameRecord; playerId: number };\n\nconst createDot = (props: { payload: DotPayload }, active?: boolean) => {\n  return (\n    <Dot\n      {...props}\n      r={5}\n      stroke={RANK_COLORS[props.payload.rank]}\n      onClick={() => window.open(GameRecord.getRecordLink(props.payload.game, props.payload.playerId), \"_blank\")}\n      {...(active ? { fill: RANK_COLORS[props.payload.rank], r: 10 } : {})}\n    />\n  );\n};\nconst createActiveDot = (props: any) => createDot(props, true);\n\nconst RankChartTooltip = ({ active, payload }: TooltipProps = {}) => {\n  if (!active || !payload || !payload.length) {\n    return null;\n  }\n  const realPayload = payload[0].payload as DotPayload;\n  return (\n    <div className=\"player-chart-tooltip\">\n      <h5>\n        {GameRecord.formatFullStartTime(realPayload.game)} {GameMode[realPayload.game.modeId]}{\" \"}\n        {RANK_LABELS[realPayload.rank]}\n      </h5>\n      {realPayload.game.players.map(x => (\n        <p key={x.accountId.toString()}>\n          <Player player={x} game={realPayload.game} isActive={realPayload.playerId === x.accountId} hideDetailLink />\n        </p>\n      ))}\n    </div>\n  );\n};\n\nfunction RecentRankChart({\n  dataAdapter,\n  playerId,\n  aspect = 2,\n  numGames = 20\n}: {\n  dataAdapter: IDataAdapter;\n  playerId: number;\n  aspect?: number;\n  numGames?: number;\n}) {\n  const dataPoints = useMemo(() => {\n    const result = [] as DotPayload[];\n    const totalGames = dataAdapter.getCount();\n    if (!totalGames) {\n      return result;\n    }\n    for (let i = 0; i < Math.min(totalGames, numGames); i++) {\n      const game = dataAdapter.getItem(i);\n      if (!(\"uuid\" in game)) {\n        break;\n      }\n      const rank = GameRecord.getRankIndexByPlayer(game, playerId);\n      result.unshift({ pos: 3 - rank, rank, game, playerId });\n    }\n    return result;\n  }, [dataAdapter]);\n  return (\n    <ResponsiveContainer width=\"100%\" aspect={aspect} height=\"auto\">\n      <LineChart data={dataPoints} margin={{ top: 15, right: 15, bottom: 15, left: 15 }}>\n        <Line\n          isAnimationActive={false}\n          dataKey=\"pos\"\n          type=\"linear\"\n          stroke=\"#b5c2ce\"\n          strokeWidth={3}\n          dot={createDot}\n          activeDot={createActiveDot}\n        />\n        <Tooltip cursor={false} content={<RankChartTooltip />} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport function PlayerDetails() {\n  const dataAdapter = useDataAdapter();\n  const metadata = dataAdapter.getMetadata<PlayerMetadata>();\n  useEffect(triggerRelayout, [!!metadata]);\n  if (!metadata || !metadata.nickname) {\n    return null;\n  }\n  return (\n    <div>\n      <h2 className=\"text-center\">玩家：{metadata.nickname}</h2>\n      <div className=\"row mt-4\">\n        <div className=\"col-md-8\">\n          <h3 className=\"text-center mb-4\">最近走势</h3>\n          <RecentRankChart dataAdapter={dataAdapter} playerId={metadata.id} aspect={6} />\n          <h3 className=\"text-center mt-4 mb-4\">相关数据</h3>\n          <dl className=\"row\">\n            <dt className=\"col-4 col-md-2\">记录场数</dt>\n            <dd className=\"col-8 col-md-4\">{metadata.count}</dd>\n            <dt className=\"col-4 col-md-2\">当前等级</dt>\n            <dd className=\"col-8 col-md-4\">{LevelWithDelta.format(metadata.level)}</dd>\n            <dt className=\"col-4 col-md-2\">平均顺位</dt>\n            <dd className=\"col-8 col-md-4\">{metadata.avg_rank.toFixed(3)}</dd>\n            <dt className=\"col-4 col-md-2\">被飞率</dt>\n            <dd className=\"col-8 col-md-4\">{formatPercent(metadata.negative_rate)}</dd>\n          </dl>\n        </div>\n        <div className=\"col-md-4\">\n          <h3 className=\"text-center mb-4\">累计战绩</h3>\n          <RankRateChart metadata={metadata} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Switch, Route, Redirect, generatePath as genPath } from \"react-router-dom\";\n\nimport { Model, ModelProvider } from \"./model\";\nimport moment from \"moment\";\nimport { RouteSync } from \"./routeSync\";\nimport { DataAdapterProvider } from \"./dataAdapterProvider\";\nimport { GameRecordTable } from \"./table\";\nimport { FilterPanel } from \"./filterPanel\";\nimport { PlayerDetails } from \"./playerDetails\";\n\nconst PLAYER_PATH = \"/player/:id\";\nconst PATH = \"/:date(\\\\d{4}-\\\\d{2}-\\\\d{2})/:modes([0-9.]+)?/:search?\";\n\nexport function generatePath(model: Model): string {\n  if (model.type === \"player\") {\n    return genPath(PLAYER_PATH, { id: model.playerId });\n  }\n  if ((!model.selectedModes || !model.selectedModes.size) && !model.searchText && !model.date) {\n    return \"/\";\n  }\n  return genPath(PATH, {\n    date: moment(model.date || new Date()).format(\"YYYY-MM-DD\"),\n    modes: model.selectedModes && model.selectedModes.size ? Array.from(model.selectedModes).join(\".\") : undefined,\n    search: model.searchText || undefined\n  });\n}\n\nfunction Routes() {\n  return (\n    <ModelProvider>\n      <DataAdapterProvider>\n        <Switch>\n          <Route exact path={PLAYER_PATH}>\n            <RouteSync view=\"player\" />\n            <PlayerDetails />\n            <GameRecordTable showFullTime showStartEnd={false} />\n          </Route>\n          <Route exact path={[\"/\", PATH]}>\n            <RouteSync view=\"listing\" />\n            <FilterPanel />\n            <GameRecordTable />\n          </Route>\n          <Route>\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </DataAdapterProvider>\n    </ModelProvider>\n  );\n}\nexport default Routes;\n","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Scroller from \"../misc/scroller\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { AppHeader } from \"./appHeader\";\r\nimport GameRecords from \"../gameRecords\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Scroller>\r\n        <AppHeader />\r\n        <Container>\r\n          <GameRecords />\r\n        </Container>\r\n      </Scroller>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-virtualized/styles.css\";\nimport \"./styles.css\";\n\nimport App from \"./components/app\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement)\n"],"sourceRoot":""}