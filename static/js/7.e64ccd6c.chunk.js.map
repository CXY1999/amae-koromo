{"version":3,"sources":["components/charts/simplePieChart.tsx","components/playerDetails/charts/winLoseDistribution.tsx"],"names":["DEFAULT_COLORS","RADIAN","Math","PI","renderCustomizedLabelFactory","lineHeight","innerLabelFontSize","props","value","lines","toString","trim","split","viewBox","cx","cy","outerRadius","startAngle","radius","angle","x","cos","y","sin","polarToCartesian","endAngle","sign","min","abs","getDeltaAngle","yStart","length","map","text","index","key","stroke","strokeWidth","fill","fontSize","textAnchor","dominantBaseline","defaultInnerLabel","item","innerLabel","defaultOuterLabel","outerLabel","SimplePieChart","items","innerLabelLineHeight","colors","aspect","cells","useMemo","Array","_","fillOpacity","renderCustomizedLabel","width","height","isAnimationActive","data","nameKey","dataKey","label","valueAccessor","undefined","position","content","buildItems","stats","keys","labels","total","sum","formatPercent","WinLoseDistribution","winData","loseData","className"],"mappings":"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","file":"static/js/7.e64ccd6c.chunk.js","sourcesContent":["import React from \"react\";\nimport { ResponsiveContainer, PieChart, Pie, Cell, LabelList, LabelProps, PolarViewBox } from \"recharts\";\nimport { useMemo } from \"react\";\n\nconst DEFAULT_COLORS = [\"#003f5c\", \"#7a5195\", \"#ef5675\", \"#ffa600\"];\n\nconst getDeltaAngle = (startAngle: number, endAngle: number) => {\n  const sign = Math.sign(endAngle - startAngle);\n  const deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);\n\n  return sign * deltaAngle;\n};\n\nconst RADIAN = Math.PI / 180;\n\nconst polarToCartesian = (cx: number, cy: number, radius: number, angle: number) => ({\n  x: cx + Math.cos(-RADIAN * angle) * radius,\n  y: cy + Math.sin(-RADIAN * angle) * radius\n});\n\nconst renderCustomizedLabelFactory = ({ lineHeight = 24, innerLabelFontSize = \"1rem\" }) => (props: LabelProps) => {\n  const { value } = props;\n  if (!value) {\n    return null;\n  }\n  const lines = value\n    .toString()\n    .trim()\n    .split(\"\\n\");\n  const { cx, cy, outerRadius, startAngle, endAngle } = props.viewBox as Required<PolarViewBox>;\n  const labelAngle = startAngle + getDeltaAngle(startAngle, endAngle) / 2;\n  const { x, y } = polarToCartesian(cx, cy, outerRadius / 2, labelAngle);\n  const yStart = y - (lines.length - 1) * (lineHeight / 2);\n  return (\n    <g>\n      {lines.map((text, index) => (\n        <text\n          key={index}\n          x={x}\n          y={yStart + index * lineHeight}\n          stroke=\"#fff\"\n          strokeWidth=\"0.5\"\n          fill=\"#fff\"\n          fontSize={innerLabelFontSize}\n          textAnchor=\"middle\"\n          dominantBaseline=\"central\"\n        >\n          {text}\n        </text>\n      ))}\n    </g>\n  );\n};\n\nexport type PieChartItem = {\n  value: number;\n  innerLabel?: string;\n  outerLabel?: string;\n};\n\nfunction defaultInnerLabel<T extends PieChartItem>(item: T) {\n  return item.innerLabel || \"\";\n}\nfunction defaultOuterLabel<T extends PieChartItem>(item: T) {\n  return item.outerLabel || \"\";\n}\n\ndeclare module \"recharts\" {\n  interface LabelListProps {\n    fill?: string;\n  }\n}\n\nexport default function SimplePieChart<T extends PieChartItem>({\n  items,\n  innerLabel = defaultInnerLabel,\n  outerLabel = defaultOuterLabel,\n  innerLabelLineHeight = 24,\n  startAngle = 0,\n  colors = DEFAULT_COLORS,\n  innerLabelFontSize = \"1rem\",\n  aspect = 1\n}: {\n  items: T[];\n  innerLabel?: (item: T) => string;\n  outerLabel?: (item: T) => string;\n  innerLabelLineHeight?: number;\n  startAngle?: number;\n  colors?: string[];\n  innerLabelFontSize?: string;\n  aspect?: number;\n}) {\n  const cells = useMemo(\n    () =>\n      Array(items.length)\n        .fill(0)\n        .map((_, index) => <Cell fill={colors[index % colors.length]} fillOpacity={1} key={`cell-${index}`} />),\n    [items.length, colors]\n  );\n  const renderCustomizedLabel = useMemo(\n    () => renderCustomizedLabelFactory({ lineHeight: innerLabelLineHeight, innerLabelFontSize }),\n    [innerLabelLineHeight, innerLabelFontSize]\n  );\n  return (\n    <ResponsiveContainer width=\"100%\" aspect={aspect} height=\"auto\">\n      <PieChart>\n        <Pie\n          isAnimationActive={false}\n          data={items}\n          nameKey=\"outerLabel\"\n          dataKey=\"value\"\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          label={outerLabel as (x: any) => string}\n          startAngle={startAngle}\n          endAngle={startAngle + 360}\n        >\n          {cells}\n          <LabelList\n            valueAccessor={innerLabel}\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            dataKey={undefined as any}\n            position=\"inside\"\n            fill=\"#fff\"\n            content={renderCustomizedLabel}\n          />\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n","import React from \"react\";\nimport { PlayerExtendedStats } from \"../../../data/types\";\nimport SimplePieChart, { PieChartItem } from \"../../charts/simplePieChart\";\nimport { sum } from \"../../../utils\";\nimport { formatPercent } from \"../../../utils/index\";\nimport { useMemo } from \"react\";\n\nfunction buildItems(stats: PlayerExtendedStats, keys: (keyof PlayerExtendedStats)[], labels: string[]): PieChartItem[] {\n  const total = sum(keys.map(key => stats[key] as number));\n  return keys.map((key, index) => ({\n    value: stats[key] as number,\n    outerLabel: labels[index],\n    innerLabel: formatPercent((stats[key] as number) / total)\n  }));\n}\n\nexport default function WinLoseDistribution({ stats }: { stats: PlayerExtendedStats }) {\n  const winData = useMemo(() => buildItems(stats, [\"立直和了\", \"副露和了\", \"默听和了\"], [\"立直\", \"副露\", \"默听\"]), [\n    stats\n  ]);\n  const loseData = useMemo(\n    () => buildItems(stats, [\"放铳至立直\", \"放铳至副露\", \"放铳至默听\"], [\"立直\", \"副露\", \"默听\"]),\n    [stats]\n  );\n  return (\n    <div className=\"row\">\n      <div className=\"col-lg-6\">\n        <h5 className=\"text-center mb-n3\">和牌时</h5>\n        <SimplePieChart aspect={3 / 2} items={winData} startAngle={-45} innerLabelFontSize=\"0.85rem\" />\n      </div>\n      <div className=\"col-lg-6\">\n        <h5 className=\"text-center mb-n3\">放铳至</h5>\n        <SimplePieChart aspect={3 / 2} items={loseData} startAngle={-45} innerLabelFontSize=\"0.85rem\" />\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}