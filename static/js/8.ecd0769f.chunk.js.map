{"version":3,"sources":["components/routing/index.tsx","components/playerDetails/playerDetailsSettings.tsx","components/playerDetails/statItem.tsx","components/playerDetails/estimatedStableLevel.tsx","components/playerDetails/sameMatchRate.tsx","components/playerDetails/playerDetails.tsx"],"names":["RouteDef","Error","ViewRoutes","Context","React","createContext","NavButtons","className","replace","keepState","routes","useContext","urlBase","useRouteMatch","url","map","route","key","path","to","loc","pathname","state","undefined","exact","activeClassName","title","ViewSwitch","defaultRenderDirectly","mutateTitle","children","match","useLocation","push","SimpleRoutedSubViews","Provider","value","props","x","slice","DateRangeOptions","DATE_RANGE_ITEMS","Object","keys","label","PlayerDetailsSettings","showLevel","useModel","model","updateModel","useState","type","All","startDate","endDate","dayjs","isSame","subtract","Custom","Last4Weeks","mode","setMode","Conf","dateMin","customDateFrom","setCustomDateFrom","customDateTo","setCustomDateTo","useEffect","playerId","selectedMode","setSelectedMode","useCallback","inline","selectedItemKey","items","groupKey","onChange","availableModes","length","min","date","StatItem","description","data-tip","ENABLED_MODES","GameMode","玉","王座","三玉","三王座","EstimatedStableLevel","metadata","features","estimatedStableLevel","level","LevelWithDelta","getAdjustedLevel","parseInt","includes","isAllowedMode","notEnoughData","count","expectedGamePoint","PlayerMetadata","calculateExpectedGamePoint","estimatedNumGamesToChangeLevel","getMaxPoint","curPoint","Level","id","score","delta","getStartingPoint","changeLevelMsg","levelComponents","getStableLevelComponents","levelNames","modeLabel","toFixed","join","estimateStableLevel2","Math","abs","SameMatchRateTable","numGames","numDisplay","currentAccountId","adapter","useDataAdapter","getCount","numProcessedGames","rates","useMemo","i","game","getItem","players","player","accountId","result","values","sort","a","b","Fragment","generatePlayerPathById","nickname","formatPercent","SameMatchRate","RankRateChart","Loadable","loader","loading","RecentRankChart","WinLoseDistribution","ReactTooltipPromise","ReactTooltip","ExtendedStatsViewAsync","view","stats","useAsync","extended_stats","triggerRelayout","View","PlayerExtendedStatsView","和牌率","放铳率","自摸率","默听率","流局率","流听率","副露率","立直率","和了巡数","平均打点","平均铳点","MoreStats","getTag","max_level","formatAdjustedScore","levelObj","fixMaxLevel","最大连庄","里宝率","被炸率","平均被炸点数","放铳时立直率","放铳时副露率","副露后放铳率","副露后和牌率","副露后流局率","RiichiStats","立直后和牌率","立直后放铳率","立直收支","立直收入","立直支出","先制率","追立率","被追率","formatFixed3","立直巡目","立直后流局率","一发率","振听立直率","BasicStats","avg_rank","negative_rate","LuckStats","役满","累计役满","最大累计番数","流满","W立直","平均起手向听","LargestLost","最近大铳","target","rel","href","GameRecord","getRecordLink","FanStatEntryList","formatFanSummary","fans","formatFullStartTime","start_time","FanStatEntry2","formatFan","PlayerStats","then","rebuild","PlayerDetails","dataAdapter","getMetadata","Helmet","aspect","effect","multiline","place"],"mappings":"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","file":"static/js/8.ecd0769f.chunk.js","sourcesContent":["import React from \"react\";\nimport { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useRouteMatch, Switch, Route, Redirect, useLocation } from \"react-router\";\nimport { Helmet } from \"react-helmet\";\n\ntype RouteDefProps = { path: string; exact?: boolean; title: string; children: React.ReactChild | React.ReactChildren };\nexport const RouteDef: React.FunctionComponent<RouteDefProps> = () => {\n  throw new Error(\"Not intended for rendering\");\n};\n\ntype RoutesProps = { children: React.FunctionComponentElement<RouteDefProps>[] };\nexport const ViewRoutes: React.FunctionComponent<RoutesProps> = () => {\n  throw new Error(\"Not intended for rendering\");\n};\n\nconst Context = React.createContext<RouteDefProps[]>([]);\n\nexport function NavButtons({ className = \"\", replace = false, keepState = false }) {\n  const routes = useContext(Context);\n  const match = useRouteMatch() || { url: \"\" };\n  const urlBase = match.url.replace(/\\/+$/, \"\");\n  return (\n    <nav className={`nav nav-pills mb-3 ${className}`}>\n      {routes.map(route => (\n        <NavLink\n          key={route.path}\n          to={loc => ({\n            pathname: `${urlBase}/${route.path}`,\n            state: keepState ? loc.state : undefined\n          })}\n          replace={replace}\n          exact={!!route.exact}\n          className=\"nav-link\"\n          activeClassName=\"active\"\n        >\n          {route.title}\n        </NavLink>\n      ))}\n    </nav>\n  );\n}\n\nexport function ViewSwitch({\n  defaultRenderDirectly = false,\n  mutateTitle = true,\n  children\n}: {\n  defaultRenderDirectly?: boolean;\n  mutateTitle?: boolean;\n  children?: React.ReactChild | React.ReactChildren;\n}) {\n  const routes = useContext(Context);\n  const match = useRouteMatch() || { url: \"\" };\n  const loc = useLocation();\n  const urlBase = match.url.replace(/\\/+$/, \"\");\n  return (\n    <Switch>\n      {routes.map(route => (\n        <Route exact={route.exact} key={route.path} path={`${urlBase}/${route.path}`}>\n          {mutateTitle && (\n            <Helmet>\n              <title>{route.title}</title>\n            </Helmet>\n          )}\n          {route.children}\n        </Route>\n      ))}\n      <Route>\n        {defaultRenderDirectly ? (\n          routes[0].children\n        ) : (\n          <Redirect to={{ ...loc, pathname: `${urlBase}/${routes[0].path}` }} push={false} />\n        )}\n      </Route>\n      {children}\n    </Switch>\n  );\n}\n\nexport function SimpleRoutedSubViews({\n  children\n}: {\n  children: [React.FunctionComponentElement<RoutesProps>, ...(React.ReactChild | React.ReactChildren)[]];\n}) {\n  return <Context.Provider value={children[0].props.children.map(x => x.props)}>{children.slice(1)}</Context.Provider>;\n}\n","import React from \"react\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { FormRow } from \"../form/formRow\";\nimport { useModel } from \"../gameRecords/model\";\nimport { CheckboxGroup, DatePicker } from \"../form\";\nimport dayjs from \"dayjs\";\nimport { ModeSelector } from \"../gameRecords/modeSelector\";\nimport Conf from \"../../utils/conf\";\n\nenum DateRangeOptions {\n  All = \"全部\",\n  Last4Weeks = \"最近四周\",\n  Custom = \"自定义\"\n}\nconst DATE_RANGE_ITEMS = Object.keys(DateRangeOptions).map((key: string) => ({\n  key: DateRangeOptions[key as keyof typeof DateRangeOptions],\n  label: DateRangeOptions[key as keyof typeof DateRangeOptions]\n}));\n\nexport default function PlayerDetailsSettings({ showLevel = false }) {\n  const [model, updateModel] = useModel();\n  const [mode, setMode] = useState(() => {\n    if (model.type !== \"player\") {\n      return DateRangeOptions.All;\n    }\n    if (!model.startDate) {\n      return DateRangeOptions.All;\n    }\n    if (\n      (!model.endDate || dayjs(model.endDate).isSame(dayjs(), \"day\")) &&\n      dayjs(model.startDate).isSame(dayjs().subtract(27, \"day\"), \"day\")\n    ) {\n      return DateRangeOptions.Last4Weeks;\n    }\n    return DateRangeOptions.Custom;\n  });\n  const [customDateFrom, setCustomDateFrom] = useState(() =>\n    model.type === \"player\" && model.startDate ? model.startDate : Conf.dateMin\n  );\n  const [customDateTo, setCustomDateTo] = useState(() =>\n    model.type === \"player\" && model.endDate ? model.endDate : dayjs()\n  );\n  useEffect(() => {\n    if (model.type !== \"player\") {\n      return;\n    }\n    switch (mode) {\n      case DateRangeOptions.All:\n        updateModel({\n          type: \"player\",\n          playerId: model.playerId,\n          startDate: null,\n          endDate: null,\n          selectedMode: undefined\n        });\n        break;\n      case DateRangeOptions.Last4Weeks:\n        updateModel({\n          type: \"player\",\n          playerId: model.playerId,\n          startDate: dayjs().subtract(27, \"day\"),\n          endDate: null\n        });\n        break;\n      case DateRangeOptions.Custom:\n        updateModel({\n          type: \"player\",\n          playerId: model.playerId,\n          startDate: customDateFrom,\n          endDate: customDateTo\n        });\n        break;\n    }\n  }, [model, mode, customDateFrom, customDateTo, updateModel]);\n  const setSelectedMode = useCallback(mode => updateModel({ type: \"player\", selectedMode: mode }), [updateModel]);\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <FormRow title=\"时间\" inline={true}>\n            <CheckboxGroup\n              type=\"radio\"\n              selectedItemKey={mode}\n              items={DATE_RANGE_ITEMS}\n              groupKey=\"PlayerDetailsDateRangeSelector\"\n              onChange={setMode as (x: string) => void}\n            />\n          </FormRow>\n        </div>\n        {showLevel && Conf.availableModes.length > 1 && (\n          <div className=\"col-6\">\n            <FormRow title=\"等级\" inline={true}>\n              <ModeSelector mode={model.selectedMode} onChange={setSelectedMode} />\n            </FormRow>\n          </div>\n        )}\n      </div>\n      {mode === DateRangeOptions.Custom ? (\n        <div className=\"row mt-n3\">\n          <div className=\"col-6\">\n            <FormRow inline={true}>\n              <DatePicker\n                min={Conf.dateMin}\n                onChange={setCustomDateFrom}\n                date={customDateFrom}\n                className=\"form-control\"\n              />\n              <DatePicker min={Conf.dateMin} onChange={setCustomDateTo} date={customDateTo} className=\"form-control\" />\n            </FormRow>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function StatItem({ label, description, className = \"\", children }: {\n  label: string;\n  description?: string;\n  className?: string;\n  children: React.ReactChild;\n}) {\n  return (<>\n    <dt className={`col-2 col-lg-1 text-nowrap ${className}`}>{label}</dt>\n    <dd className={`col-4 col-lg-3 text-right ${className}`} data-tip={description || \"\"}>\n      {children}\n    </dd>\n  </>);\n}\n","import React from \"react\";\nimport { LevelWithDelta, PlayerMetadata, GameMode, Level, modeLabel } from \"../../data/types\";\nimport { useModel } from \"../gameRecords/model\";\nimport StatItem from \"./statItem\";\nimport Conf from \"../../utils/conf\";\n\nconst ENABLED_MODES = [GameMode.玉, GameMode.王座, GameMode.三玉, GameMode.三王座];\n\nexport default function EstimatedStableLevel({ metadata }: { metadata: PlayerMetadata }) {\n  const [model] = useModel();\n  if (!Conf.features.estimatedStableLevel) {\n    return null;\n  }\n  const level = LevelWithDelta.getAdjustedLevel(metadata.level);\n  if (!model.selectedMode) {\n    return null;\n  }\n  const mode = parseInt(model.selectedMode) as GameMode;\n  if (!ENABLED_MODES.includes(mode) || !level.isAllowedMode(mode)) {\n    return null;\n  }\n  const notEnoughData = metadata.count < 100;\n  const expectedGamePoint = PlayerMetadata.calculateExpectedGamePoint(metadata, mode);\n  let estimatedNumGamesToChangeLevel = null as number | null;\n  if (level.getMaxPoint() && level.isAllowedMode(mode)) {\n    const curPoint = level.isSame(new Level(metadata.level.id))\n      ? metadata.level.score + metadata.level.delta\n      : level.getStartingPoint();\n    estimatedNumGamesToChangeLevel =\n      expectedGamePoint > 0 ? (level.getMaxPoint() - curPoint) / expectedGamePoint : curPoint / expectedGamePoint;\n  }\n  const changeLevelMsg = estimatedNumGamesToChangeLevel\n    ? `，括号内为预计${estimatedNumGamesToChangeLevel > 0 ? \"升\" : \"降\"}段场数`\n    : \"\";\n  const levelComponents = PlayerMetadata.getStableLevelComponents(metadata, mode);\n  const levelNames = \"一二三四\".slice(0, levelComponents.length);\n  return (\n    <>\n      <StatItem\n        label=\"安定段位\"\n        description={`在${modeLabel(mode)}之间一直进行对局，预测最终能达到的段位。${\n          levelNames.length === 3 ? \"括号内为安定段位时的分数期望。\" : \"\"\n        }${notEnoughData ? \"（数据量不足，计算结果可能有较大偏差）\" : \"\"}<br/>${levelNames.slice(\n          0,\n          levelNames.length - 1\n        )}位平均 Pt / ${levelNames[levelNames.length - 1]}位平均得点 Pt：[${levelComponents\n          .map(x => x.toFixed(2))\n          .join(\"/\")}]`}\n        className={notEnoughData ? \"font-italic font-lighter text-muted\" : \"\"}\n      >\n        <span>\n          {PlayerMetadata.estimateStableLevel2(metadata, mode)}\n          {notEnoughData && \"?\"}\n        </span>\n      </StatItem>\n      <StatItem\n        label=\"分数期望\"\n        description={`在${modeLabel(mode)}之间每局获得点数的数学期望值${changeLevelMsg}${\n          notEnoughData ? \"（数据量不足，计算结果可能有较大偏差）\" : \"\"\n        }`}\n        className={notEnoughData ? \"font-italic font-lighter text-muted\" : \"\"}\n      >\n        <span>\n          {expectedGamePoint.toFixed(1)}\n          {estimatedNumGamesToChangeLevel ? ` (${Math.abs(estimatedNumGamesToChangeLevel).toFixed(0)})` : \"\"}\n          {notEnoughData && \"?\"}\n        </span>\n      </StatItem>\n    </>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDataAdapter } from \"../gameRecords/dataAdapterProvider\";\nimport { PlayerRecord } from \"../../data/types\";\nimport Loading from \"../misc/loading\";\nimport { generatePlayerPathById } from \"../gameRecords/routes\";\nimport { formatPercent } from \"../../utils\";\nimport { SimpleRoutedSubViews, ViewRoutes, RouteDef, NavButtons, ViewSwitch } from \"../routing\";\n\nexport function SameMatchRateTable({ numGames = 100, numDisplay = 10, currentAccountId = 0 }) {\n  const adapter = useDataAdapter();\n  const count = adapter.getCount();\n  const numProcessedGames = Math.min(count, numGames);\n  const rates = useMemo(() => {\n    if (count <= 0) {\n      return null;\n    }\n    const map: { [key: number]: { player: PlayerRecord; count: number } } = {};\n    for (let i = 0; i < numProcessedGames; i++) {\n      const game = adapter.getItem(i);\n      if (!(\"uuid\" in game)) {\n        return null; // Not loaded, try again later\n      }\n      for (const player of game.players) {\n        if (player.accountId === currentAccountId) {\n          continue;\n        }\n        if (!map[player.accountId]) {\n          map[player.accountId] = {\n            player,\n            count: 0\n          };\n        }\n        map[player.accountId].count++;\n      }\n    }\n    const result = Object.values(map);\n    result.sort((a, b) => b.count - a.count);\n    return result;\n  }, [count, adapter, numProcessedGames, currentAccountId]);\n  if (count <= 0) {\n    return null;\n  }\n  if (!rates) {\n    return <Loading />;\n  }\n  return (\n    <dl className=\"row\">\n      {rates.slice(0, numDisplay).map(x => (\n        <React.Fragment key={x.player.accountId}>\n          <dt className=\"col-8 col-lg-4 font-weight-normal\">\n            <Link to={generatePlayerPathById(x.player.accountId)}>{x.player.nickname}</Link>\n          </dt>\n          <dd className=\"col-4 col-lg-2 text-right\">\n            {formatPercent(x.count / numProcessedGames)} ({x.count})\n          </dd>\n        </React.Fragment>\n      ))}\n    </dl>\n  );\n}\n\nexport default function SameMatchRate({ numDisplay = 10, currentAccountId = 0 }) {\n  return (\n    <SimpleRoutedSubViews>\n      <ViewRoutes>\n        <RouteDef path=\"latest\" title=\"最近 100 局\">\n          <SameMatchRateTable currentAccountId={currentAccountId} numDisplay={numDisplay} />\n        </RouteDef>\n        <RouteDef path=\"all\" title=\"全部\">\n          <SameMatchRateTable currentAccountId={currentAccountId} numDisplay={numDisplay} numGames={0x7fffffff} />\n        </RouteDef>\n      </ViewRoutes>\n      <NavButtons className=\"mt-n3\" />\n      <ViewSwitch mutateTitle={false} />\n    </SimpleRoutedSubViews>\n  );\n}\n","import React from \"react\";\nimport Loadable from \"../misc/customizedLoadable\";\nimport { Helmet } from \"react-helmet\";\n\nimport { useDataAdapter } from \"../gameRecords/dataAdapterProvider\";\nimport { useEffect } from \"react\";\nimport { triggerRelayout, formatPercent, useAsync, formatFixed3 } from \"../../utils/index\";\nimport {\n  LevelWithDelta,\n  PlayerExtendedStats,\n  PlayerMetadata,\n  GameRecord,\n  FanStatEntry2,\n  FanStatEntryList\n} from \"../../data/types\";\nimport Loading from \"../misc/loading\";\nimport PlayerDetailsSettings from \"./playerDetailsSettings\";\nimport StatItem from \"./statItem\";\nimport EstimatedStableLevel from \"./estimatedStableLevel\";\nimport { Level } from \"../../data/types/level\";\nimport { ViewRoutes, RouteDef, SimpleRoutedSubViews, NavButtons, ViewSwitch } from \"../routing\";\nimport { useLocation } from \"react-router-dom\";\nimport SameMatchRate from \"./sameMatchRate\";\n\nconst RankRateChart = Loadable({\n  loader: () => import(\"./charts/rankRate\"),\n  loading: () => <Loading />\n});\nconst RecentRankChart = Loadable({\n  loader: () => import(\"./charts/recentRank\"),\n  loading: () => <Loading />\n});\nconst WinLoseDistribution = Loadable({\n  loader: () => import(\"./charts/winLoseDistribution\"),\n  loading: () => <Loading />\n});\nconst ReactTooltipPromise = import(\"react-tooltip\");\nconst ReactTooltip = Loadable({\n  loader: () => ReactTooltipPromise,\n  loading: () => null\n});\n\nfunction ExtendedStatsViewAsync({\n  metadata,\n  view\n}: {\n  metadata: PlayerMetadata;\n  view: React.ComponentType<{ stats: PlayerExtendedStats; metadata: PlayerMetadata }>;\n}) {\n  const stats = useAsync(metadata.extended_stats);\n  useEffect(triggerRelayout, [!!stats]);\n  if (!stats) {\n    return null;\n  }\n  const View = view;\n  return <View stats={stats} metadata={metadata} />;\n}\n\nfunction PlayerExtendedStatsView({ stats }: { stats: PlayerExtendedStats }) {\n  return (\n    <>\n      <StatItem label=\"和牌率\" description=\"和牌局数 / 总局数\">\n        {formatPercent(stats.和牌率 || 0)}\n      </StatItem>\n      <StatItem label=\"放铳率\" description=\"放铳局数 / 总局数\">\n        {formatPercent(stats.放铳率 || 0)}\n      </StatItem>\n      <StatItem label=\"自摸率\" description=\"自摸局数 / 和牌局数\">\n        {formatPercent(stats.自摸率 || 0)}\n      </StatItem>\n      <StatItem label=\"默胡率\" description=\"门清默听和牌局数 / 和牌局数\">\n        {formatPercent(stats.默听率 || 0)}\n      </StatItem>\n      <StatItem label=\"流局率\" description=\"流局局数 / 总局数\">\n        {formatPercent(stats.流局率 || 0)}\n      </StatItem>\n      <StatItem label=\"流听率\" description=\"流局听牌局数 / 流局局数\">\n        {formatPercent(stats.流听率 || 0)}\n      </StatItem>\n      <StatItem label=\"副露率\" description=\"副露局数 / 总局数\">\n        {formatPercent(stats.副露率 || 0)}\n      </StatItem>\n      <StatItem label=\"立直率\" description=\"立直局数 / 总局数\">\n        {formatPercent(stats.立直率 || 0)}\n      </StatItem>\n      <StatItem label=\"和了巡数\">{(stats.和了巡数 || 0).toFixed(3)}</StatItem>\n      <StatItem label=\"平均打点\">{stats.平均打点 || 0}</StatItem>\n      <StatItem label=\"平均铳点\">{stats.平均铳点 || 0}</StatItem>\n    </>\n  );\n}\n\nfunction fixMaxLevel(level: LevelWithDelta): LevelWithDelta {\n  const levelObj = new Level(level.id);\n  if (level.score + level.delta < levelObj.getStartingPoint()) {\n    return {\n      id: level.id,\n      score: levelObj.getStartingPoint(),\n      delta: 0\n    };\n  }\n  return level;\n}\n\nfunction MoreStats({ stats, metadata }: { stats: PlayerExtendedStats; metadata: PlayerMetadata }) {\n  return (\n    <>\n      <StatItem label=\"最高等级\">{LevelWithDelta.getTag(metadata.max_level)}</StatItem>\n      <StatItem label=\"最高分数\">{LevelWithDelta.formatAdjustedScore(fixMaxLevel(metadata.max_level))}</StatItem>\n      <StatItem label=\"最大连庄\">{stats.最大连庄 || 0}</StatItem>\n      <StatItem label=\"里宝率\" description=\"中里宝局数 / 立直和了局数\">\n        {formatPercent(stats.里宝率 || 0)}\n      </StatItem>\n      <StatItem label=\"被炸率\" description=\"被炸庄（满贯或以上）次数 / 被自摸次数\">\n        {formatPercent(stats.被炸率 || 0)}\n      </StatItem>\n      <StatItem label=\"平均被炸点数\" description=\"被炸庄（满贯或以上）点数 / 次数\">\n        {stats.平均被炸点数 || 0}\n      </StatItem>\n      <StatItem label=\"放铳时立直率\" description=\"放铳时立直次数 / 放铳次数\">\n        {formatPercent(stats.放铳时立直率 || 0)}\n      </StatItem>\n      <StatItem label=\"放铳时副露率\" description=\"放铳时副露次数 / 放铳次数\">\n        {formatPercent(stats.放铳时副露率 || 0)}\n      </StatItem>\n      <StatItem label=\"副露后放铳率\" description=\"放铳时副露次数 / 副露次数\">\n        {formatPercent(stats.副露后放铳率 || 0)}\n      </StatItem>\n      <StatItem label=\"副露后和牌率\" description=\"副露后和牌次数 / 副露次数\">\n        {formatPercent(stats.副露后和牌率 || 0)}\n      </StatItem>\n      <StatItem label=\"副露后流局率\" description=\"副露后流局次数 / 副露次数\">\n        {formatPercent(stats.副露后流局率 || 0)}\n      </StatItem>\n    </>\n  );\n}\nfunction RiichiStats({ stats }: { stats: PlayerExtendedStats; metadata: PlayerMetadata }) {\n  return (\n    <>\n      <StatItem label=\"立直率\" description=\"立直局数 / 总局数\">\n        {formatPercent(stats.立直率 || 0)}\n      </StatItem>\n      <StatItem label=\"立直和了\" description=\"立直和了局数 / 立直局数\">\n        {formatPercent(stats.立直后和牌率 || 0)}\n      </StatItem>\n      <StatItem label=\"立直放铳\" description=\"立直放铳局数 / 立直局数\">\n        {formatPercent(stats.立直后放铳率 || 0)}\n      </StatItem>\n      <StatItem label=\"立直收支\" description=\"立直总收支（含供托） / 立直局数\">\n        {stats.立直收支 || 0}\n      </StatItem>\n      <StatItem label=\"立直收入\" description=\"立直和了收入（含供托） / 立直和了局数\">\n        {stats.立直收入 || 0}\n      </StatItem>\n      <StatItem label=\"立直支出\" description=\"立直放铳支出（含立直棒） / 立直放铳局数\">\n        {stats.立直支出 || 0}\n      </StatItem>\n      <StatItem label=\"先制率\" description=\"先制立直局数 / 立直局数\">\n        {formatPercent(stats.先制率 || 0)}\n      </StatItem>\n      <StatItem label=\"追立率\" description=\"追立局数 / 立直局数\">\n        {formatPercent(stats.追立率 || 0)}\n      </StatItem>\n      <StatItem label=\"被追率\" description=\"被追立局数 / 立直局数\">\n        {formatPercent(stats.被追率 || 0)}\n      </StatItem>\n      <StatItem label=\"立直巡目\">{formatFixed3(stats.立直巡目 || 0)}</StatItem>\n      <StatItem label=\"立直流局\" description=\"立直流局局数 / 立直局数\">\n        {formatPercent(stats.立直后流局率 || 0)}\n      </StatItem>\n      <StatItem label=\"一发率\" description=\"一发局数 / 立直和了局数\">\n        {formatPercent(stats.一发率 || 0)}\n      </StatItem>\n      <StatItem label=\"振听率\" description=\"振听立直局数（不含立直见逃） / 立直局数\">\n        {formatPercent(stats.振听立直率 || 0)}\n      </StatItem>\n    </>\n  );\n}\nfunction BasicStats({ metadata }: { metadata: PlayerMetadata }) {\n  return (\n    <>\n      <StatItem label=\"记录场数\">{metadata.count}</StatItem>\n      <StatItem label=\"记录等级\">{LevelWithDelta.getTag(metadata.level)}</StatItem>\n      <StatItem label=\"记录分数\">{LevelWithDelta.formatAdjustedScore(metadata.level)}</StatItem>\n      <ExtendedStatsViewAsync metadata={metadata} view={PlayerExtendedStatsView} />\n      <StatItem label=\"平均顺位\">{metadata.avg_rank.toFixed(3)}</StatItem>\n      <StatItem label=\"被飞率\">{formatPercent(metadata.negative_rate)}</StatItem>\n      <EstimatedStableLevel metadata={metadata} />\n    </>\n  );\n}\nfunction LuckStats({ stats }: { stats: PlayerExtendedStats }) {\n  return (\n    <>\n      <StatItem label=\"役满\" description=\"和出役满次数\">\n        {stats.役满 || 0}\n      </StatItem>\n      <StatItem label=\"累计役满\" description=\"和出累计役满次数\">\n        {stats.累计役满 || 0}\n      </StatItem>\n      <StatItem label=\"最大累计番数\" description=\"和出的最大番数（不含役满役）\">\n        {stats.最大累计番数 || 0}\n      </StatItem>\n      <StatItem label=\"流满\" description=\"流满次数\">\n        {stats.流满 || 0}\n      </StatItem>\n      <StatItem label=\"两立直\" description=\"两立直次数\">\n        {stats.W立直 || 0}\n      </StatItem>\n      <StatItem label=\"平均起手向听\">{formatFixed3(stats.平均起手向听)}</StatItem>\n    </>\n  );\n}\nfunction LargestLost({ stats, metadata }: { stats: PlayerExtendedStats; metadata: PlayerMetadata }) {\n  if (!stats.最近大铳) {\n    return <p className=\"text-center\">无满贯或以上大铳</p>;\n  }\n  return (\n    <div>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"d-flex justify-content-between font-weight-bold\"\n        href={GameRecord.getRecordLink(stats.最近大铳.id, metadata.id)}\n      >\n        <span>{FanStatEntryList.formatFanSummary(stats.最近大铳.fans)}</span>\n        <span>{GameRecord.formatFullStartTime(stats.最近大铳.start_time)}</span>\n      </a>\n      <dl className=\"row mt-2\">\n        {stats.最近大铳.fans.map(x => (\n          <StatItem key={x.label} label={x.label}>\n            {FanStatEntry2.formatFan(x)}\n          </StatItem>\n        ))}\n      </dl>\n    </div>\n  );\n}\nfunction PlayerStats({ metadata }: { metadata: PlayerMetadata }) {\n  const loc = useLocation();\n  useEffect(() => {\n    ReactTooltipPromise.then(x => x.rebuild());\n  }, [loc.pathname]);\n  return (\n    <SimpleRoutedSubViews>\n      <ViewRoutes>\n        <RouteDef path=\"\" exact title=\"基本\">\n          <dl className=\"row\">\n            <BasicStats metadata={metadata} />\n          </dl>\n        </RouteDef>\n        <RouteDef path=\"riichi\" title=\"立直\">\n          <dl className=\"row\">\n            <ExtendedStatsViewAsync metadata={metadata} view={RiichiStats} />\n          </dl>\n        </RouteDef>\n        <RouteDef path=\"extended\" title=\"更多\">\n          <dl className=\"row\">\n            <ExtendedStatsViewAsync metadata={metadata} view={MoreStats} />\n          </dl>\n        </RouteDef>\n        <RouteDef path=\"win-lose\" title=\"和铳分布\">\n          <ExtendedStatsViewAsync metadata={metadata} view={WinLoseDistribution} />\n        </RouteDef>\n        <RouteDef path=\"luck\" title=\"血统\">\n          <dl className=\"row\">\n            <ExtendedStatsViewAsync metadata={metadata} view={LuckStats} />\n          </dl>\n        </RouteDef>\n        <RouteDef path=\"largest-lost\" title=\"最近大铳\">\n          <ExtendedStatsViewAsync metadata={metadata} view={LargestLost} />\n        </RouteDef>\n        <RouteDef path=\"same-match\" title=\"最常同桌\">\n          <SameMatchRate currentAccountId={metadata.id} />\n        </RouteDef>\n      </ViewRoutes>\n      <NavButtons className=\"mt-3\" replace keepState />\n      <ViewSwitch mutateTitle={false} />\n    </SimpleRoutedSubViews>\n  );\n}\n\nexport default function PlayerDetails() {\n  const dataAdapter = useDataAdapter();\n  const metadata = dataAdapter.getMetadata<PlayerMetadata>();\n  useEffect(() => {\n    ReactTooltipPromise.then(x => x.rebuild());\n  });\n  useEffect(triggerRelayout, [!!metadata]);\n  if (!metadata || !metadata.nickname) {\n    return <Loading />;\n  }\n  return (\n    <div>\n      <Helmet>\n        <title>{metadata.nickname}</title>\n      </Helmet>\n      <h2 className=\"text-center\">玩家：{metadata.nickname}</h2>\n      <div className=\"row mt-4\">\n        <div className=\"col-md-8\">\n          <h3 className=\"text-center mb-4\">最近走势</h3>\n          <RecentRankChart dataAdapter={dataAdapter} playerId={metadata.id} aspect={6} />\n          <PlayerStats metadata={metadata} />\n        </div>\n        <div className=\"col-md-4\">\n          <h3 className=\"text-center mb-4\">累计战绩</h3>\n          <RankRateChart metadata={metadata} />\n        </div>\n      </div>\n      <PlayerDetailsSettings showLevel={true} />\n      <ReactTooltip effect=\"solid\" multiline={true} place=\"top\" />\n    </div>\n  );\n}\n"],"sourceRoot":""}