{"version":3,"sources":["../node_modules/clsx/dist/clsx.m.js","components/playerDetails/playerDetailsSettings.tsx","components/playerDetails/statItem.tsx","components/playerDetails/estimatedStableLevel.tsx","components/playerDetails/playerDetails.tsx"],"names":["toVal","mix","k","y","str","push","length","call","x","i","arguments","DateRangeOptions","DATE_RANGE_ITEMS","Object","keys","map","key","label","PlayerDetailsSettings","showLevel","useModel","model","updateModel","useState","type","All","startDate","endDate","dayjs","isSame","subtract","Custom","Last4Weeks","mode","setMode","DATE_MIN","customDateFrom","setCustomDateFrom","customDateTo","setCustomDateTo","useEffect","playerId","selectedMode","undefined","setSelectedMode","useCallback","className","title","inline","selectedItemKey","items","groupKey","onChange","min","date","StatItem","description","children","data-tip","EstimatedStableLevel","metadata","level","LevelWithDelta","getAdjustedLevel","parseInt","getTag","GameMode","王座","玉","notEnoughData","count","expectedGamePoint","PlayerMetadata","calculateExpectedGamePoint","estimatedNumGamesToChangeLevel","getMaxPoint","isAllowedMode","curPoint","Level","id","score","delta","getStartingPoint","changeLevelMsg","estimateStableLevel2","toFixed","Math","abs","RankRateChart","Loadable","loader","loading","RecentRankChart","ReactTooltipPromise","ReactTooltip","PlayerExtendedStatsViewAsync","maybeStats","view","stats","useAsync","triggerRelayout","View","PlayerExtendedStatsView","formatPercent","和牌率","放铳率","自摸率","默听率","流局率","流听率","副露率","立直率","和了巡数","平均打点","平均铳点","最大连庄","PlayerMoreExtendedStats","一发率","里宝率","PlayerBasicStats","formatAdjustedScore","extended_stats","avg_rank","negative_rate","PlayerStats","page","setPage","then","rebuild","onClick","clsx","PlayerDetails","dataAdapter","useDataAdapter","getMetadata","nickname","Helmet","aspect","effect","multiline","place"],"mappings":"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","file":"static/js/9.924eae3e.chunk.js","sourcesContent":["function toVal(mix) {\n  var k,\n      y,\n      str = '';\n\n  if (mix) {\n    if (typeof mix === 'object') {\n      if (!!mix.push) {\n        for (k = 0; k < mix.length; k++) {\n          if (mix[k] && (y = toVal(mix[k]))) {\n            str && (str += ' ');\n            str += y;\n          }\n        }\n      } else {\n        for (k in mix) {\n          if (mix[k] && (y = toVal(k))) {\n            str && (str += ' ');\n            str += y;\n          }\n        }\n      }\n    } else if (typeof mix !== 'boolean' && !mix.call) {\n      str && (str += ' ');\n      str += mix;\n    }\n  }\n\n  return str;\n}\n\nexport default function () {\n  var i = 0,\n      x,\n      str = '';\n\n  while (i < arguments.length) {\n    if (x = toVal(arguments[i++])) {\n      str && (str += ' ');\n      str += x;\n    }\n  }\n\n  return str;\n}","import React from \"react\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { DATE_MIN } from \"../../utils/constants\";\nimport { FormRow } from \"../form/formRow\";\nimport { useModel } from \"../gameRecords/model\";\nimport { CheckboxGroup, DatePicker } from \"../form\";\nimport dayjs from \"dayjs\";\nimport { ModeSelector } from \"../gameRecords/modeSelector\";\n\nenum DateRangeOptions {\n  All = \"全部\",\n  Last4Weeks = \"最近四周\",\n  Custom = \"自定义\"\n}\nconst DATE_RANGE_ITEMS = Object.keys(DateRangeOptions).map((key: string) => ({\n  key: DateRangeOptions[key as keyof typeof DateRangeOptions],\n  label: DateRangeOptions[key as keyof typeof DateRangeOptions]\n}));\n\nexport default function PlayerDetailsSettings({ showLevel = false }) {\n  const [model, updateModel] = useModel();\n  const [mode, setMode] = useState(() => {\n    if (model.type !== \"player\") {\n      return DateRangeOptions.All;\n    }\n    if (!model.startDate) {\n      return DateRangeOptions.All;\n    }\n    if (\n      (!model.endDate || dayjs(model.endDate).isSame(dayjs(), \"day\")) &&\n      dayjs(model.startDate).isSame(dayjs().subtract(27, \"day\"), \"day\")\n    ) {\n      return DateRangeOptions.Last4Weeks;\n    }\n    return DateRangeOptions.Custom;\n  });\n  const [customDateFrom, setCustomDateFrom] = useState(() =>\n    model.type === \"player\" && model.startDate ? model.startDate : DATE_MIN\n  );\n  const [customDateTo, setCustomDateTo] = useState(() =>\n    model.type === \"player\" && model.endDate ? model.endDate : dayjs()\n  );\n  useEffect(() => {\n    if (model.type !== \"player\") {\n      return;\n    }\n    switch (mode) {\n      case DateRangeOptions.All:\n        updateModel({\n          type: \"player\",\n          playerId: model.playerId,\n          startDate: null,\n          endDate: null,\n          selectedMode: undefined\n        });\n        break;\n      case DateRangeOptions.Last4Weeks:\n        updateModel({\n          type: \"player\",\n          playerId: model.playerId,\n          startDate: dayjs().subtract(27, \"day\"),\n          endDate: null\n        });\n        break;\n      case DateRangeOptions.Custom:\n        updateModel({\n          type: \"player\",\n          playerId: model.playerId,\n          startDate: customDateFrom,\n          endDate: customDateTo\n        });\n        break;\n    }\n  }, [model, mode, customDateFrom, customDateTo, updateModel]);\n  const setSelectedMode = useCallback(mode => updateModel({ type: \"player\", selectedMode: mode }), [updateModel]);\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <FormRow title=\"时间\" inline={true}>\n            <CheckboxGroup\n              type=\"radio\"\n              selectedItemKey={mode}\n              items={DATE_RANGE_ITEMS}\n              groupKey=\"PlayerDetailsDateRangeSelector\"\n              onChange={setMode as (x: string) => void}\n            />\n          </FormRow>\n        </div>\n        {showLevel && (\n          <div className=\"col-6\">\n            <FormRow title=\"等级\" inline={true}>\n              <ModeSelector mode={model.selectedMode} onChange={setSelectedMode} />\n            </FormRow>\n          </div>\n        )}\n      </div>\n      {mode === DateRangeOptions.Custom ? (\n        <div className=\"row mt-n3\">\n          <div className=\"col-6\">\n            <FormRow inline={true}>\n              <DatePicker min={DATE_MIN} onChange={setCustomDateFrom} date={customDateFrom} className=\"form-control\" />\n              <DatePicker min={DATE_MIN} onChange={setCustomDateTo} date={customDateTo} className=\"form-control\" />\n            </FormRow>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function StatItem({ label, description, className = \"\", children }: {\n  label: string;\n  description?: string;\n  className?: string;\n  children: React.ReactChild;\n}) {\n  return (<>\n    <dt className={`col-2 col-lg-1 text-nowrap ${className}`}>{label}</dt>\n    <dd className={`col-4 col-lg-3 text-right ${className}`} data-tip={description || \"\"}>\n      {children}\n    </dd>\n  </>);\n}\n","import React from \"react\";\nimport { LevelWithDelta, PlayerMetadata, GameMode, Level } from \"../../data/types\";\nimport { useModel } from \"../gameRecords/model\";\nimport StatItem from \"./statItem\";\n\nexport default function EstimatedStableLevel({ metadata }: {\n  metadata: PlayerMetadata;\n}) {\n  const [model] = useModel();\n  const level = LevelWithDelta.getAdjustedLevel(metadata.level);\n  const mode = model.selectedMode\n    ? (parseInt(model.selectedMode) as GameMode)\n    : LevelWithDelta.getTag(metadata.level) === \"魂\"\n      ? GameMode.王座\n      : GameMode.玉;\n  const notEnoughData = metadata.count < 100;\n  const expectedGamePoint = PlayerMetadata.calculateExpectedGamePoint(metadata, mode);\n  let estimatedNumGamesToChangeLevel = null as number | null;\n  if (level.getMaxPoint() && level.isAllowedMode(mode)) {\n    const curPoint = level.isSame(new Level(metadata.level.id))\n      ? metadata.level.score + metadata.level.delta\n      : level.getStartingPoint();\n    estimatedNumGamesToChangeLevel =\n      expectedGamePoint > 0 ? (level.getMaxPoint() - curPoint) / expectedGamePoint : curPoint / expectedGamePoint;\n  }\n  const changeLevelMsg = estimatedNumGamesToChangeLevel\n    ? `，括号内为预计${estimatedNumGamesToChangeLevel > 0 ? \"升\" : \"降\"}段场数`\n    : \"\";\n  return (<>\n    <StatItem label=\"安定段位\" description={`在${GameMode[mode]}之间一直进行对局，预测最终能达到的段位${notEnoughData ? \"（数据量不足，计算结果可能有较大偏差）\" : \"\"}`} className={notEnoughData ? \"font-italic font-lighter text-muted\" : \"\"}>\n      <span>\n        {PlayerMetadata.estimateStableLevel2(metadata, mode)}\n        {notEnoughData && \"?\"}\n      </span>\n    </StatItem>\n    <StatItem label=\"分数期望\" description={`在${GameMode[mode]}之间每局获得点数的数学期望值${changeLevelMsg}${notEnoughData ? \"（数据量不足，计算结果可能有较大偏差）\" : \"\"}`} className={notEnoughData ? \"font-italic font-lighter text-muted\" : \"\"}>\n      <span>\n        {expectedGamePoint.toFixed(1)}\n        {estimatedNumGamesToChangeLevel ? ` (${Math.abs(estimatedNumGamesToChangeLevel).toFixed(0)})` : \"\"}\n        {notEnoughData && \"?\"}\n      </span>\n    </StatItem>\n  </>);\n}\n","import React from \"react\";\nimport Loadable from \"react-loadable\";\nimport { Helmet } from \"react-helmet\";\n\nimport { useDataAdapter } from \"../gameRecords/dataAdapterProvider\";\nimport { useEffect, useState } from \"react\";\nimport { triggerRelayout, formatPercent, useAsync } from \"../../utils/index\";\nimport { LevelWithDelta, PlayerExtendedStats, PlayerMetadata } from \"../../data/types\";\nimport Loading from \"../misc/loading\";\nimport PlayerDetailsSettings from \"./playerDetailsSettings\";\nimport StatItem from \"./statItem\";\nimport EstimatedStableLevel from \"./estimatedStableLevel\";\nimport clsx from \"clsx\";\n\nconst RankRateChart = Loadable({\n  loader: () => import(\"./charts/rankRate\"),\n  loading: () => <Loading />\n});\nconst RecentRankChart = Loadable({\n  loader: () => import(\"./charts/recentRank\"),\n  loading: () => <Loading />\n});\nconst ReactTooltipPromise = import(\"react-tooltip\");\nconst ReactTooltip = Loadable({\n  loader: () => ReactTooltipPromise,\n  loading: () => null\n});\n\nfunction PlayerExtendedStatsViewAsync({\n  maybeStats,\n  view\n}: {\n  maybeStats: PlayerExtendedStats | Promise<PlayerExtendedStats> | null | undefined;\n  view: React.ComponentType<{ stats: PlayerExtendedStats }>;\n}) {\n  const stats = useAsync(maybeStats);\n  useEffect(triggerRelayout, [!!stats]);\n  if (!stats) {\n    return null;\n  }\n  const View = view;\n  return <View stats={stats} />;\n}\n\nfunction PlayerExtendedStatsView({ stats }: { stats: PlayerExtendedStats }) {\n  return (\n    <>\n      <StatItem label=\"和牌率\" description=\"和牌局数 / 总局数\">\n        {formatPercent(stats.和牌率 || 0)}\n      </StatItem>\n      <StatItem label=\"放铳率\" description=\"放铳局数 / 总局数\">\n        {formatPercent(stats.放铳率 || 0)}\n      </StatItem>\n      <StatItem label=\"自摸率\" description=\"自摸局数 / 和牌局数\">\n        {formatPercent(stats.自摸率 || 0)}\n      </StatItem>\n      <StatItem label=\"默胡率\" description=\"门清默听和牌局数 / 和牌局数\">\n        {formatPercent(stats.默听率 || 0)}\n      </StatItem>\n      <StatItem label=\"流局率\" description=\"流局局数 / 总局数\">\n        {formatPercent(stats.流局率 || 0)}\n      </StatItem>\n      <StatItem label=\"流听率\" description=\"流局听牌局数 / 流局局数\">\n        {formatPercent(stats.流听率 || 0)}\n      </StatItem>\n      <StatItem label=\"副露率\" description=\"副露局数 / 总局数\">\n        {formatPercent(stats.副露率 || 0)}\n      </StatItem>\n      <StatItem label=\"立直率\" description=\"立直局数 / 总局数\">\n        {formatPercent(stats.立直率 || 0)}\n      </StatItem>\n      <StatItem label=\"和了巡数\">{(stats.和了巡数 || 0).toFixed(3)}</StatItem>\n      <StatItem label=\"平均打点\">{stats.平均打点 || 0}</StatItem>\n      <StatItem label=\"平均铳点\">{stats.平均铳点 || 0}</StatItem>\n      <StatItem label=\"最大连庄\">{stats.最大连庄 || 0}</StatItem>\n    </>\n  );\n}\n\nfunction PlayerMoreExtendedStats({ stats }: { stats: PlayerExtendedStats }) {\n  return (\n    <>\n      <StatItem label=\"一发率\" description=\"一发局数 / 立直和了局数\">\n        {formatPercent(stats.一发率 || 0)}\n      </StatItem>\n      <StatItem label=\"里宝率\" description=\"里宝局数 / 立直和了局数\">\n        {formatPercent(stats.里宝率 || 0)}\n      </StatItem>\n    </>\n  );\n}\nfunction PlayerBasicStats({ metadata }: { metadata: PlayerMetadata }) {\n  return (\n    <>\n      <StatItem label=\"记录场数\">{metadata.count}</StatItem>\n      <StatItem label=\"当前等级\">{LevelWithDelta.getTag(metadata.level)}</StatItem>\n      <StatItem label=\"当前分数\">{LevelWithDelta.formatAdjustedScore(metadata.level)}</StatItem>\n      <PlayerExtendedStatsViewAsync maybeStats={metadata.extended_stats} view={PlayerExtendedStatsView} />\n      <StatItem label=\"平均顺位\">{metadata.avg_rank.toFixed(3)}</StatItem>\n      <EstimatedStableLevel metadata={metadata} />\n      <StatItem label=\"被飞率\">{formatPercent(metadata.negative_rate)}</StatItem>\n    </>\n  );\n}\nfunction PlayerStats({ metadata }: { metadata: PlayerMetadata }) {\n  const [page, setPage] = useState(0);\n  useEffect(() => {\n    ReactTooltipPromise.then(x => x.rebuild());\n  }, [page]);\n  return (\n    <>\n      <nav className=\"nav nav-pills mb-3 mt-3\">\n        <button onClick={() => setPage(0)} className={clsx(\"nav-link\", page === 0 && \"active\")}>\n          基本数据\n        </button>\n        <button onClick={() => setPage(1)} className={clsx(\"nav-link\", page === 1 && \"active\")}>\n          更多数据\n        </button>\n      </nav>\n      <dl className=\"row\">\n        {page === 0 && <PlayerBasicStats metadata={metadata} />}\n        {page === 1 && (\n          <PlayerExtendedStatsViewAsync maybeStats={metadata.extended_stats} view={PlayerMoreExtendedStats} />\n        )}\n      </dl>\n    </>\n  );\n}\n\nexport default function PlayerDetails() {\n  const dataAdapter = useDataAdapter();\n  const metadata = dataAdapter.getMetadata<PlayerMetadata>();\n  useEffect(() => {\n    ReactTooltipPromise.then(x => x.rebuild());\n  });\n  useEffect(triggerRelayout, [!!metadata]);\n  if (!metadata || !metadata.nickname) {\n    return <Loading />;\n  }\n  return (\n    <div>\n      <Helmet>\n        <title>{metadata.nickname}</title>\n      </Helmet>\n      <h2 className=\"text-center\">玩家：{metadata.nickname}</h2>\n      <div className=\"row mt-4\">\n        <div className=\"col-md-8\">\n          <h3 className=\"text-center mb-4\">最近走势</h3>\n          <RecentRankChart dataAdapter={dataAdapter} playerId={metadata.id} aspect={6} />\n          <PlayerStats metadata={metadata} />\n        </div>\n        <div className=\"col-md-4\">\n          <h3 className=\"text-center mb-4\">累计战绩</h3>\n          <RankRateChart metadata={metadata} />\n        </div>\n      </div>\n      <PlayerDetailsSettings showLevel={true} />\n      <ReactTooltip effect=\"solid\" multiline={true} place=\"top\" />\n    </div>\n  );\n}\n"],"sourceRoot":""}