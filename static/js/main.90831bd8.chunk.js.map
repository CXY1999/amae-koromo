{"version":3,"sources":["data/types/metadata.ts","data/types/record.ts","data/source/constants.ts","data/source/api.ts","components/layout/container.tsx","components/app/appHeader.tsx","components/app/maintenance.tsx","components/app/navbar.tsx","components/app/index.tsx","index.tsx","data/types/constants.ts","utils/constants.ts","data/types/gameMode.ts","components/form/checkboxGroup.tsx","components/form/datePicker.tsx","components/form/index.tsx","data/types/index.ts","utils/index.ts","components/misc/loading.tsx","data/types/level.ts","components/gameRecords/routeSync.tsx","components/gameRecords/filterPanel.tsx","components/gameRecords/playerSearch.tsx","components/gameRecords/routes.tsx","components/misc/alert.tsx","components/gameRecords/modeSelector.tsx","components/form/formRow.tsx","data/types/ranking.ts","data/source/misc.ts","data/source/records/loader.ts","data/source/records/provider.ts","components/gameRecords/dataAdapterProvider.tsx","components/misc/scroller.tsx","components/gameRecords/model.tsx"],"names":["RANK_DELTA","MODE_DELTA","calculateDeltaPoint","score","rank","mode","level","includePenalty","result","Math","ceil","toString","getPenaltyPoint","PlayerMetadata","Object","freeze","calculateExpectedGamePoint","metadata","rankDeltaPoints","rank_avg_score","map","LevelWithDelta","getAdjustedLevel","rankWeightedPoints","point","rank_rates","expectedGamePoint","reduce","a","b","estimateStableLevel","Level","id","lastPositiveLevel","undefined","abs","getTag","getNextLevel","isAllowedMode","getMaxPoint","prevLevel","getPreviousLevel","estimateStableLevel2","this","toFixed","GameRecord","getRankIndexByPlayer","rec","player","playerId","accountId","sortedPlayers","players","index","sort","i","length","getPlayerRankLabel","RANK_LABELS","getPlayerRankColor","RANK_COLORS","encodeAccountId","t","formatFullStartTime","dayjs","startTime","format","getRecordLink","trailer","parseInt","uuid","API_ROOT_PROD","API_ROOT","onMaintenance","setMaintenanceHandler","handler","apiGet","path","fetch","resp","ok","json","data","maintenance","Promise","Container","title","children","fluid","className","AppHeader","container","stateName","href","MaintenanceHandler","useState","msg","setMsg","closable","isActive","match","location","pathname","startsWith","Navbar","mobileVisible","setMobileVisible","to","TITLE_PREFIX","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","activeClassName","Helmet","Loadable","loader","loading","Ranking","Statistics","App","rel","CANONICAL_DOMAIN","rootElement","document","getElementById","render","PLAYER_RANKS","DATE_MIN","GameMode","keys","filter","x","CheckboxGroup","props","items","groupKey","selectedItemKeys","onChange","setSelected","key","isSelected","has","newSet","Set","add","delete","isChecked","selectedItemKey","Fragment","item","name","value","checked","event","currentTarget","htmlFor","label","DatePicker","date","min","max","handleChange","useCallback","e","triggerRelayout","requestAnimationFrame","window","dispatchEvent","UIEvent","setTimeout","scrollToTop","scrollTo","formatPercent","NOT_FINISHED","notFinished","useAsync","maybePromise","fulfilledValue","setFulfilledValue","useEffect","cancelled","then","useAsyncFactory","factory","deps","useMemo","Loading","size","role","LEVEL_MAX_POINTS","LEVEL_PENALTY","LEVEL_ALLOWED_MODES","玉","王座","levelId","_majorRank","_minorRank","realId","floor","other","includes","majorRank","minorRank","maxPoints","getStartingPoint","formatAdjustedScore","getLevelTag","obj","formatAdjustedScoreWithTag","delta","parseOptionalDate","s","defaultValue","ModelBuilders","params","startDate","endDate","selectedMode","version","listing","isValid","startOf","valueOf","searchText","search","RouteSync","view","useParams","useModel","model","updateModel","useLocation","state","pendingRouteUpdate","modelResult","newModel","Model","toPlain","newPath","generatePath","fromPlain","DEFAULT_DATE","FilterPanel","updateSearchTextFromEvent","setMode","setDate","playerSearchCache","NUM_RESULTS_SHOWN","NUM_FETCH","normalizeName","toLowerCase","trim","PlayerSearchResult","setVersion","cachedResult","prefix","normalizedPrefix","isExactMatch","slice","findRawResultFromCache","mayHaveMore","filteredPlayers","forEach","nickname","push","isLoading","debounceToken","searchPlayer","Date","getTime","clearTimeout","generatePlayerPathById","PlayerSearch","PlayerDetails","GameRecordTable","PLAYER_PATH","PATH","genPath","Routes","exact","showFullTime","showStartEnd","Alert","React","stateKey","localStorage","getItem","closed","setClosed","setItem","Cont","data-dismiss","preventDefault","aria-hidden","MODE_CHECKBOXES","String","ModeSelector","unshift","FormRow","inline","RankingTimeSpan","limit","encodeURIComponent","getDeltaRanking","timespan","getRankRateBySeat","rawResp","counts","modeId","count","modeIdStr","seatId","ListingDataLoader","_date","skip","cacheTag","PlayerDataLoader","_playerId","_startDate","_endDate","_mode","_getDatePath","_getParams","stats","extended_stats","extendedStats","DataProviderImpl","itemsPerChunk","_loader","_metadata","_countPromise","_chunks","_itemsPerChunk","_filterPredicate","_filteredIndices","_filterResultCache","predicate","updateFilteredIndices","getMetadataSync","numShownItems","numLoadedItems","indices","chunk","game","_triggerFullLoad","getCount","getCountMaybeSync","getMetadata","console","log","Error","resolve","mappedIndex","_mapItemIndex","chunkNumber","skipPreload","innerIndex","_getChunk","preload","requestedIndex","reversed","chunkIndex","_loadChunk","numChunks","warn","getRecords","ListingDataProvider","create","PlayerDataProvider","endOf","loadingPlaceholder","DUMMY_DATA_ADAPTER","noop","DataAdapter","provider","onDataUpdate","_provider","_onDataUpdate","_triggeredRequest","promise","_callHook","catch","isError","maybeCount","_installHook","getUnfilteredCountSync","isItemLoaded","hook","DataAdapterContext","createContext","useDataAdapter","useContext","Consumer","DataAdapterProvider","dataProviders","searchPredicate","memoFunc","memoDeps","needPredicate","some","indexOf","usePredicate","dataProvider","getProviderKey","createProvider","dataAdapter","setDataAdapter","refreshDataAdapter","removeExtraParams","setFilterPredicate","adapter","cancelUpdateHook","setUpdateHook","Provider","ScrollerContext","useScrollerProps","Scroller","scrollerProps","DEFAULT_MODEL","ModelContext","isSameDateValue","d1","d2","isSame","ModelProvider","useReducer","oldModel","newProps","isChanged","normalizeUpdate"],"mappings":"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","file":"static/js/main.90831bd8.chunk.js","sourcesContent":["import { LevelWithDelta, Level } from \"./level\";\nimport { GameMode } from \"./gameMode\";\n\nconst RANK_DELTA = [15, 5, -5, -15];\nconst MODE_DELTA = {\n  \"12\": [110, 55, 0, 0],\n  \"16\": [120, 60, 0, 0]\n};\n\nexport interface PlayerExtendedStats {\n  id: number;\n  和牌率: number;\n  自摸率: number;\n  默听率: number;\n  放铳率: number;\n  副露率: number;\n  立直率: number;\n  平均打点: number;\n  最大连庄: number;\n  和了巡数: number;\n  平均铳点: number;\n  流局率: number;\n  流听率: number;\n}\nexport interface Metadata {\n  count: number;\n}\nexport interface PlayerMetadataLite extends Metadata {\n  id: number;\n  nickname: string;\n  level: LevelWithDelta;\n}\nexport interface PlayerMetadata extends PlayerMetadataLite {\n  rank_rates: [number, number, number, number];\n  rank_avg_score: [number, number, number, number];\n  avg_rank: number;\n  negative_rate: number;\n  extended_stats?: PlayerExtendedStats | Promise<PlayerExtendedStats>;\n}\n\nfunction calculateDeltaPoint(score: number, rank: number, mode: GameMode, level: Level, includePenalty = true): number {\n  let result =\n    Math.ceil((score - 25000) / 1000 + RANK_DELTA[rank]) + MODE_DELTA[mode.toString() as keyof typeof MODE_DELTA][rank];\n  if (rank === 3 && includePenalty) {\n    result -= level.getPenaltyPoint();\n  }\n  /*\n  console.log(\n    `calculateDeltaPoint: score=${score}, rank=${rank}, mode=${mode}, level=${level.getTag()}, result=${result}`\n  );\n  */\n  return result;\n}\n\nexport const PlayerMetadata = Object.freeze({\n  calculateExpectedGamePoint(metadata: PlayerMetadata, mode: GameMode, level?: Level, includePenalty = true): number {\n    const rankDeltaPoints = metadata.rank_avg_score.map((score, rank) =>\n      calculateDeltaPoint(score, rank, mode, level || LevelWithDelta.getAdjustedLevel(metadata.level), includePenalty)\n    );\n    const rankWeightedPoints = rankDeltaPoints.map((point, rank) => point * metadata.rank_rates[rank]);\n    const expectedGamePoint = rankWeightedPoints.reduce((a, b) => a + b, 0);\n    /*\n    console.log(rankDeltaPoints);\n    console.log(rankWeightedPoints);\n    console.log(\n      `calculateExpectedGamePoint: mode=${mode}, level=${level ? level.getTag() : \"\"}, result=${expectedGamePoint}`\n    );\n    */\n    return expectedGamePoint;\n  },\n  estimateStableLevel(metadata: PlayerMetadata, mode: GameMode): string {\n    let level = new Level(metadata.level.id);\n    let lastPositiveLevel: Level | undefined = undefined;\n    for (;;) {\n      const expectedGamePoint = PlayerMetadata.calculateExpectedGamePoint(metadata, mode, level);\n      if (Math.abs(expectedGamePoint) < 0.001) {\n        return level.getTag();\n      }\n      if (expectedGamePoint >= 0) {\n        lastPositiveLevel = level;\n        level = level.getNextLevel();\n        if (!level.isAllowedMode(mode)) {\n          return lastPositiveLevel.getTag() + \"+\";\n        }\n        if (level === lastPositiveLevel) {\n          return level.getTag() + \"+\";\n        }\n      } else {\n        if (lastPositiveLevel) {\n          return lastPositiveLevel.getTag();\n        }\n        break;\n      }\n    }\n    if (!level.getMaxPoint()) {\n      // 魂天不会掉段\n      return level.getTag() + \"-\";\n    }\n    for (;;) {\n      const prevLevel = level.getPreviousLevel();\n      if (!prevLevel.isAllowedMode(mode) || prevLevel === level) {\n        return level.getTag() + \"-\";\n      }\n      level = prevLevel;\n      const expectedGamePoint = PlayerMetadata.calculateExpectedGamePoint(metadata, mode, level);\n      if (expectedGamePoint + 0.001 >= 0) {\n        return level.getTag();\n      }\n    }\n  },\n  estimateStableLevel2(metadata: PlayerMetadata, mode: GameMode): string {\n    if (!metadata.rank_rates[3]) {\n      return \"\";\n    }\n    const estimatedPoints = this.calculateExpectedGamePoint(metadata, mode, undefined, false);\n    const result = estimatedPoints / (metadata.rank_rates[3] * 15) - 10;\n    if (result >= 7) {\n      return `魂${(result - 6).toFixed(2)}`;\n    }\n    if (result >= 4) {\n      return `圣${(result - 3).toFixed(2)}`;\n    }\n    return `豪${result.toFixed(2)}`;\n  }\n});\n","import dayjs from \"dayjs\";\n\nimport { GameMode } from \"./gameMode\";\nimport { RANK_LABELS, RANK_COLORS } from \"./constants\";\n\nexport interface PlayerRecord {\n  accountId: number;\n  nickname: string;\n  level: number;\n  score: number;\n}\nexport interface GameRecord {\n  modeId: GameMode;\n  uuid: string;\n  startTime: number;\n  endTime: number;\n  players: PlayerRecord[];\n}\nexport const GameRecord = Object.freeze({\n  getRankIndexByPlayer(rec: GameRecord, player: number | string | PlayerRecord): number {\n    const playerId = (typeof player === \"object\" ? player.accountId : player).toString();\n    const sortedPlayers = rec.players.map((player, index) => ({ player, index }));\n    sortedPlayers.sort((a, b) => 5 - b.index + b.player.score - (5 - a.index + a.player.score));\n    for (let i = 0; i < sortedPlayers.length; i++) {\n      if (sortedPlayers[i].player.accountId.toString() === playerId) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  getPlayerRankLabel(rec: GameRecord, player: number | string | PlayerRecord): string {\n    return RANK_LABELS[GameRecord.getRankIndexByPlayer(rec, player)] || \"\";\n  },\n  getPlayerRankColor(rec: GameRecord, player: number | string | PlayerRecord): string {\n    return RANK_COLORS[GameRecord.getRankIndexByPlayer(rec, player)];\n  },\n  encodeAccountId: (t: number) => 1358437 + ((7 * t + 1117113) ^ 86216345),\n  formatFullStartTime: (rec: GameRecord) => dayjs(rec.startTime * 1000).format(\"YYYY/M/D HH:mm\"),\n  getRecordLink(rec: GameRecord, player?: PlayerRecord | number | string) {\n    const playerId = typeof player === \"object\" ? player.accountId : player;\n    const trailer = playerId\n      ? `_a${GameRecord.encodeAccountId(typeof playerId === \"number\" ? playerId : parseInt(playerId))}`\n      : \"\";\n    return `https://www.majsoul.com/1/?paipu=${rec.uuid}${trailer}`;\n  }\n});\n","export const DATA_ROOT = \"https://ak-data-2.sapk.ch/\";\nconst API_ROOT_PROD = `${DATA_ROOT}api/`;\nconst API_ROOT_TEST = `${DATA_ROOT}api-test/`;\nexport const API_ROOT = process.env.NODE_ENV === \"development\" ? API_ROOT_TEST : API_ROOT_PROD;\n","import { API_ROOT } from \"./constants\";\n\nlet onMaintenance: (msg: string) => void = () => {};\n\nexport function setMaintenanceHandler(handler: (msg: string) => void) {\n  onMaintenance = handler;\n}\n\nexport async function apiGet<T>(path: string) {\n  const resp = await fetch(API_ROOT + path);\n  if (!resp.ok) {\n    throw resp;\n  }\n  const data = await resp.json();\n  if (data.maintenance) {\n    onMaintenance(data.maintenance);\n    return new Promise(() => {}) as Promise<T>; // Freeze all other components\n  }\n  return data as T;\n}\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const Container = ({ title = undefined, children = undefined as ReactNode, fluid = false }) => (\r\n  <div className={`my-5 container${fluid ? \"-fluid\" : \"\"}`}>\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-12\">\r\n        {title && <h2 className=\"mb-4\">{title}</h2>}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { Alert } from \"../misc/alert\";\r\n\r\nexport function AppHeader() {\r\n  return (\r\n    <Alert container={Container} stateName=\"topNote\">\r\n      <h4>说明</h4>\r\n      <ul>\r\n        <li>本页面数据由第三方维护，不能绝对保证完整和正确，信息仅供参考，请勿用于不良用途。</li>\r\n        <li>记录包含雀魂国服四人半庄段位战玉之间及王座之间的牌谱。</li>\r\n        <li>对局数据收集从 2019 年 8 月 23 日开始，之前的对局已无法获取。</li>\r\n        <li>\r\n          正常情况下全部对局都会被记录，但不排除因网络问题遗漏部分对局的情况。另 2019 年 10 月 10 日前因程序 Bug\r\n          每天晚间可能遗漏掉 10% ~ 20% 的对局，此 Bug 目前已经修复。\r\n        </li>\r\n        <li>页面不是实时更新，对局一般会在结束后数分钟至数小时内出现。</li>\r\n        <li>\r\n          如有问题或建议，请戳 <a href=\"mailto:i@sapika.ch\">SAPikachu (i@sapika.ch)</a> 或{\" \"}\r\n          <a href=\"https://github.com/SAPikachu/amae-koromo/\">提交 Issue</a>。\r\n        </li>\r\n      </ul>\r\n    </Alert>\r\n  );\r\n}\r\n","import * as React from \"react\";\nimport { useState } from \"react\";\n\nimport { Alert } from \"../misc/alert\";\nimport { Container } from \"../layout/container\";\nimport { setMaintenanceHandler } from \"../../data/source/api\";\n\nexport function MaintenanceHandler({ children }: { children: React.ReactElement }): React.ReactElement {\n  const [msg, setMsg] = useState(\"\");\n  setMaintenanceHandler(setMsg);\n  if (!msg) {\n    return children;\n  }\n  return (\n    <Alert container={Container} closable={false}>\n      <h4>临时维护公告</h4>\n      <p>{msg}</p>\n    </Alert>\n  );\n}\n","import React from \"react\";\nimport { Location } from \"history\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { TITLE_PREFIX } from \"../../utils/constants\";\nimport { useState } from \"react\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isActive(match: any, location: Location): boolean {\n  if (!match) {\n    return false;\n  }\n  return !location.pathname.startsWith(\"/ranking\") && !location.pathname.startsWith(\"/statistics\");\n}\n\nexport default function Navbar() {\n  const [mobileVisible, setMobileVisible] = useState(false);\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n      <div className=\"container\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          {TITLE_PREFIX}\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n          onClick={() => setMobileVisible(!mobileVisible)}\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div\n          className={`collapse navbar-collapse justify-content-end ${mobileVisible ? \"\" : \"d-none\"} d-lg-block`}\n          id=\"navbarNavAltMarkup\"\n        >\n          <div className=\"navbar-nav\">\n            <NavLink className=\"nav-item nav-link\" activeClassName=\"active\" to=\"/\" isActive={isActive}>\n              主页\n            </NavLink>\n            <NavLink className=\"nav-item nav-link\" activeClassName=\"active\" to=\"/ranking\">\n              排行榜\n            </NavLink>\n            <NavLink className=\"nav-item nav-link\" activeClassName=\"active\" to=\"/statistics\">\n              大数据\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","import React from \"react\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Loadable from \"react-loadable\";\nimport Scroller from \"../misc/scroller\";\n\nimport { Container } from \"../layout\";\nimport { AppHeader } from \"./appHeader\";\nimport GameRecords from \"../gameRecords\";\nimport { TITLE_PREFIX, CANONICAL_DOMAIN } from \"../../utils/constants\";\nimport { MaintenanceHandler } from \"./maintenance\";\nimport Navbar from \"./navbar\";\n\nconst Helmet = Loadable({\n  loader: () => import(\"react-helmet\"),\n  loading: () => <></>\n});\nconst Ranking = Loadable({\n  loader: () => import(\"../ranking\"),\n  loading: () => <></>\n});\nconst Statistics = Loadable({\n  loader: () => import(\"../statistics\"),\n  loading: () => <></>\n});\n\nfunction App() {\n  return (\n    <Router>\n      <Helmet>\n        <title>{TITLE_PREFIX}</title>\n        <link rel=\"canonical\" href={`https://${CANONICAL_DOMAIN}/`} />\n      </Helmet>\n      <Navbar />\n      <MaintenanceHandler>\n        <Scroller>\n          <AppHeader />\n          <Container>\n            <Switch>\n              <Route path=\"/ranking\">\n                <Ranking />\n              </Route>\n              <Route path=\"/statistics\">\n                <Statistics />\n              </Route>\n              <Route path=\"/\">\n                <GameRecords />\n              </Route>\n            </Switch>\n          </Container>\n        </Scroller>\n      </MaintenanceHandler>\n    </Router>\n  );\n}\nexport default App;\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"./styles/bootstrap-custom.scss\";\nimport \"./styles/styles.scss\";\n\nimport App from \"./components/app\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n","export const PLAYER_RANKS = \"初士杰豪圣魂\";\nexport const RANK_LABELS = [\"一位\", \"二位\", \"三位\", \"四位\"];\nexport const RANK_COLORS = [\"#28a745\", \"#17a2b8\", \"#6c757d\", \"#dc3545\"];\n","import dayjs from \"dayjs\";\r\n\r\nexport const TITLE_PREFIX = \"雀魂牌谱屋\";\r\nexport const DATE_MIN = dayjs(\"2019-08-23\", \"YYYY-MM-DD\");\r\nexport const CANONICAL_DOMAIN = \"amae-koromo.sapk.ch\";","export enum GameMode {\n  王座 = 16,\n  玉 = 12\n}\nexport const NUMBER_OF_GAME_MODE = Object.keys(GameMode).filter(\n  x => typeof GameMode[x as keyof typeof GameMode] === \"number\"\n).length;\n","import React from \"react\";\r\n\r\nexport interface CheckboxItem {\r\n  key: string;\r\n  label: string;\r\n}\r\n\r\ntype CommonGroupParams = {\r\n  items: CheckboxItem[];\r\n  groupKey: string;\r\n};\r\ntype CheckboxGroupParams = CommonGroupParams & {\r\n  type: \"checkbox\";\r\n  selectedItemKeys: Set<string> | null;\r\n  onChange: (selectedItemKeys: Set<string>) => void;\r\n};\r\ntype RadioGroupParams = CommonGroupParams & {\r\n  type: \"radio\";\r\n  selectedItemKey: string;\r\n  onChange: (selectedItemKey: string) => void;\r\n};\r\n\r\nexport function CheckboxGroup(\r\n  props: CheckboxGroupParams | RadioGroupParams = {\r\n    type: \"checkbox\",\r\n    items: [],\r\n    groupKey: \"default\",\r\n    selectedItemKeys: null,\r\n    onChange: () => {}\r\n  }\r\n) {\r\n  const { type, items, groupKey } = props;\r\n  const { setSelected, isChecked } = (() => {\r\n    if (props.type === \"checkbox\") {\r\n      const { selectedItemKeys, onChange } = props;\r\n      return {\r\n        setSelected(key: string, isSelected: boolean) {\r\n          if (isSelected && (!selectedItemKeys || selectedItemKeys.has(key))) {\r\n            return;\r\n          }\r\n          if (!isSelected && selectedItemKeys && !selectedItemKeys.has(key)) {\r\n            return;\r\n          }\r\n          const newSet = new Set(selectedItemKeys || items.map(x => x.key));\r\n          if (isSelected) {\r\n            newSet.add(key);\r\n          } else {\r\n            newSet.delete(key);\r\n          }\r\n          onChange(newSet);\r\n        },\r\n        isChecked: (key: string) => !selectedItemKeys || selectedItemKeys.has(key)\r\n      };\r\n    } else {\r\n      const { selectedItemKey, onChange } = props;\r\n      return {\r\n        setSelected(key: string, isSelected: boolean) {\r\n          if (!isSelected) {\r\n            return;\r\n          }\r\n          onChange(key);\r\n        },\r\n        isChecked: (key: string) => selectedItemKey === key\r\n      };\r\n    }\r\n  })();\r\n  return (\r\n    <React.Fragment>\r\n      {items.map(item => (\r\n        <div className=\"form-check form-check-inline\" key={item.key}>\r\n          <input\r\n            className=\"form-check-input\"\r\n            type={type}\r\n            id={`CG_${groupKey}_${item.key}`}\r\n            name={`CG_${groupKey}_${item.key}`}\r\n            value={item.key}\r\n            checked={isChecked(item.key)}\r\n            onChange={event => setSelected(item.key, event.currentTarget.checked)}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor={`CG_${groupKey}_${item.key}`}>\r\n            {item.label}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport dayjs from \"dayjs\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport function DatePicker({\r\n  date = dayjs() as dayjs.ConfigType,\r\n  onChange = (() => {}) as (_: dayjs.Dayjs) => void,\r\n  className = \"\",\r\n  min = 0 as dayjs.ConfigType,\r\n  max = dayjs() as dayjs.ConfigType\r\n}) {\r\n  const handleChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => onChange(dayjs(e.currentTarget.value, \"YYYY-MM-DD\")),\r\n    [onChange]\r\n  );\r\n  return (\r\n    <input\r\n      className={className}\r\n      type=\"date\"\r\n      value={dayjs(date).format(\"YYYY-MM-DD\")}\r\n      min={min ? dayjs(min).format(\"YYYY-MM-DD\") : undefined}\r\n      max={max ? dayjs(max).format(\"YYYY-MM-DD\") : undefined}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n","export * from \"./checkboxGroup\";\r\nexport * from \"./datePicker\";\r\nexport * from \"./formRow\";\r\n","export * from \"./constants\";\nexport * from \"./gameMode\";\nexport * from \"./level\";\nexport * from \"./metadata\";\nexport * from \"./record\";\nexport * from \"./ranking\";\nexport * from \"./statistics\";\n","import { useState, useEffect, useMemo } from \"react\";\nexport function triggerRelayout() {\n  requestAnimationFrame(() => window.dispatchEvent(new UIEvent(\"resize\")));\n  setTimeout(function () {\n    window.dispatchEvent(new UIEvent(\"resize\"));\n  }, 200);\n}\nexport function scrollToTop() {\n  window.scrollTo(0, 0);\n  requestAnimationFrame(() => window.scrollTo(0, 0));\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const formatPercent = (x: any) => (x > 0 ? `${(x * 100).toFixed(2)}%` : \"\");\n\ntype NotFinished = { notFinished: string };\nconst NOT_FINISHED = { notFinished: \"yes\" };\n\nexport function useAsync<T>(maybePromise: T | Promise<T>): T | undefined {\n  const [fulfilledValue, setFulfilledValue] = useState<T | NotFinished>(NOT_FINISHED);\n  useEffect(() => {\n    let cancelled = false;\n    if (maybePromise instanceof Promise) {\n      setFulfilledValue(NOT_FINISHED);\n      maybePromise.then(result => {\n        if (cancelled) {\n          return;\n        }\n        setFulfilledValue(result);\n      });\n    } else {\n      setFulfilledValue(maybePromise);\n    }\n    return () => { cancelled = true; };\n  }, [maybePromise]);\n  if (fulfilledValue !== NOT_FINISHED) {\n    return fulfilledValue as T;\n  }\n  return undefined;\n}\nexport function useAsyncFactory<T>(factory: () => Promise<T>, deps: readonly any[]): T | undefined {\n  const promise = useMemo(factory, deps);\n  return useAsync(promise);\n}","import React from \"react\";\n\nexport default function Loading({ size = \"normal\" }: { size?: \"normal\" | \"small\" }) {\n  return (\n    <div className={`d-flex justify-content-center m-${size === \"normal\" ? 5 : 1}`}>\n      <div className={`spinner-border ${size === \"normal\" ? \"\" : \"spinner-border-sm\"}`} role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n}\n","import { GameMode } from \"./gameMode\";\nimport { PLAYER_RANKS } from \"./constants\";\n\nconst LEVEL_MAX_POINTS = [20, 80, 200, 600, 800, 1000, 1200, 1400, 2000, 2800, 3200, 3600, 4000, 6000, 9000];\nconst LEVEL_PENALTY = [0, 0, 0, 20, 40, 60, 80, 100, 120, 165, 180, 195, 210, 225, 240, 255];\n\nconst LEVEL_ALLOWED_MODES: { [key: string]: GameMode[] } = {\n  \"1\": [],\n  \"2\": [],\n  \"3\": [],\n  \"4\": [GameMode.玉],\n  \"5\": [GameMode.玉, GameMode.王座],\n  \"6\": [GameMode.王座]\n};\n\nexport class Level {\n  _majorRank: number;\n  _minorRank: number;\n  constructor(levelId: number) {\n    const realId = levelId % 10000;\n    this._majorRank = Math.floor(realId / 100);\n    this._minorRank = realId % 100;\n  }\n  isSameMajorRank(other: Level): boolean {\n    return this._majorRank === other._majorRank;\n  }\n  isSame(other: Level): boolean {\n    return this._majorRank === other._majorRank && this._minorRank === other._minorRank;\n  }\n  isAllowedMode(mode: GameMode): boolean {\n    return LEVEL_ALLOWED_MODES[this._majorRank.toString() as keyof typeof LEVEL_ALLOWED_MODES].includes(mode);\n  }\n  getTag(): string {\n    const label = PLAYER_RANKS[this._majorRank - 1];\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return label;\n    }\n    return label + this._minorRank;\n  }\n  getMaxPoint(): number {\n    return LEVEL_MAX_POINTS[(this._majorRank - 1) * 3 + this._minorRank - 1];\n  }\n  getPenaltyPoint(): number {\n    return LEVEL_PENALTY[(this._majorRank - 1) * 3 + this._minorRank - 1];\n  }\n  getStartingPoint(): number {\n    if (this._majorRank === 1) {\n      return 0;\n    }\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return 10000;\n    }\n    return this.getMaxPoint() / 2;\n  }\n  getNextLevel(): Level {\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return this;\n    }\n    let majorRank = this._majorRank;\n    let minorRank = this._minorRank + 1;\n    if (minorRank > 3) {\n      majorRank++;\n      minorRank = 1;\n    }\n    return new Level(majorRank * 100 + minorRank);\n  }\n  getPreviousLevel(): Level {\n    if (this._majorRank === 1 && this._minorRank === 1) {\n      return this;\n    }\n    let majorRank = this._majorRank;\n    let minorRank = this._minorRank - 1;\n    if (minorRank < 1) {\n      majorRank--;\n      minorRank = 3;\n    }\n    return new Level(majorRank * 100 + minorRank);\n  }\n  getAdjustedLevel(score: number): Level {\n    let maxPoints = this.getMaxPoint();\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let level: Level = this;\n    if (maxPoints && score >= maxPoints) {\n      level = this.getNextLevel();\n      maxPoints = level.getMaxPoint();\n      score = level.getStartingPoint();\n    } else if (score < 0) {\n      if (!maxPoints || level._majorRank === 1 || (level._majorRank === 2 && level._minorRank === 1)) {\n        score = 0;\n      } else {\n        level = this.getPreviousLevel();\n        maxPoints = level.getMaxPoint();\n        score = level.getStartingPoint();\n      }\n    }\n    return level;\n  }\n  formatAdjustedScoreWithTag(score: number) {\n    const level = this.getAdjustedLevel(score);\n    return `${level.getTag()} - ${this.formatAdjustedScore(score)}`;\n  }\n  formatAdjustedScore(score: number) {\n    const level = this.getAdjustedLevel(score);\n    return `${level === this ? Math.max(score, 0) : level.getStartingPoint()}${\n      level.getMaxPoint() ? \"/\" + level.getMaxPoint() : \"\"\n    }`;\n  }\n}\nexport function getLevelTag(levelId: number) {\n  return new Level(levelId).getTag();\n}\nexport type LevelWithDelta = {\n  id: number;\n  score: number;\n  delta: number;\n};\nexport const LevelWithDelta = Object.freeze({\n  format(obj: LevelWithDelta): string {\n    return new Level(obj.id).formatAdjustedScoreWithTag(obj.score + obj.delta);\n  },\n  formatAdjustedScore(obj: LevelWithDelta): string {\n    return new Level(obj.id).formatAdjustedScore(obj.score + obj.delta);\n  },\n  getTag(obj: LevelWithDelta): string {\n    return LevelWithDelta.getAdjustedLevel(obj).getTag();\n  },\n  getAdjustedLevel(obj: LevelWithDelta): Level {\n    return new Level(obj.id).getAdjustedLevel(obj.score + obj.delta);\n  }\n});\n","import React from \"react\";\nimport dayjs from \"dayjs\";\n\nimport { useParams, useLocation, Redirect } from \"react-router\";\nimport { useModel, Model, ModelPlain } from \"./model\";\nimport { generatePath } from \"./routes\";\nimport { useEffect } from \"react\";\nimport { scrollToTop, triggerRelayout } from \"../../utils/index\";\n\ntype ListingRouteParams = {\n  date?: string;\n  mode?: string;\n  search?: string;\n};\n\ntype PlayerRouteParams = {\n  id: string;\n  startDate?: string;\n  endDate?: string;\n  mode?: string;\n};\n\ntype HistoryState = {\n  model: ModelPlain;\n  pathname: string;\n};\n\nfunction parseOptionalDate<T>(s: string | null | undefined, defaultValue: T): dayjs.Dayjs | T {\n  return s ? dayjs(s, \"YYYY-MM-DD\") : defaultValue;\n}\n\nconst ModelBuilders = {\n  player(params: PlayerRouteParams): Model | string {\n    return {\n      type: \"player\",\n      playerId: params.id,\n      startDate: parseOptionalDate(params.startDate, null),\n      endDate: parseOptionalDate(params.endDate, null),\n      selectedMode: params.mode || \"\",\n      version: 0\n    };\n  },\n  listing(params: ListingRouteParams): Model | string {\n    const date = parseOptionalDate(params.date, null);\n    if (date && !date.isValid()) {\n      return \"/\";\n    }\n    return {\n      type: undefined,\n      date: date ? date.startOf(\"day\").valueOf() : null,\n      selectedMode: params.mode || \"\",\n      searchText: params.search || \"\",\n      version: 0\n    };\n  }\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function RouteSync({ view }: { view: keyof typeof ModelBuilders }): React.FunctionComponentElement<any> {\n  const params = useParams();\n  const [model, updateModel] = useModel();\n  const location = useLocation<HistoryState>();\n  useEffect(triggerRelayout, [model.type]);\n  const state = location.state;\n  // console.log(params, model, location, state);\n  if (state && state.model.version === model.version) {\n    delete (model as Model).pendingRouteUpdate;\n    if (location.pathname !== state.pathname) {\n      return <Redirect to={{ pathname: state.pathname, state }} />;\n    }\n    return <></>;\n  }\n  if (!state) {\n    // Navigation\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const modelResult = ModelBuilders[view](params as any);\n    if (typeof modelResult === \"string\") {\n      return <Redirect to={modelResult} />;\n    }\n    const newModel: Model = {\n      ...modelResult,\n      version: model.version\n    };\n    updateModel(newModel);\n    scrollToTop();\n    return (\n      <Redirect\n        to={{ pathname: location.pathname, state: { pathname: location.pathname, model: Model.toPlain(newModel) } }}\n      />\n    );\n  }\n  if (model.pendingRouteUpdate) {\n    // Model updated\n    const newPath = generatePath(model);\n    delete (model as Model).pendingRouteUpdate; // Do not trigger update\n    return <Redirect to={{ pathname: newPath, state: { pathname: newPath, model: Model.toPlain(model) } }} />;\n  } else {\n    const restoredModel = Model.fromPlain(state.model);\n    updateModel(restoredModel);\n    return <></>;\n  }\n}\n","import { useCallback } from \"react\";\r\nimport React from \"react\";\r\n\r\nimport { FormRow, DatePicker } from \"../form\";\r\nimport { useModel } from \"./model\";\r\nimport dayjs from \"dayjs\";\r\nimport { DATE_MIN } from \"../../utils/constants\";\r\nimport { ModeSelector } from \"./modeSelector\";\r\n\r\nconst DEFAULT_DATE = dayjs().startOf(\"day\");\r\n\r\nexport function FilterPanel({ className = \"\" }) {\r\n  const [model, updateModel] = useModel();\r\n  const updateSearchTextFromEvent = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => updateModel({ searchText: e.currentTarget.value }),\r\n    [updateModel]\r\n  );\r\n  const setMode = useCallback((mode: string) => updateModel({ selectedMode: mode }), [updateModel]);\r\n  const setDate = useCallback((date: dayjs.ConfigType) => updateModel({ date }), [updateModel]);\r\n  if (model.type !== undefined) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={className}>\r\n      <FormRow title=\"日期\">\r\n        <DatePicker min={DATE_MIN} date={model.date || DEFAULT_DATE} onChange={setDate} className=\"form-control\" />\r\n      </FormRow>\r\n      <FormRow title=\"查找玩家\">\r\n        <input type=\"text\" className=\"form-control\" value={model.searchText} onChange={updateSearchTextFromEvent} />\r\n      </FormRow>\r\n      <FormRow>\r\n        <ModeSelector mode={model.selectedMode} onChange={setMode} />\r\n      </FormRow>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { useEffect, useState, useMemo } from \"react\";\n\nimport { useModel } from \"./model\";\nimport Loading from \"../misc/loading\";\nimport { PlayerMetadataLite, getLevelTag } from \"../../data/types\";\nimport { searchPlayer } from \"../../data/source/misc\";\nimport { Link } from \"react-router-dom\";\nimport { generatePlayerPathById } from \"./routes\";\n\nconst playerSearchCache = {} as { [prefix: string]: PlayerMetadataLite[] | Promise<PlayerMetadataLite[]> };\nconst NUM_RESULTS_SHOWN = 6;\nconst NUM_FETCH = 20;\n\nconst normalizeName = (s: string) => s.toLowerCase().trim();\n\nfunction findRawResultFromCache(prefix: string): { result: PlayerMetadataLite[]; isExactMatch: boolean } | null {\n  const normalizedPrefix = normalizeName(prefix);\n  prefix = normalizedPrefix;\n  while (prefix) {\n    const players = playerSearchCache[prefix];\n    if (!players || players instanceof Promise) {\n      prefix = prefix.slice(0, prefix.length - 1);\n      continue;\n    }\n    return {\n      isExactMatch: prefix === normalizedPrefix,\n      result: players\n    };\n  }\n  return null;\n}\n\nfunction PlayerSearchResult({ searchText }: { searchText: string }) {\n  const [version, setVersion] = useState(0);\n  const [players, isLoading, mayHaveMore] = useMemo(() => {\n    const cachedResult = findRawResultFromCache(searchText);\n    if (!cachedResult) {\n      return [[], true];\n    }\n    if (cachedResult.isExactMatch) {\n      return [cachedResult.result, false];\n    }\n    const normalizedPrefix = normalizeName(searchText);\n    let mayHaveMore = cachedResult.result.length >= NUM_FETCH;\n    const filteredPlayers = [] as PlayerMetadataLite[];\n    cachedResult.result.forEach(player => {\n      if (normalizeName(player.nickname).startsWith(normalizedPrefix)) {\n        filteredPlayers.push(player);\n      } else if (filteredPlayers.length) {\n        // Result covers all players who have the specified prefix\n        mayHaveMore = false;\n      }\n    });\n    return [filteredPlayers, mayHaveMore && filteredPlayers.length < NUM_RESULTS_SHOWN, mayHaveMore];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchText, version]);\n  useEffect(() => {\n    const prefix = normalizeName(searchText);\n    if (playerSearchCache[prefix]) {\n      return;\n    }\n    if (!isLoading) {\n      return;\n    }\n    let cancelled = false;\n    let debounceToken: NodeJS.Timeout | undefined = setTimeout(() => {\n      debounceToken = undefined;\n      if (cancelled) {\n        return;\n      }\n      if (playerSearchCache[prefix]) {\n        return;\n      }\n      playerSearchCache[prefix] = searchPlayer(prefix).then(function(players) {\n        playerSearchCache[prefix] = players;\n        if (!cancelled) {\n          setVersion(new Date().getTime());\n        }\n        return players;\n      });\n    }, 500);\n    return () => {\n      cancelled = true;\n      if (debounceToken) {\n        clearTimeout(debounceToken);\n      }\n    };\n  }, [searchText, isLoading]);\n  return (\n    <>\n      <h6 className=\"text-center mb-2\">玩家前缀搜索</h6>\n      <ul className=\"list-unstyled row mb-2\">\n        {players.slice(0, NUM_RESULTS_SHOWN).map(x => (\n          <li key={x.id} className=\"col-6\">\n            <Link to={generatePlayerPathById(x.id)}>\n              <span>\n                [{getLevelTag(x.level.id)}] {x.nickname}\n              </span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      {(isLoading && <Loading size=\"small\" />) ||\n        ((players.length > NUM_RESULTS_SHOWN || mayHaveMore) && (\n          <small className=\"d-block text-center text-muted\">（输入更长名字显示其它结果）</small>\n        ))}\n    </>\n  );\n}\n\nexport function PlayerSearch({ className = \"\" }) {\n  const [model] = useModel();\n  if (\"playerId\" in model || !model.searchText) {\n    return <></>;\n  }\n  return (\n    <div className={className}>\n      <PlayerSearchResult searchText={model.searchText} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Switch, Route, Redirect, generatePath as genPath } from \"react-router-dom\";\n\nimport { Model, ModelProvider } from \"./model\";\nimport dayjs from \"dayjs\";\nimport { RouteSync } from \"./routeSync\";\nimport { DataAdapterProvider } from \"./dataAdapterProvider\";\nimport { FilterPanel } from \"./filterPanel\";\nimport Loadable from \"react-loadable\";\nimport Loading from \"../misc/loading\";\nimport { PlayerSearch } from \"./playerSearch\";\nconst PlayerDetails = Loadable({\n  loader: () => import(\"./playerDetails\"),\n  loading: () => <Loading />\n});\nconst GameRecordTable = Loadable({\n  loader: () => import(\"./table\"),\n  loading: () => <Loading />\n});\n\nconst PLAYER_PATH = \"/player/:id/:mode([0-9]+)?/:startDate(\\\\d{4}-\\\\d{2}-\\\\d{2})?/:endDate(\\\\d{4}-\\\\d{2}-\\\\d{2})?\";\nconst PATH = \"/:date(\\\\d{4}-\\\\d{2}-\\\\d{2})/:mode([0-9]+)?/:search?\";\n\nexport function generatePath(model: Model): string {\n  if (model.type === \"player\") {\n    return genPath(PLAYER_PATH, {\n      id: model.playerId,\n      startDate: model.startDate ? dayjs(model.startDate).format(\"YYYY-MM-DD\") : undefined,\n      endDate: model.endDate ? dayjs(model.endDate).format(\"YYYY-MM-DD\") : undefined,\n      mode: model.selectedMode || undefined\n    });\n  }\n  if (!model.selectedMode && !model.searchText && !model.date) {\n    return \"/\";\n  }\n  return genPath(PATH, {\n    date: dayjs(model.date || new Date()).format(\"YYYY-MM-DD\"),\n    mode: model.selectedMode || undefined,\n    search: model.searchText || undefined\n  });\n}\nexport function generatePlayerPathById(playerId: number | string): string {\n  return generatePath({\n    type: \"player\",\n    playerId: playerId.toString(),\n    startDate: null,\n    endDate: null,\n    selectedMode: \"\",\n    version: 0\n  });\n}\n\nfunction Routes() {\n  return (\n    <ModelProvider>\n      <DataAdapterProvider>\n        <Switch>\n          <Route exact path={PLAYER_PATH}>\n            <RouteSync view=\"player\" />\n            <PlayerDetails />\n            <GameRecordTable showFullTime showStartEnd={false} />\n          </Route>\n          <Route exact path={[\"/\", PATH]}>\n            <RouteSync view=\"listing\" />\n            <div className=\"row\">\n              <FilterPanel className=\"col\" />\n              <PlayerSearch className=\"col-12 col-sm-6 col-md-4\" />\n            </div>\n            <GameRecordTable />\n          </Route>\n          <Route>\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </DataAdapterProvider>\n    </ModelProvider>\n  );\n}\nexport default Routes;\n","import { useState, useEffect, ReactNode } from \"react\";\r\nimport React from \"react\";\r\nimport { ReactComponentLike } from \"prop-types\";\r\nimport { triggerRelayout } from \"../../utils/index\";\r\n\r\nexport function Alert({\r\n  className = \"\",\r\n  type = \"info\",\r\n  container = React.Fragment as ReactComponentLike,\r\n  stateName = \"\",\r\n  closable = true,\r\n  children = undefined as ReactNode\r\n}) {\r\n  const stateKey = `alertState_${stateName}`;\r\n  const [closed, setClosed] = useState(() => stateName && !!localStorage.getItem(stateKey));\r\n  useEffect(() => {\r\n    if (stateName && closed) {\r\n      localStorage.setItem(stateKey, \"true\");\r\n    }\r\n  }, [closed, stateName, stateKey]);\r\n  if (closed && closable) {\r\n    return null;\r\n  }\r\n  const Cont = container;\r\n  return (\r\n    <Cont>\r\n      <div className={`alert alert-${type} alert-dismissible fade show ${className}`} role=\"alert\">\r\n        {children}\r\n        {closable && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            onClick={event => {\r\n              event.preventDefault();\r\n              setClosed(true);\r\n              triggerRelayout();\r\n            }}\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </Cont>\r\n  );\r\n}\r\n","import React from \"react\";\n\nimport { CheckboxGroup } from \"../form\";\nimport { GameMode } from \"../../data/types\";\n\nconst MODE_CHECKBOXES = Object.keys(GameMode)\n  .filter(x => typeof GameMode[x as keyof typeof GameMode] !== \"string\")\n  .map(x => ({\n    key: String(GameMode[x as keyof typeof GameMode]),\n    label: x\n  }));\nMODE_CHECKBOXES.unshift({\n  key: \"\",\n  label: \"全部\"\n});\n\nexport function ModeSelector({ mode, onChange }: { mode: string; onChange: (x: string) => void }) {\n  return (\n    <CheckboxGroup\n      type=\"radio\"\n      groupKey=\"ModeSelector\"\n      items={MODE_CHECKBOXES}\n      selectedItemKey={mode || \"\"}\n      onChange={onChange}\n    />\n  );\n}\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const FormRow = ({ title = \"\", inline = false, children = undefined as ReactNode }) => (\r\n  <div className=\"form-group row\">\r\n    <label className={`col-${inline ? \"lg\" : \"md\"}-2 col-form-label`}>{title}</label>\r\n    <div className={`col-${inline ? \"lg\" : \"md\"}-10 ${inline ? \"form-inline\" : \"\"}`}>{children}</div>\r\n  </div>\r\n);\r\n","import { LevelWithDelta } from \"./level\";\n\nexport enum RankingTimeSpan {\n  OneWeek = \"1w\",\n  FourWeeks = \"4w\"\n}\nexport type DeltaRankingItem = {\n  id: number;\n  nickname: string;\n  level: LevelWithDelta;\n  delta: number;\n}\nexport type DeltaRankingResponse = {\n  [modeId: string]: {\n    top: DeltaRankingItem[];\n    bottom: DeltaRankingItem[];\n  }\n}","/* eslint-disable @typescript-eslint/camelcase */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable no-use-before-define */\nimport dayjs from \"dayjs\";\n\nimport { apiGet } from \"./api\";\nimport { PlayerMetadataLite, PlayerExtendedStats } from \"../types\";\nimport { RankingTimeSpan, DeltaRankingResponse } from \"../types\";\nimport { RankRateBySeat } from \"../types\";\n\nexport async function searchPlayer(prefix: string, limit = 20): Promise<PlayerMetadataLite[]> {\n  prefix = prefix.trim();\n  if (!prefix) {\n    return [];\n  }\n  return apiGet<PlayerMetadataLite[]>(`search_player/${encodeURIComponent(prefix)}?limit=${limit}`);\n}\n\nexport async function getExtendedStats(\n  playerId: number,\n  startDate?: dayjs.ConfigType,\n  endDate?: dayjs.ConfigType,\n  mode = \"\"\n): Promise<PlayerExtendedStats> {\n  let datePath = \"\";\n  if (startDate) {\n    datePath += `/${dayjs(startDate).valueOf()}`;\n    if (endDate) {\n      datePath += `/${dayjs(endDate).valueOf()}`;\n    }\n  }\n  return await apiGet<PlayerExtendedStats>(`player_extended_stats/${playerId}${datePath}?mode=${mode}`);\n}\n\nexport async function getDeltaRanking(timespan: RankingTimeSpan): Promise<DeltaRankingResponse> {\n  return await apiGet<DeltaRankingResponse>(`player_delta_ranking/${timespan}`);\n}\n\nexport async function getRankRateBySeat(): Promise<RankRateBySeat> {\n  type RawResponse = [[number, number, number], number][];\n  const rawResp = await apiGet<RawResponse>(\"rank_rate_by_seat\");\n  const counts: {\n    [modeId: string]: { [rank: number]: number };\n  } = {};\n  for (const [[modeId, , rank], count] of rawResp) {\n    const modeIdStr = modeId.toString();\n    counts[modeIdStr] = counts[modeIdStr] || [];\n    counts[modeIdStr][rank] = counts[modeIdStr][rank] || 0;\n    counts[modeIdStr][rank] += count;\n  }\n  const result: RankRateBySeat = {};\n  for (const [[modeId, seatId, rank], count] of rawResp) {\n    const modeIdStr = modeId.toString();\n    result[modeIdStr] = result[modeIdStr] || [];\n    result[modeIdStr][rank] = result[modeIdStr][rank] || [0, 0, 0, 0];\n    result[modeIdStr][rank][seatId - 1] = count / counts[modeIdStr][rank];\n  }\n  return result;\n}\n","/* eslint-disable @typescript-eslint/camelcase */\nimport dayjs from \"dayjs\";\n\nimport { GameRecord } from \"../../types/record\";\nimport { Metadata, PlayerMetadata, PlayerExtendedStats } from \"../../types/metadata\";\nimport { apiGet } from \"../api\";\n\nexport interface DataLoader<T extends Metadata> {\n  getMetadata(): Promise<T>;\n  getRecords(skip: number, limit: number, cacheTag?: string): Promise<GameRecord[]>;\n}\n\nexport class ListingDataLoader implements DataLoader<Metadata> {\n  _date: dayjs.Dayjs;\n  constructor(date: dayjs.ConfigType) {\n    this._date = dayjs(date).startOf(\"day\");\n  }\n  async getMetadata(): Promise<Metadata> {\n    return await apiGet<Metadata>(`count/${this._date.valueOf()}`);\n  }\n  async getRecords(skip: number, limit: number, cacheTag = \"\"): Promise<GameRecord[]> {\n    return await apiGet<GameRecord[]>(`games/${this._date.valueOf()}?skip=${skip}&limit=${limit}&tag=${cacheTag}`);\n  }\n}\n\nexport class PlayerDataLoader implements DataLoader<PlayerMetadata> {\n  _playerId: string;\n  _startDate?: dayjs.Dayjs;\n  _endDate?: dayjs.Dayjs;\n  _mode: string;\n  constructor(playerId: string, startDate?: dayjs.Dayjs, endDate?: dayjs.Dayjs, mode = \"\") {\n    this._playerId = playerId;\n    this._startDate = startDate;\n    this._endDate = endDate;\n    this._mode = mode;\n  }\n  _getDatePath(): string {\n    let result = \"\";\n    if (this._startDate) {\n      result += `/${this._startDate.valueOf()}`;\n      if (this._endDate) {\n        result += `/${this._endDate.valueOf()}`;\n      }\n    }\n    return result;\n  }\n  _getParams(): string {\n    return `${this._playerId}${this._getDatePath()}?mode=${this._mode}`;\n  }\n  async getMetadata(): Promise<PlayerMetadata> {\n    return await apiGet<PlayerMetadata>(`player_stats/${this._getParams()}`).then(stats => {\n      stats.extended_stats = apiGet<PlayerExtendedStats>(`player_extended_stats/${this._getParams()}`).then(\n        extendedStats => (stats.extended_stats = extendedStats)\n      );\n      return stats;\n    });\n  }\n  async getRecords(skip: number, limit: number, cacheTag = \"\"): Promise<GameRecord[]> {\n    return await apiGet<GameRecord[]>(\n      `player_records/${this._playerId}${this._getDatePath()}?skip=${skip}&limit=${limit}&mode=${\n        this._mode\n      }&tag=${cacheTag}`\n    );\n  }\n}\n","import dayjs from \"dayjs\";\n\nimport { GameRecord } from \"../../types/record\";\nimport { Metadata } from \"../../types/metadata\";\nimport { ListingDataLoader, PlayerDataLoader, DataLoader } from \"./loader\";\n\nexport type FilterPredicate = ((record: GameRecord) => boolean) | null;\nclass DataProviderImpl<\n  TLoader extends DataLoader<TMetadata>,\n  TMetadata extends Metadata = TLoader extends DataLoader<infer T> ? T : Metadata\n> {\n  _loader: TLoader;\n  _metadata: TMetadata | Promise<TMetadata> | null;\n  _countPromise: Promise<number> | null;\n  _chunks: (GameRecord[] | Promise<GameRecord[]>)[];\n  _itemsPerChunk: number;\n  _filterPredicate: FilterPredicate;\n  _filteredIndices: number[] | null;\n  _filterResultCache: { [uuid: string]: boolean };\n\n  constructor(loader: TLoader, itemsPerChunk = 100) {\n    this._loader = loader;\n    this._metadata = null;\n    this._countPromise = null;\n    this._chunks = [];\n    this._itemsPerChunk = itemsPerChunk;\n    this._filterPredicate = null;\n    this._filteredIndices = null;\n    this._filterResultCache = {};\n  }\n  setFilterPredicate(predicate: FilterPredicate) {\n    if (this._filterPredicate === predicate) {\n      return;\n    }\n    this._filterPredicate = predicate;\n    this._filterResultCache = {};\n    this.updateFilteredIndices();\n  }\n  updateFilteredIndices() {\n    this._filteredIndices = null;\n    if (!this._filterPredicate) {\n      return;\n    }\n    const metadata = this.getMetadataSync();\n    if (!metadata) {\n      return;\n    }\n    const count = metadata.count;\n    let numShownItems = 0;\n    let numLoadedItems = 0;\n    const indices = [];\n    for (let i = 0; i < count; i++) {\n      const chunk = this._chunks[Math.floor(i / this._itemsPerChunk)];\n      if (!chunk || chunk instanceof Promise) {\n        indices.push(i);\n        continue;\n      }\n      numLoadedItems++;\n      const game = chunk[i % this._itemsPerChunk];\n      let result = this._filterResultCache[game.uuid];\n      if (result === undefined) {\n        this._filterResultCache[game.uuid] = result = this._filterPredicate(game);\n      }\n      if (result) {\n        indices.push(i);\n        numShownItems++;\n      }\n    }\n    this._filteredIndices = indices;\n    if (numShownItems < 10 && numLoadedItems >= this._itemsPerChunk) {\n      this._triggerFullLoad();\n    }\n  }\n  getMetadataSync(): TMetadata | null {\n    return this._metadata && !(this._metadata instanceof Promise) ? this._metadata : null;\n  }\n  getCountMaybeSync(): number | Promise<number> {\n    const metadata = this.getMetadataSync();\n    if (metadata) {\n      return this._filteredIndices ? this._filteredIndices.length : metadata.count;\n    }\n    return this.getCount();\n  }\n  async getCount(): Promise<number> {\n    const metadata = this.getMetadataSync();\n    if (metadata) {\n      return this.getCountMaybeSync();\n    }\n    if (!this._metadata) {\n      this._metadata = this._loader.getMetadata().then(metadata => {\n        if (!metadata) {\n          console.log(\"No metadata returned\");\n          throw new Error(\"No metadata returned\");\n        }\n        this._metadata = metadata;\n        this.updateFilteredIndices();\n        this._countPromise = null;\n        return metadata;\n      });\n    }\n    if (this._countPromise) {\n      return this._countPromise;\n    }\n    this._countPromise = Promise.resolve(this._metadata)\n      .then(() => new Promise(resolve => setTimeout(resolve, 100)))\n      .then(() => this.getCountMaybeSync());\n    return this._countPromise;\n  }\n  getUnfilteredCountSync(): number | null {\n    const metadata = this.getMetadataSync();\n    if (!metadata) {\n      return null;\n    }\n    return metadata.count;\n  }\n  isItemLoaded(index: number): boolean {\n    const mappedIndex = this._mapItemIndex(index);\n    if (mappedIndex === null) {\n      return false;\n    }\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\n    return !!this._chunks[chunkNumber] && !(this._chunks[chunkNumber] instanceof Promise);\n  }\n  getItem(index: number, skipPreload = false): GameRecord | Promise<GameRecord | null> {\n    const mappedIndex = this._mapItemIndex(index);\n    if (mappedIndex === null) {\n      return this.getCount().then(count => {\n        if (index > count - 1 || this._mapItemIndex(index) === null) {\n          return null;\n        }\n        return this.getItem(index);\n      });\n    }\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\n    const innerIndex = mappedIndex % this._itemsPerChunk;\n    const chunk = this._chunks[chunkNumber];\n    if (!chunk || chunk instanceof Promise) {\n      return this._getChunk(chunkNumber).then(chunk => chunk[innerIndex]);\n    }\n    if (!skipPreload && !this._filteredIndices) {\n      this.preload(index + this._itemsPerChunk);\n    }\n    return chunk[innerIndex];\n  }\n  preload(index: number) {\n    const count = this.getCountMaybeSync();\n    if (count instanceof Promise) {\n      return;\n    }\n    if (index >= count) {\n      return;\n    }\n    this.getItem(index, true);\n  }\n  _mapItemIndex(requestedIndex: number): number | null {\n    const count = this.getCountMaybeSync();\n    if (count instanceof Promise) {\n      return null;\n    }\n    if (requestedIndex < 0) {\n      return null;\n    }\n    // Descending order\n    const reversed = count - requestedIndex - 1;\n    if (reversed < 0) {\n      return null;\n    }\n    return this._filteredIndices ? this._filteredIndices[reversed] : reversed;\n  }\n  async _getChunk(chunkIndex: number): Promise<GameRecord[]> {\n    if (!this._chunks[chunkIndex]) {\n      this._chunks[chunkIndex] = this._loadChunk(chunkIndex);\n    }\n    return this._chunks[chunkIndex];\n  }\n  _triggerFullLoad() {\n    const count = this.getCountMaybeSync();\n    if (typeof count !== \"number\") {\n      return;\n    }\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\n    for (let i = 0; i < numChunks; i++) {\n      if (this._chunks[i]) {\n        continue;\n      }\n      this._getChunk(i);\n    }\n  }\n  async _loadChunk(chunkIndex: number): Promise<GameRecord[]> {\n    const count = await this.getCount();\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\n    if (!numChunks) {\n      return [];\n    }\n    if (chunkIndex >= numChunks) {\n      console.warn(`Loading out-of-index chunk: ${chunkIndex}, number of items: ${count}`);\n      return [];\n    }\n    const chunk = await this._loader.getRecords(\n      this._itemsPerChunk * chunkIndex,\n      this._itemsPerChunk,\n      chunkIndex === numChunks - 1 ? count.toString() : \"\"\n    );\n    if (chunk.length < this._itemsPerChunk && chunkIndex < numChunks - 1) {\n      console.warn(\"Unexpected number of items in chunk:\", chunk.length);\n    }\n    this._chunks[chunkIndex] = chunk;\n    this.updateFilteredIndices();\n    return chunk;\n  }\n}\n\nexport type ListingDataProvider = DataProviderImpl<ListingDataLoader>;\nexport const ListingDataProvider = Object.freeze({\n  create(date: dayjs.ConfigType): ListingDataProvider {\n    return new DataProviderImpl<ListingDataLoader>(new ListingDataLoader(date));\n  }\n});\nexport type PlayerDataProvider = DataProviderImpl<PlayerDataLoader>;\nexport const PlayerDataProvider = Object.freeze({\n  create(\n    playerId: string,\n    startDate: dayjs.ConfigType | null,\n    endDate: dayjs.ConfigType | null,\n    mode: string\n  ): PlayerDataProvider {\n    return new DataProviderImpl<PlayerDataLoader>(\n      new PlayerDataLoader(\n        playerId,\n        startDate ? dayjs(startDate).startOf(\"day\") : undefined,\n        endDate ? dayjs(endDate).endOf(\"day\") : undefined,\n        mode\n      )\n    );\n  }\n});\nexport type DataProvider = ListingDataProvider | PlayerDataProvider;\n","import { useState, useEffect, useMemo, useCallback, useContext } from \"react\";\r\nimport React, { ReactChild } from \"react\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport {\r\n  DataProvider,\r\n  FilterPredicate,\r\n  ListingDataProvider,\r\n  PlayerDataProvider\r\n} from \"../../data/source/records/provider\";\r\nimport { useModel, Model } from \"./model\";\r\nimport { Metadata, GameRecord } from \"../../data/types\";\r\nimport { generatePath } from \"./routes\";\r\n\r\ninterface ItemLoadingPlaceholder {\r\n  loading: boolean;\r\n}\r\n\r\nconst loadingPlaceholder = { loading: true };\r\n\r\n// eslint-disable-next-line @typescript-eslint/interface-name-prefix\r\nexport interface IDataAdapter {\r\n  getCount(): number;\r\n  getUnfilteredCount(): number;\r\n  getMetadata<T extends Metadata>(): T | null;\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder;\r\n  isItemLoaded(index: number): boolean;\r\n}\r\n\r\nclass DummyDataAdapter implements IDataAdapter {\r\n  getCount(): number {\r\n    return 0;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return 0;\r\n  }\r\n  getMetadata<T extends Metadata>(): T | null {\r\n    return null;\r\n  }\r\n  getItem(): GameRecord | ItemLoadingPlaceholder {\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const DUMMY_DATA_ADAPTER = new DummyDataAdapter() as IDataAdapter;\r\n\r\nconst noop = () => {};\r\n\r\nclass DataAdapter implements IDataAdapter {\r\n  _provider: DataProvider;\r\n  _onDataUpdate: (isError: boolean) => void;\r\n  _triggeredRequest: boolean;\r\n\r\n  constructor(provider: DataProvider, onDataUpdate = noop) {\r\n    this._provider = provider;\r\n    this._onDataUpdate = onDataUpdate;\r\n    this._triggeredRequest = false;\r\n  }\r\n  _installHook<T>(promise: Promise<T>) {\r\n    if (this._triggeredRequest) {\r\n      return;\r\n    }\r\n    this._triggeredRequest = true;\r\n    promise.then(() => this._callHook(false)).catch(() => this._callHook(true));\r\n  }\r\n  _callHook(isError: boolean) {\r\n    this._onDataUpdate(isError);\r\n  }\r\n  getCount(): number {\r\n    const maybeCount = this._provider.getCountMaybeSync();\r\n    if (maybeCount instanceof Promise) {\r\n      this._installHook(maybeCount);\r\n      return 0;\r\n    }\r\n    return maybeCount;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return this._provider.getUnfilteredCountSync() || 0;\r\n  }\r\n  getMetadata<T extends Metadata>(): T | null {\r\n    return this._provider.getMetadataSync() as T | null;\r\n  }\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder {\r\n    if (index >= this.getCount()) {\r\n      return loadingPlaceholder;\r\n    }\r\n    if (this._provider.isItemLoaded(index)) {\r\n      return this._provider.getItem(index) as GameRecord;\r\n    }\r\n    if (!this._triggeredRequest) {\r\n      this._installHook(this._provider.getItem(index) as Promise<GameRecord>);\r\n    }\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    if (index < 0) {\r\n      return false;\r\n    }\r\n    return this._provider.isItemLoaded(index);\r\n  }\r\n  setUpdateHook(hook: () => void) {\r\n    this._onDataUpdate = hook;\r\n  }\r\n  cancelUpdateHook() {\r\n    this._onDataUpdate = noop;\r\n  }\r\n}\r\n\r\nconst DataAdapterContext = React.createContext(DUMMY_DATA_ADAPTER);\r\n\r\nexport const useDataAdapter = () => useContext(DataAdapterContext);\r\nexport const DataAdapterConsumer = DataAdapterContext.Consumer;\r\n\r\nfunction getProviderKey(model: Model): string {\r\n  if (model.type === undefined) {\r\n    return dayjs(model.date || dayjs())\r\n      .startOf(\"day\")\r\n      .valueOf()\r\n      .toString();\r\n  } else if (model.type === \"player\") {\r\n    return generatePath(model);\r\n  }\r\n  throw new Error(\"Unknown model type\");\r\n}\r\n\r\nfunction createProvider(model: Model): DataProvider {\r\n  if (model.type === undefined) {\r\n    return ListingDataProvider.create(model.date || dayjs().startOf(\"day\"));\r\n  }\r\n  if (model.type === \"player\") {\r\n    return PlayerDataProvider.create(model.playerId, model.startDate, model.endDate, model.selectedMode);\r\n  }\r\n  throw new Error(\"Not implemented\");\r\n}\r\n\r\nfunction usePredicate(model: Model): FilterPredicate {\r\n  let memoFunc: () => FilterPredicate = () => null;\r\n  let memoDeps = [null, \"\"];\r\n  if (model.type === undefined) {\r\n    const searchText = (model.searchText || \"\").trim() || \"\";\r\n    const needPredicate = searchText || model.selectedMode;\r\n    memoFunc = () =>\r\n      needPredicate\r\n        ? game => {\r\n            if (model.selectedMode && model.selectedMode !== game.modeId.toString()) {\r\n              return false;\r\n            }\r\n            if (!game.players.some(player => player.nickname.toLowerCase().indexOf(searchText) > -1)) {\r\n              return false;\r\n            }\r\n            return true;\r\n          }\r\n        : null;\r\n    memoDeps = [(model.type === undefined && model.selectedMode) || null, searchText];\r\n  }\r\n  return useMemo(memoFunc, memoDeps);\r\n}\r\n\r\nexport function DataAdapterProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const [model, updateModel] = useModel();\r\n  const [dataProviders] = useState(() => ({} as { [key: string]: DataProvider }));\r\n  const searchPredicate = usePredicate(model);\r\n  const dataProvider = useMemo(() => {\r\n    const key = getProviderKey(model);\r\n    if (!dataProviders[key]) {\r\n      dataProviders[key] = createProvider(model);\r\n    }\r\n    return dataProviders[key];\r\n  }, [model, dataProviders]);\r\n  const [dataAdapter, setDataAdapter] = useState(() => DUMMY_DATA_ADAPTER);\r\n  const refreshDataAdapter = useCallback(\r\n    (isError?: boolean) => {\r\n      if (isError) {\r\n        updateModel(Model.removeExtraParams(model));\r\n        return;\r\n      }\r\n      dataProvider.setFilterPredicate(searchPredicate);\r\n      const adapter = new DataAdapter(dataProvider);\r\n      setDataAdapter(adapter);\r\n    },\r\n    [dataProvider, searchPredicate, model, updateModel]\r\n  );\r\n  useEffect(refreshDataAdapter, [refreshDataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      return () => adapter.cancelUpdateHook();\r\n    }\r\n  }, [dataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      adapter.setUpdateHook(refreshDataAdapter);\r\n    }\r\n  }, [dataAdapter, refreshDataAdapter]);\r\n  useEffect(() => {\r\n    dataProvider.getCountMaybeSync(); // Preload metadata\r\n  }, [dataProvider]);\r\n  return <DataAdapterContext.Provider value={dataAdapter}>{children}</DataAdapterContext.Provider>;\r\n}\r\n","import React, { ReactChild, useContext } from \"react\";\r\n\r\nimport { WindowScrollerChildProps } from \"react-virtualized\";\r\nimport { WindowScroller } from \"react-virtualized/dist/es/WindowScroller\";\r\n\r\nconst ScrollerContext = React.createContext<WindowScrollerChildProps>({} as any);\r\n\r\nexport const useScrollerProps = () => useContext(ScrollerContext);\r\n\r\nfunction Scroller({ children }: { children: ReactChild | ReactChild[] }) {\r\n  return (\r\n    <WindowScroller>\r\n      {scrollerProps => <ScrollerContext.Provider value={scrollerProps}>{children}</ScrollerContext.Provider>}\r\n    </WindowScroller>\r\n  );\r\n}\r\nexport default Scroller;\r\n","import dayjs from \"dayjs\";\r\nimport React, { useReducer, useContext, ReactChild } from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\ninterface WithRuntimeInfo {\r\n  version: number;\r\n  pendingRouteUpdate?: boolean;\r\n}\r\nexport interface ListingModel {\r\n  type: undefined;\r\n  date: dayjs.ConfigType | null;\r\n  selectedMode: string;\r\n  searchText: string;\r\n}\r\nexport interface PlayerModel {\r\n  type: \"player\";\r\n  playerId: string;\r\n  startDate: dayjs.ConfigType | null;\r\n  endDate: dayjs.ConfigType | null;\r\n  selectedMode: string;\r\n}\r\nexport type Model = (ListingModel | PlayerModel) & WithRuntimeInfo;\r\ninterface ListingModelPlain {\r\n  type: undefined;\r\n  date: number | null;\r\n  selectedMode: string;\r\n  searchText: string;\r\n}\r\nexport interface PlayerModelPlain {\r\n  type: \"player\";\r\n  playerId: string;\r\n  startDate: number | null;\r\n  endDate: number | null;\r\n  selectedMode: string;\r\n}\r\nexport type ModelPlain = (ListingModelPlain | PlayerModelPlain) & WithRuntimeInfo;\r\nexport const Model = Object.freeze({\r\n  toPlain(model: Model): ModelPlain {\r\n    if (model.type === \"player\") {\r\n      return {\r\n        ...model,\r\n        startDate: model.startDate ? dayjs(model.startDate).valueOf() : null,\r\n        endDate: model.endDate ? dayjs(model.endDate).valueOf() : null\r\n      };\r\n    }\r\n    return {\r\n      ...model,\r\n      type: undefined,\r\n      date: model.date ? dayjs(model.date).valueOf() : null\r\n    };\r\n  },\r\n  fromPlain(model: ModelPlain): ListingModel | PlayerModel {\r\n    if (model.type === \"player\") {\r\n      return model;\r\n    }\r\n    if (model.type === undefined) {\r\n      return {\r\n        type: undefined,\r\n        date: model.date || null,\r\n        searchText: model.searchText || \"\",\r\n        selectedMode: model.selectedMode\r\n      };\r\n    }\r\n    console.warn(\"Unknown model data from location state:\", model);\r\n    // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\r\n    return DEFAULT_MODEL;\r\n  },\r\n  removeExtraParams(model: Model): Model {\r\n    if (model.type === \"player\") {\r\n      return {\r\n        type: \"player\",\r\n        playerId: model.playerId,\r\n        selectedMode: \"\",\r\n        startDate: null,\r\n        endDate: null,\r\n        version: 0\r\n      };\r\n    }\r\n    return {\r\n      type: undefined,\r\n      searchText: \"\",\r\n      selectedMode: \"\",\r\n      date: null,\r\n      version: 0\r\n    };\r\n  }\r\n});\r\ntype ModelUpdate = Partial<ListingModel> | ({ type: \"player\" } & Partial<PlayerModel>);\r\ntype DispatchModelUpdate = (props: ModelUpdate) => void;\r\n\r\nconst DEFAULT_MODEL: ListingModel = { type: undefined, date: null, selectedMode: \"\", searchText: \"\" };\r\nconst ModelContext = React.createContext<[Readonly<Model>, DispatchModelUpdate]>([\r\n  { ...DEFAULT_MODEL, version: 0 },\r\n  () => {}\r\n]);\r\nexport const useModel = () => useContext(ModelContext);\r\n\r\nfunction normalizeUpdate(newProps: ModelUpdate): ModelUpdate {\r\n  if (newProps.type === undefined) {\r\n    if (newProps.date) {\r\n      newProps.date = dayjs(newProps.date).valueOf();\r\n    }\r\n  }\r\n  for (const key of Object.keys(newProps)) {\r\n    if (key !== \"type\" && newProps[key as keyof typeof newProps] === undefined) {\r\n      delete newProps[key as keyof typeof newProps];\r\n    }\r\n  }\r\n  return newProps;\r\n}\r\nfunction isSameDateValue(d1?: dayjs.ConfigType | null, d2?: dayjs.ConfigType | null): boolean {\r\n  if (d1 === d2) {\r\n    return true;\r\n  }\r\n  if (!d1 || !d2) {\r\n    return false;\r\n  }\r\n  return dayjs(d1).isSame(d2, \"day\");\r\n}\r\nfunction isChanged(oldModel: Model, newProps: ModelUpdate): boolean {\r\n  if (oldModel.type !== newProps.type) {\r\n    return true;\r\n  }\r\n  if (newProps.selectedMode !== undefined && newProps.selectedMode !== oldModel.selectedMode) {\r\n    return true;\r\n  }\r\n  if (oldModel.type === undefined && newProps.type === oldModel.type) {\r\n    if (newProps.date !== undefined && !isSameDateValue(newProps.date, oldModel.date)) {\r\n      return true;\r\n    }\r\n    if (newProps.searchText !== undefined && newProps.searchText !== oldModel.searchText) {\r\n      return true;\r\n    }\r\n  }\r\n  if (oldModel.type === \"player\" && newProps.type === oldModel.type) {\r\n    if (newProps.playerId !== undefined && newProps.playerId !== oldModel.playerId) {\r\n      return true;\r\n    }\r\n    if (newProps.startDate !== undefined && !isSameDateValue(oldModel.startDate, newProps.startDate)) {\r\n      return true;\r\n    }\r\n    if (newProps.endDate !== undefined && !isSameDateValue(oldModel.endDate, newProps.endDate)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function ModelProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const location = useLocation();\r\n  const [model, updateModel] = useReducer(\r\n    (oldModel: Model, newProps: ModelUpdate): Model =>\r\n      isChanged(oldModel, newProps)\r\n        ? {\r\n            ...((oldModel.type === newProps.type ? oldModel : {}) as Model),\r\n            ...(normalizeUpdate(newProps) as Model),\r\n            version: oldModel.version + 1,\r\n            pendingRouteUpdate: true\r\n          }\r\n        : oldModel,\r\n    null,\r\n    (): Model => ({\r\n      ...DEFAULT_MODEL,\r\n      ...Model.fromPlain((location.state || {}).model || {}),\r\n      version: new Date().getTime()\r\n    })\r\n  );\r\n  const value: [Model, DispatchModelUpdate] = useMemo(() => [model, updateModel], [model, updateModel]);\r\n  return <ModelContext.Provider value={value}>{children}</ModelContext.Provider>;\r\n}\r\n"],"sourceRoot":""}