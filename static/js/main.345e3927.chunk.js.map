{"version":3,"sources":["components/layout/container.tsx","components/layout/steppingListRenderer.tsx","components/layout/table.tsx","components/misc/alert.tsx","components/form/checkboxGroup.tsx","utils/dataSource.ts","utils/constants.ts","utils/index.ts","components/form/datePicker.tsx","components/form/formRow.tsx","components/app/player.tsx","components/app/gameRecordRow.tsx","components/app/gameRecords.tsx","components/app/index.tsx","index.tsx"],"names":["Container","_ref","_ref$title","title","undefined","_ref$children","children","_ref$fluid","fluid","react_default","a","createElement","className","concat","SteppingListRenderer","_ref$batchSize","batchSize","_ref$renderInterval","renderInterval","_useState","useState","_useState2","Object","slicedToArray","numItems","setNumItems","useEffect","timeoutToken","length","count","step","Math","min","setTimeout","clearTimeout","Fragment","slice","Table","headers","split","map","x","key","Alert","_ref$className","_ref$type","type","_ref$container","container","React","_ref$stateName","stateName","stateKey","localStorage","getItem","closed","setClosed","setItem","Cont","role","data-dismiss","aria-label","onClick","event","preventDefault","aria-hidden","CheckboxGroup","_ref$items","items","_ref$checkedItems","checkedItems","_ref$groupKey","groupKey","_ref$onChange","onChange","selectedItems","Set","selectedItemKeys","setSelectedItemKeys","setSelected","isSelected","has","newSet","add","delete","filter","item","id","value","checked","target","htmlFor","label","GameMode","DATA_ROOT","PLAYER_RANKS","DATA_CACHE_MS","_callee","date","dateString","isToday","cacheTag","timestamp","lastUpdateTimestamp","resp","ret","cacheData","regenerator_default","wrap","_context","prev","next","moment","format","isSame","Date","getTime","parseInt","sessionStorage","removeItem","toString","abrupt","Promise","resolve","JSON","parse","fetch","sent","t0","json","t1","values","call","sort","b","endTime","stringify","e","clear","t2","stop","eventTargetReducer","func","withStore","_cachedEventTargetReducer","currentTarget","DatePicker","_ref$initialDate","initialDate","_","_ref$min","_ref$max","max","_useReducer","useReducer","toDate","_useReducer2","handleChange","FormRow","Player","t","_ref$player","player","nickname","level","score","accountId","uuid","game","isTop","href","levelId","realId","majorRank","floor","minorRank","getLevelTag","GameRecordRow","topScore","apply","toConsumableArray","players","modeId","player_Player","unix","startTime","MODE_CHECKBOXES","keys","String","getKeySet","GameRecords","_useState3","_useState4","loading","setLoading","_useState5","_useState6","data","setData","_useState7","_useState8","setDate","trim","toLowerCase","searchText","updateSearchTextFromEvent","_useReducer3","_useReducer4","selectedModes","setSelectedItems","cancelled","_x","_fetchGameRecords","this","arguments","fetchGameRecords","then","filteredData","useMemo","some","indexOf","gameRecordRow_GameRecordRow","formRow_FormRow","App","container_Container","rootElement","document","getElementById","render","react","app"],"mappings":"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","file":"static/js/main.345e3927.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\";\r\n\r\nexport const Container = ({ title = undefined, children = undefined as ReactNode, fluid = false }) => (\r\n  <div className={`my-5 container${fluid ? \"-fluid\" : \"\"}`}>\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-12\">\r\n        {title && <h2 className=\"mb-4\">{title}</h2>}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import { useState, useEffect, ReactNode } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport function SteppingListRenderer({\r\n  batchSize = 50,\r\n  renderInterval = 100,\r\n  children = undefined as ReactNode[] | undefined,\r\n}) {\r\n  const [numItems, setNumItems] = useState(0);\r\n  useEffect(() => {\r\n    let timeoutToken: ReturnType<typeof setTimeout> | null = null;\r\n    if (children && children.length) {\r\n      let numItems = 0;\r\n      const count = children.length;\r\n      const step = () => {\r\n        timeoutToken = null;\r\n        numItems += batchSize;\r\n        numItems = Math.min(count, numItems);\r\n        setNumItems(numItems);\r\n        if (numItems < count) {\r\n          timeoutToken = setTimeout(step, renderInterval);\r\n        }\r\n      };\r\n      step();\r\n    }\r\n    return () => {\r\n      if (timeoutToken) {\r\n        clearTimeout(timeoutToken);\r\n      }\r\n    };\r\n  }, [children, batchSize, renderInterval]);\r\n  if (!children || !children.length) {\r\n    return <React.Fragment>{children}</React.Fragment>;\r\n  }\r\n  return <React.Fragment>{children.slice(0, numItems)}</React.Fragment>;\r\n}\r\n","import React from \"react\";\r\n\r\nimport { ReactNode } from \"react\";\r\n\r\nexport function Table({ headers, children }: { headers: string | string[]; children?: ReactNode }) {\r\n  if (typeof headers === \"string\") {\r\n    headers = headers.split(\",\");\r\n  }\r\n  return (\r\n    <table className=\"table table-striped\">\r\n      {headers && (\r\n        <thead className=\"text-nowrap\">\r\n          <tr>\r\n            {headers.map(x => (\r\n              <th key={x}>{x}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n      )}\r\n      <tbody>{children}</tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useState, useEffect, ReactNode } from \"react\";\r\nimport React from \"react\";\r\nimport { ReactComponentLike } from \"prop-types\";\r\n\r\nexport function Alert({ className = \"\", type = \"info\", container = React.Fragment as ReactComponentLike, stateName = \"\", children = undefined as ReactNode }) {\r\n  const stateKey = `alertState_${stateName}`;\r\n  const [closed, setClosed] = useState(() => stateName && !!localStorage.getItem(stateKey));\r\n  useEffect(() => {\r\n    if (stateName && closed) {\r\n      localStorage.setItem(stateKey, \"true\");\r\n    }\r\n  }, [closed, stateName, stateKey]);\r\n  if (closed) {\r\n    return null;\r\n  }\r\n  const Cont = container;\r\n  return (\r\n    <Cont>\r\n      <div className={`alert alert-${type} alert-dismissible fade show ${className}`} role=\"alert\">\r\n        {children}\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n          onClick={event => {\r\n            event.preventDefault();\r\n            setClosed(true);\r\n          }}\r\n        >\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n      </div>\r\n    </Cont>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport type CheckboxItem = {\r\n  key: string;\r\n  label: string;\r\n};\r\n\r\nexport function CheckboxGroup({\r\n  items = [] as CheckboxItem[],\r\n  checkedItems = [] as CheckboxItem[],\r\n  groupKey = \"default\",\r\n  onChange = (selectedItems: CheckboxItem[]) => {},\r\n}) {\r\n  const [selectedItemKeys, setSelectedItemKeys] = useState(() => new Set(checkedItems.map(x => x.key)));\r\n  const setSelected = function(key: string, isSelected: boolean) {\r\n    if (isSelected && selectedItemKeys.has(key)) {\r\n      return;\r\n    }\r\n    if (!isSelected && !selectedItemKeys.has(key)) {\r\n      return;\r\n    }\r\n    const newSet = new Set(selectedItemKeys);\r\n    if (isSelected) {\r\n      newSet.add(key);\r\n    } else {\r\n      newSet.delete(key);\r\n    }\r\n    setSelectedItemKeys(newSet);\r\n    onChange(items.filter(x => newSet.has(x.key)));\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {items.map(item => (\r\n        <div className=\"form-check form-check-inline\" key={item.key}>\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            id={`CG_${groupKey}_${item.key}`}\r\n            value={item.key}\r\n            checked={selectedItemKeys.has(item.key)}\r\n            onChange={event => setSelected(item.key, event.target.checked)}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor={`CG_${groupKey}_${item.key}`}>\r\n            {item.label}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import moment from \"moment\";\r\n\r\nimport { DATA_ROOT } from \"./constants\";\r\n\r\nexport const PLAYER_RANKS = \"初士杰豪圣魂\";\r\n\r\nexport enum GameMode {\r\n  王座 = 16,\r\n  玉 = 12,\r\n}\r\nexport interface PlayerRecord {\r\n  accountId: number;\r\n  nickname: string;\r\n  level: number;\r\n  score: number;\r\n}\r\nexport interface GameRecord {\r\n  modeId: GameMode;\r\n  uuid: string;\r\n  startTime: number;\r\n  endTime: number;\r\n  players: PlayerRecord[];\r\n}\r\n\r\nconst DATA_CACHE_MS = 120000;\r\nexport async function fetchGameRecords(date: moment.MomentInput): Promise<GameRecord[]> {\r\n  const dateString = moment(date).format(\"YYMMDD\");\r\n  const isToday = moment(date).isSame(moment(), \"day\");\r\n  const cacheTag = `gameRecord${isToday ? \"Today\" : dateString}`;\r\n  const timestamp = new Date().getTime();\r\n  const lastUpdateTimestamp = parseInt(sessionStorage.lastUpdateTimestamp || \"0\", 10);\r\n  const cacheExpired = isToday && timestamp > lastUpdateTimestamp + DATA_CACHE_MS;\r\n  if (cacheExpired) {\r\n    sessionStorage.removeItem(cacheTag);\r\n    sessionStorage.setItem(\"lastUpdateTimestamp\", timestamp.toString());\r\n  }\r\n  if (sessionStorage[cacheTag]) {\r\n    return Promise.resolve(JSON.parse(sessionStorage[cacheTag]));\r\n  }\r\n  try {\r\n    const resp = await fetch(`${DATA_ROOT}records/${dateString}.json?t=${cacheTag}`);\r\n    const ret = Object.values(await resp.json()) as GameRecord[];\r\n    ret.sort((a, b) => b.endTime - a.endTime);\r\n    const cacheData = JSON.stringify(ret);\r\n    try {\r\n      sessionStorage.setItem(cacheTag, cacheData);\r\n    } catch (e) {\r\n      sessionStorage.clear();\r\n      sessionStorage.setItem(cacheTag, cacheData);\r\n    }\r\n    return ret;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n}\r\n","export const DATA_ROOT = \"https://d2ek5tscv4zquv.cloudfront.net/\";\r\n","import { PLAYER_RANKS } from \"./dataSource\";\r\nimport { SyntheticEvent } from \"react\";\r\n\r\nexport function getLevelTag(levelId: number) {\r\n  const realId = levelId % 10000;\r\n  const majorRank = Math.floor(realId / 100);\r\n  const minorRank = realId % 100;\r\n  const label = PLAYER_RANKS[majorRank - 1];\r\n  if (majorRank === PLAYER_RANKS.length) {\r\n    return label;\r\n  }\r\n  return label + minorRank;\r\n}\r\n\r\ninterface WithEventTargetReducer<T> {\r\n  _cachedEventTargetReducer?: (_: T) => any;\r\n}\r\nexport function eventTargetReducer<TElem extends EventTarget, TEvent extends SyntheticEvent<TElem>>(\r\n  func: NonNullable<(_: TElem) => any>,\r\n): NonNullable<(_: TEvent) => any> {\r\n  const withStore = func as WithEventTargetReducer<TEvent>;\r\n  if (!withStore._cachedEventTargetReducer) {\r\n    withStore._cachedEventTargetReducer = (event: TEvent) => func(event.currentTarget);\r\n  }\r\n  return withStore._cachedEventTargetReducer;\r\n}\r\n","import React from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport { useReducer, useEffect } from \"react\";\r\nimport { eventTargetReducer } from \"../../utils\";\r\n\r\nexport function DatePicker({\r\n  initialDate = undefined as Date | undefined,\r\n  onChange = (_: Date) => {},\r\n  className = \"\",\r\n  min = undefined as moment.MomentInput,\r\n  max = moment() as moment.MomentInput,\r\n}) {\r\n  const [date, handleChange] = useReducer((_, target: HTMLInputElement) => moment(target.value, \"YYYY-MM-DD\").toDate(), initialDate || new Date());\r\n  useEffect(() => onChange(date), [date, onChange]);\r\n  return (\r\n    <input\r\n      className={className}\r\n      type=\"date\"\r\n      value={moment(date).format(\"YYYY-MM-DD\")}\r\n      min={min ? moment(min).format(\"YYYY-MM-DD\") : undefined}\r\n      max={max ? moment(max).format(\"YYYY-MM-DD\") : undefined}\r\n      onChange={eventTargetReducer(handleChange)}\r\n    />\r\n  );\r\n}\r\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const FormRow = ({ title = \"\", children = undefined as ReactNode }) => (\r\n  <div className=\"form-group row\">\r\n    <label className=\"col-sm-2 col-form-label\">{title}</label>\r\n    <div className=\"col-sm-10\">{children}</div>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nimport { getLevelTag } from \"../../utils\";\r\nimport { GameRecord, PlayerRecord } from \"../../utils/dataSource\";\r\n\r\nconst encodeAccountId = (t: number) => 1358437 + ((7 * t + 1117113) ^ 86216345);\r\n\r\nexport const Player = function({\r\n  player: { nickname, level, score, accountId },\r\n  game: { uuid },\r\n  isTop,\r\n}: {\r\n  player: PlayerRecord;\r\n  game: GameRecord;\r\n  isTop: boolean;\r\n}) {\r\n  return (\r\n    <div className={`player ${isTop && \"font-weight-bold\"}`}>\r\n      <a href={`https://www.majsoul.com/1/?paipu=${uuid}_a${encodeAccountId(accountId)}`} target=\"_blank\">\r\n        [{getLevelTag(level)}] {nickname} {score !== undefined && `[${score}]`}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport { Player } from \"./player\";\r\nimport { GameMode, GameRecord } from \"../../utils/dataSource\";\r\n\r\nexport const GameRecordRow = function({ game }: { game: GameRecord }) {\r\n  const topScore = Math.max(...game.players.map(x => x.score));\r\n  return (\r\n    <tr>\r\n      <td>{GameMode[game.modeId]}</td>\r\n      <td>\r\n        <div className=\"row no-gutters\">\r\n          {game.players.map(x => (\r\n            <div key={x.accountId} className=\"col-6 pr-1\">\r\n              <Player game={game} player={x} isTop={x.score === topScore} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </td>\r\n      <td>{moment.unix(game.startTime).format(\"HH:mm\")}</td>\r\n      <td>{moment.unix(game.endTime).format(\"HH:mm\")}</td>\r\n    </tr>\r\n  );\r\n};\r\n","import { useState, useEffect, useMemo, useReducer } from \"react\";\r\nimport React from \"react\";\r\n\r\nimport { FormRow, DatePicker, CheckboxGroup, CheckboxItem } from \"../form\";\r\nimport { Table, SteppingListRenderer } from \"../layout\";\r\nimport { GameRecordRow } from \"./gameRecordRow\";\r\nimport { fetchGameRecords, GameMode, GameRecord } from \"../../utils/dataSource\";\r\nimport { eventTargetReducer } from \"../../utils\";\r\n\r\nconst MODE_CHECKBOXES = Object.keys(GameMode)\r\n  .filter(x => typeof GameMode[x as keyof typeof GameMode] !== \"string\")\r\n  .map(x => ({\r\n    key: String(GameMode[x as keyof typeof GameMode]),\r\n    label: x,\r\n  }));\r\n\r\nconst getKeySet = (items: CheckboxItem[]) => new Set(items.map(x => x.key));\r\n\r\nexport function GameRecords({ initialDate = undefined as Date | undefined }) {\r\n  [initialDate] = useState(() => initialDate || new Date()); // Set default value and remember\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([] as GameRecord[]);\r\n  const [date, setDate] = useState(initialDate);\r\n  const [searchText, updateSearchTextFromEvent] = useReducer(\r\n    (_, target: HTMLInputElement) => target.value.trim().toLowerCase(),\r\n    \"\",\r\n  );\r\n  const [selectedModes, setSelectedItems] = useReducer((_, selectedItems) => getKeySet(selectedItems), null, () =>\r\n    getKeySet(MODE_CHECKBOXES),\r\n  );\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    setData([]);\r\n    setLoading(true);\r\n    fetchGameRecords(date).then(x => {\r\n      if (cancelled) {\r\n        return;\r\n      }\r\n      setData(x);\r\n      setLoading(false);\r\n    });\r\n    return () => {\r\n      cancelled = true;\r\n    };\r\n  }, [date]);\r\n  const filteredData = useMemo(\r\n    () =>\r\n      data.filter(x => {\r\n        if (!selectedModes.has(x.modeId.toString())) {\r\n          return false;\r\n        }\r\n        if (searchText && !x.players.some(player => player.nickname.toLowerCase().indexOf(searchText) > -1)) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }),\r\n    [data, selectedModes, searchText],\r\n  );\r\n  const items = useMemo(() => filteredData.map(x => <GameRecordRow key={x.uuid} game={x} />), [filteredData]);\r\n  return (\r\n    <React.Fragment>\r\n      <FormRow title=\"日期\">\r\n        <DatePicker min=\"2019-08-23\" className=\"form-control\" initialDate={initialDate} onChange={setDate} />\r\n      </FormRow>\r\n      <FormRow title=\"查找玩家\">\r\n        <input type=\"text\" className=\"form-control\" onChange={eventTargetReducer(updateSearchTextFromEvent)} />\r\n      </FormRow>\r\n      <FormRow>\r\n        <CheckboxGroup items={MODE_CHECKBOXES} checkedItems={MODE_CHECKBOXES} onChange={setSelectedItems} />\r\n      </FormRow>\r\n      <Table headers=\"等级,玩家,开始,结束\">\r\n        <SteppingListRenderer>{items}</SteppingListRenderer>\r\n      </Table>\r\n      {loading && <p className=\"text-center\">加载中...</p>}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { Alert } from \"../misc/alert\";\r\nimport { GameRecords } from \"./gameRecords\";\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <h1>雀魂牌谱屋</h1>\r\n      </Container>\r\n      <Alert container={Container} stateName=\"topNote\">\r\n        <h4>说明</h4>\r\n        <ul>\r\n          <li>本页面由第三方维护，与雀魂官方无关</li>\r\n          <li>记录包含雀魂国服四人半庄段位战玉之间及王座之间的牌谱</li>\r\n          <li>正常情况下全部对局都会被记录，但不排除因网络问题遗漏部分对局的情况</li>\r\n          <li>页面不是实时更新，对局一般会在结束后二十分钟内出现</li>\r\n          <li>\r\n            如有问题或建议，请戳 <a href=\"mailto:i@sapika.ch\">SAPikachu (i@sapika.ch)</a> 或{\" \"}\r\n            <a href=\"https://github.com/SAPikachu/amae-koromo/\">提交 Issue</a>\r\n          </li>\r\n        </ul>\r\n      </Alert>\r\n      <Container>\r\n        <GameRecords />\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default App;\r\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\n\nimport App from \"./components/app\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}