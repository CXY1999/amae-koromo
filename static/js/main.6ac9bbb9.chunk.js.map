{"version":3,"sources":["components/layout/container.tsx","components/misc/alert.tsx","components/app/appHeader.tsx","components/form/checkboxGroup.tsx","utils/dataSource.ts","utils/constants.ts","utils/index.ts","components/form/datePicker.tsx","components/form/formRow.tsx","components/app/gameRecordDataController.tsx","components/app/player.tsx","components/app/gameRecords.tsx","components/app/index.tsx","index.tsx"],"names":["Container","_ref","_ref$title","title","undefined","_ref$children","children","_ref$fluid","fluid","react_default","a","createElement","className","concat","Alert","_ref$className","_ref$type","type","_ref$container","container","React","Fragment","_ref$stateName","stateName","stateKey","_useState","useState","localStorage","getItem","_useState2","Object","slicedToArray","closed","setClosed","useEffect","setItem","Cont","role","data-dismiss","aria-label","onClick","event","preventDefault","setTimeout","window","dispatchEvent","UIEvent","aria-hidden","AppHeader","container_Container","href","CheckboxGroup","_ref$items","items","_ref$checkedItems","checkedItems","_ref$groupKey","groupKey","_ref$onChange","onChange","selectedItems","Set","map","x","key","selectedItemKeys","setSelectedItemKeys","setSelected","isSelected","has","newSet","add","delete","filter","item","id","value","checked","target","htmlFor","label","GameMode","DATA_ROOT","PLAYER_RANKS","DATA_CACHE_MS","_callee","date","dateString","isToday","cacheTag","timestamp","lastUpdateTimestamp","resp","ret","cacheData","regenerator_default","wrap","_context","prev","next","moment","format","isSame","Date","getTime","parseInt","sessionStorage","removeItem","toString","abrupt","Promise","resolve","JSON","parse","fetch","sent","t0","json","t1","values","call","sort","b","endTime","stringify","e","clear","t2","stop","eventTargetReducer","func","withStore","_cachedEventTargetReducer","currentTarget","DatePicker","_ref$initialDate","initialDate","_","_ref$min","min","_ref$max","max","_useReducer","useReducer","toDate","_useReducer2","handleChange","FormRow","MODE_CHECKBOXES","keys","String","getKeySet","GameRecordDataController","_ref$setLoading","setLoading","_ref$setData","setData","_useState3","_useState4","setDate","_useState5","_useState6","rawData","setRawData","trim","toLowerCase","searchText","updateSearchTextFromEvent","_useReducer3","_useReducer4","selectedModes","setSelectedItems","cancelled","_x","_fetchGameRecords","apply","this","arguments","fetchGameRecords","then","modeId","players","some","player","nickname","indexOf","formRow_FormRow","Player","t","_ref$player","level","score","accountId","uuid","game","isTop","levelId","realId","majorRank","Math","floor","minorRank","length","getLevelTag","formatTime","unix","renderPlayers","player_Player","toConsumableArray","GameRecords","_ref$scrollerProps","scrollerProps","loading","data","isScrolling","onChildScroll","scrollTop","height","ref","registerChild","es","disableHeight","_ref2","width","autoHeight","rowCount","rowGetter","_ref3","index","rowHeight","matchMedia","matches","headerHeight","onScroll","dataKey","cellRenderer","_ref4","cellData","_ref5","rowData","flexGrow","_ref6","_ref7","App","rootElement","document","getElementById","render","react","app"],"mappings":"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","file":"static/js/main.6ac9bbb9.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\";\r\n\r\nexport const Container = ({ title = undefined, children = undefined as ReactNode, fluid = false }) => (\r\n  <div className={`my-5 container${fluid ? \"-fluid\" : \"\"}`}>\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-12\">\r\n        {title && <h2 className=\"mb-4\">{title}</h2>}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import { useState, useEffect, ReactNode } from \"react\";\r\nimport React from \"react\";\r\nimport { ReactComponentLike } from \"prop-types\";\r\n\r\nexport function Alert({\r\n  className = \"\",\r\n  type = \"info\",\r\n  container = React.Fragment as ReactComponentLike,\r\n  stateName = \"\",\r\n  children = undefined as ReactNode\r\n}) {\r\n  const stateKey = `alertState_${stateName}`;\r\n  const [closed, setClosed] = useState(\r\n    () => stateName && !!localStorage.getItem(stateKey)\r\n  );\r\n  useEffect(() => {\r\n    if (stateName && closed) {\r\n      localStorage.setItem(stateKey, \"true\");\r\n    }\r\n  }, [closed, stateName, stateKey]);\r\n  if (closed) {\r\n    return null;\r\n  }\r\n  const Cont = container;\r\n  return (\r\n    <Cont>\r\n      <div\r\n        className={`alert alert-${type} alert-dismissible fade show ${className}`}\r\n        role=\"alert\"\r\n      >\r\n        {children}\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n          onClick={event => {\r\n            event.preventDefault();\r\n            setClosed(true);\r\n            setTimeout(function() {\r\n              window.dispatchEvent(new UIEvent(\"resize\"));\r\n            }, 1000);\r\n          }}\r\n        >\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n      </div>\r\n    </Cont>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { Alert } from \"../misc/alert\";\r\n\r\nexport function AppHeader() {\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <h1>雀魂牌谱屋</h1>\r\n      </Container>\r\n      <Alert container={Container} stateName=\"topNote\">\r\n        <h4>说明</h4>\r\n        <ul>\r\n          <li>本页面由第三方维护，与雀魂官方无关</li>\r\n          <li>记录包含雀魂国服四人半庄段位战玉之间及王座之间的牌谱</li>\r\n          <li>\r\n            正常情况下全部对局都会被记录，但不排除因网络问题遗漏部分对局的情况\r\n          </li>\r\n          <li>页面不是实时更新，对局一般会在结束后二十分钟内出现</li>\r\n          <li>\r\n            如有问题或建议，请戳{\" \"}\r\n            <a href=\"mailto:i@sapika.ch\">SAPikachu (i@sapika.ch)</a> 或{\" \"}\r\n            <a href=\"https://github.com/SAPikachu/amae-koromo/\">提交 Issue</a>\r\n          </li>\r\n        </ul>\r\n      </Alert>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport interface CheckboxItem {\r\n  key: string;\r\n  label: string;\r\n};\r\n\r\nexport function CheckboxGroup({\r\n  items = [] as CheckboxItem[],\r\n  checkedItems = [] as CheckboxItem[],\r\n  groupKey = \"default\",\r\n  onChange = (selectedItems: CheckboxItem[]) => {},\r\n}) {\r\n  const [selectedItemKeys, setSelectedItemKeys] = useState(() => new Set(checkedItems.map(x => x.key)));\r\n  const setSelected = function(key: string, isSelected: boolean) {\r\n    if (isSelected && selectedItemKeys.has(key)) {\r\n      return;\r\n    }\r\n    if (!isSelected && !selectedItemKeys.has(key)) {\r\n      return;\r\n    }\r\n    const newSet = new Set(selectedItemKeys);\r\n    if (isSelected) {\r\n      newSet.add(key);\r\n    } else {\r\n      newSet.delete(key);\r\n    }\r\n    setSelectedItemKeys(newSet);\r\n    onChange(items.filter(x => newSet.has(x.key)));\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {items.map(item => (\r\n        <div className=\"form-check form-check-inline\" key={item.key}>\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            id={`CG_${groupKey}_${item.key}`}\r\n            value={item.key}\r\n            checked={selectedItemKeys.has(item.key)}\r\n            onChange={event => setSelected(item.key, event.target.checked)}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor={`CG_${groupKey}_${item.key}`}>\r\n            {item.label}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import moment from \"moment\";\r\n\r\nimport { DATA_ROOT } from \"./constants\";\r\n\r\nexport const PLAYER_RANKS = \"初士杰豪圣魂\";\r\n\r\nexport enum GameMode {\r\n  王座 = 16,\r\n  玉 = 12,\r\n}\r\nexport interface PlayerRecord {\r\n  accountId: number;\r\n  nickname: string;\r\n  level: number;\r\n  score: number;\r\n}\r\nexport interface GameRecord {\r\n  modeId: GameMode;\r\n  uuid: string;\r\n  startTime: number;\r\n  endTime: number;\r\n  players: PlayerRecord[];\r\n}\r\n\r\nconst DATA_CACHE_MS = 120000;\r\nexport async function fetchGameRecords(date: moment.MomentInput): Promise<GameRecord[]> {\r\n  const dateString = moment(date).format(\"YYMMDD\");\r\n  const isToday = moment(date).isSame(moment(), \"day\");\r\n  const cacheTag = `gameRecord${isToday ? \"Today\" : dateString}`;\r\n  const timestamp = new Date().getTime();\r\n  const lastUpdateTimestamp = parseInt(sessionStorage.lastUpdateTimestamp || \"0\", 10);\r\n  const cacheExpired = isToday && timestamp > lastUpdateTimestamp + DATA_CACHE_MS;\r\n  if (cacheExpired) {\r\n    sessionStorage.removeItem(cacheTag);\r\n    sessionStorage.setItem(\"lastUpdateTimestamp\", timestamp.toString());\r\n  }\r\n  if (sessionStorage[cacheTag]) {\r\n    return Promise.resolve(JSON.parse(sessionStorage[cacheTag]));\r\n  }\r\n  try {\r\n    const resp = await fetch(`${DATA_ROOT}records/${dateString}.json?t=${cacheTag}`);\r\n    const ret = Object.values(await resp.json()) as GameRecord[];\r\n    ret.sort((a, b) => b.endTime - a.endTime);\r\n    const cacheData = JSON.stringify(ret);\r\n    try {\r\n      sessionStorage.setItem(cacheTag, cacheData);\r\n    } catch (e) {\r\n      sessionStorage.clear();\r\n      sessionStorage.setItem(cacheTag, cacheData);\r\n    }\r\n    return ret;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n}\r\n","export const DATA_ROOT = \"https://d2ek5tscv4zquv.cloudfront.net/\";\r\n","import { PLAYER_RANKS } from \"./dataSource\";\r\nimport { SyntheticEvent } from \"react\";\r\n\r\nexport function getLevelTag(levelId: number) {\r\n  const realId = levelId % 10000;\r\n  const majorRank = Math.floor(realId / 100);\r\n  const minorRank = realId % 100;\r\n  const label = PLAYER_RANKS[majorRank - 1];\r\n  if (majorRank === PLAYER_RANKS.length) {\r\n    return label;\r\n  }\r\n  return label + minorRank;\r\n}\r\n\r\ninterface WithEventTargetReducer<T> {\r\n  _cachedEventTargetReducer?: (_: T) => any;\r\n}\r\nexport function eventTargetReducer<TElem extends EventTarget, TEvent extends SyntheticEvent<TElem>>(\r\n  func: NonNullable<(_: TElem) => any>,\r\n): NonNullable<(_: TEvent) => any> {\r\n  const withStore = func as WithEventTargetReducer<TEvent>;\r\n  if (!withStore._cachedEventTargetReducer) {\r\n    withStore._cachedEventTargetReducer = (event: TEvent) => func(event.currentTarget);\r\n  }\r\n  return withStore._cachedEventTargetReducer;\r\n}\r\n","import React from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport { useReducer, useEffect } from \"react\";\r\nimport { eventTargetReducer } from \"../../utils\";\r\n\r\nexport function DatePicker({\r\n  initialDate = undefined as Date | undefined,\r\n  onChange = (_: Date) => {},\r\n  className = \"\",\r\n  min = undefined as moment.MomentInput,\r\n  max = moment() as moment.MomentInput,\r\n}) {\r\n  const [date, handleChange] = useReducer((_, target: HTMLInputElement) => moment(target.value, \"YYYY-MM-DD\").toDate(), initialDate || new Date());\r\n  useEffect(() => onChange(date), [date, onChange]);\r\n  return (\r\n    <input\r\n      className={className}\r\n      type=\"date\"\r\n      value={moment(date).format(\"YYYY-MM-DD\")}\r\n      min={min ? moment(min).format(\"YYYY-MM-DD\") : undefined}\r\n      max={max ? moment(max).format(\"YYYY-MM-DD\") : undefined}\r\n      onChange={eventTargetReducer(handleChange)}\r\n    />\r\n  );\r\n}\r\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const FormRow = ({ title = \"\", children = undefined as ReactNode }) => (\r\n  <div className=\"form-group row\">\r\n    <label className=\"col-sm-2 col-form-label\">{title}</label>\r\n    <div className=\"col-sm-10\">{children}</div>\r\n  </div>\r\n);\r\n","import { useState, useEffect, useReducer } from \"react\";\r\nimport React from \"react\";\r\n\r\nimport { FormRow, DatePicker, CheckboxGroup, CheckboxItem } from \"../form\";\r\nimport { fetchGameRecords, GameMode, GameRecord } from \"../../utils/dataSource\";\r\nimport { eventTargetReducer } from \"../../utils\";\r\n\r\nconst MODE_CHECKBOXES = Object.keys(GameMode)\r\n  .filter(x => typeof GameMode[x as keyof typeof GameMode] !== \"string\")\r\n  .map(x => ({\r\n    key: String(GameMode[x as keyof typeof GameMode]),\r\n    label: x\r\n  }));\r\n\r\nconst getKeySet = (items: CheckboxItem[]) => new Set(items.map(x => x.key));\r\n\r\nexport function GameRecordDataController({\r\n  initialDate = undefined as Date | undefined,\r\n  setLoading = (_: boolean) => {},\r\n  setData = (_: GameRecord[]) => {}\r\n}) {\r\n  [initialDate] = useState(() => initialDate || new Date()); // Set default value and remember\r\n  const [date, setDate] = useState(initialDate);\r\n  const [rawData, setRawData] = useState([] as GameRecord[]);\r\n  const [searchText, updateSearchTextFromEvent] = useReducer(\r\n    (_, target: HTMLInputElement) => target.value.trim().toLowerCase(),\r\n    \"\"\r\n  );\r\n  const [selectedModes, setSelectedItems] = useReducer(\r\n    (_, selectedItems) => getKeySet(selectedItems),\r\n    null,\r\n    () => getKeySet(MODE_CHECKBOXES)\r\n  );\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    setRawData([]);\r\n    setLoading(true);\r\n    fetchGameRecords(date).then(x => {\r\n      if (cancelled) {\r\n        return;\r\n      }\r\n      setRawData(x);\r\n      setLoading(false);\r\n    });\r\n    return () => {\r\n      cancelled = true;\r\n    };\r\n  }, [date, setLoading]);\r\n  useEffect(\r\n    () =>\r\n      setData(\r\n        rawData.filter(x => {\r\n          if (!selectedModes.has(x.modeId.toString())) {\r\n            return false;\r\n          }\r\n          if (\r\n            searchText &&\r\n            !x.players.some(\r\n              player => player.nickname.toLowerCase().indexOf(searchText) > -1\r\n            )\r\n          ) {\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      ),\r\n    [rawData, selectedModes, searchText, setData]\r\n  );\r\n  return (\r\n    <React.Fragment>\r\n      <FormRow title=\"日期\">\r\n        <DatePicker\r\n          min=\"2019-08-23\"\r\n          className=\"form-control\"\r\n          initialDate={initialDate}\r\n          onChange={setDate}\r\n        />\r\n      </FormRow>\r\n      <FormRow title=\"查找玩家\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          onChange={eventTargetReducer(updateSearchTextFromEvent)}\r\n        />\r\n      </FormRow>\r\n      <FormRow>\r\n        <CheckboxGroup\r\n          items={MODE_CHECKBOXES}\r\n          checkedItems={MODE_CHECKBOXES}\r\n          onChange={setSelectedItems}\r\n        />\r\n      </FormRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { getLevelTag } from \"../../utils\";\r\nimport { GameRecord, PlayerRecord } from \"../../utils/dataSource\";\r\n\r\nconst encodeAccountId = (t: number) => 1358437 + ((7 * t + 1117113) ^ 86216345);\r\n\r\nexport const Player = function({\r\n  player: { nickname, level, score, accountId },\r\n  game: { uuid },\r\n  isTop,\r\n}: {\r\n  player: PlayerRecord;\r\n  game: GameRecord;\r\n  isTop: boolean;\r\n}) {\r\n  return (\r\n    <div className={`player ${isTop && \"font-weight-bold\"}`}>\r\n      <a href={`https://www.majsoul.com/1/?paipu=${uuid}_a${encodeAccountId(accountId)}`} target=\"_blank\">\r\n        [{getLevelTag(level)}] {nickname} {score !== undefined && `[${score}]`}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport React from \"react\";\r\nimport {\r\n  Table,\r\n  Column,\r\n  WindowScrollerChildProps,\r\n  AutoSizer\r\n} from \"react-virtualized\";\r\nimport moment from \"moment\";\r\n\r\nimport { GameRecordDataController } from \"./gameRecordDataController\";\r\nimport { GameRecord, GameMode } from \"../../utils/dataSource\";\r\nimport { Player } from \"./player\";\r\n\r\nconst formatTime = (x: number) => moment.unix(x).format(\"HH:mm\");\r\n\r\nconst renderPlayers = (game: GameRecord) => (\r\n  <div className=\"row no-gutters\">\r\n    {game.players.map(x => (\r\n      <div key={x.accountId} className=\"col-12 col-md-6 pr-1\">\r\n        <Player\r\n          game={game}\r\n          player={x}\r\n          isTop={x.score === Math.max(...game.players.map(x => x.score))}\r\n        />\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport function GameRecords({\r\n  initialDate = undefined as Date | undefined,\r\n  scrollerProps = {} as WindowScrollerChildProps\r\n}) {\r\n  [initialDate] = useState(() => initialDate || new Date()); // Set default value and remember\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([] as GameRecord[]);\r\n  const { isScrolling, onChildScroll, scrollTop, height } = scrollerProps;\r\n  return (\r\n    <React.Fragment>\r\n      <GameRecordDataController\r\n        initialDate={initialDate}\r\n        setData={setData}\r\n        setLoading={setLoading}\r\n      />\r\n      <div ref={scrollerProps.registerChild as any}>\r\n        <AutoSizer disableHeight>\r\n          {({ width }) => (\r\n            <Table\r\n              autoHeight\r\n              rowCount={data.length}\r\n              rowGetter={({ index }) => data[index]}\r\n              rowHeight={\r\n                window.matchMedia(\"(min-width: 720px)\").matches ? 70 : 140\r\n              }\r\n              headerHeight={50}\r\n              width={width}\r\n              height={height}\r\n              isScrolling={isScrolling}\r\n              onScroll={onChildScroll}\r\n              scrollTop={scrollTop}\r\n            >\r\n              <Column\r\n                dataKey=\"modeId\"\r\n                label=\"等级\"\r\n                cellRenderer={({ cellData }) => GameMode[cellData]}\r\n                width={40}\r\n              />\r\n              <Column\r\n                dataKey=\"players\"\r\n                label=\"玩家\"\r\n                cellRenderer={({ rowData }) =>\r\n                  rowData ? renderPlayers(rowData) : null\r\n                }\r\n                width={120}\r\n                flexGrow={1}\r\n              />\r\n              <Column\r\n                dataKey=\"startTime\"\r\n                label=\"开始\"\r\n                cellRenderer={({ cellData }) => formatTime(cellData)}\r\n                width={40}\r\n              />\r\n              <Column\r\n                dataKey=\"endTime\"\r\n                label=\"结束\"\r\n                cellRenderer={({ cellData }) => formatTime(cellData)}\r\n                width={40}\r\n              />\r\n            </Table>\r\n          )}\r\n        </AutoSizer>\r\n      </div>\r\n      {loading && <p className=\"text-center\">加载中...</p>}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { WindowScroller } from \"react-virtualized\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { AppHeader } from \"./appHeader\";\r\nimport { GameRecords } from \"./gameRecords\";\r\n\r\nfunction App() {\r\n  return (\r\n    <WindowScroller>\r\n      {scrollerProps => (\r\n        <>\r\n          <AppHeader />\r\n          <Container>\r\n            <GameRecords scrollerProps={scrollerProps} />\r\n          </Container>\r\n        </>\r\n      )}\r\n    </WindowScroller>\r\n  );\r\n}\r\nexport default App;\r\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-virtualized/styles.css\";\nimport \"./styles.css\";\n\nimport App from \"./components/app\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}