{"version":3,"sources":["data/source/constants.ts","data/source/api.ts","components/layout/container.tsx","components/misc/alert.tsx","components/app/appHeader.tsx","components/app/maintenance.tsx","components/app/navbar.tsx","components/app/index.tsx","index.tsx","utils/constants.ts","components/form/checkboxGroup.tsx","components/form/datePicker.tsx","components/form/index.tsx","data/types/constants.ts","data/types/gameMode.ts","data/types/level.ts","data/types/metadata.ts","data/types/record.ts","data/types/index.ts","utils/index.ts","components/misc/loading.tsx","components/gameRecords/routeSync.tsx","components/gameRecords/filterPanel.tsx","components/gameRecords/playerSearch.tsx","components/gameRecords/routes.tsx","components/form/formRow.tsx","components/gameRecords/modeSelector.tsx","data/source/records/loader.ts","data/source/records/provider.ts","components/gameRecords/dataAdapterProvider.tsx","components/misc/scroller.tsx","components/gameRecords/model.tsx","data/source/misc.ts"],"names":["API_ROOT_PROD","API_ROOT","onMaintenance","setMaintenanceHandler","handler","apiGet","path","a","fetch","resp","ok","json","data","maintenance","Promise","Container","title","undefined","children","fluid","className","Alert","type","container","React","Fragment","stateName","closable","stateKey","useState","localStorage","getItem","closed","setClosed","useEffect","setItem","Cont","role","data-dismiss","aria-label","onClick","event","preventDefault","triggerRelayout","aria-hidden","AppHeader","href","MaintenanceHandler","msg","setMsg","isActive","match","location","pathname","startsWith","Navbar","mobileVisible","setMobileVisible","to","TITLE_PREFIX","data-toggle","data-target","aria-controls","aria-expanded","id","activeClassName","Helmet","Loadable","loader","loading","Ranking","App","rel","CANONICAL_DOMAIN","rootElement","document","getElementById","render","DATE_MIN","dayjs","CheckboxGroup","props","items","groupKey","selectedItemKeys","onChange","setSelected","key","isSelected","has","newSet","Set","map","x","add","delete","isChecked","selectedItemKey","item","name","value","checked","currentTarget","htmlFor","label","DatePicker","date","min","max","handleChange","useCallback","e","format","GameMode","RANK_LABELS","RANK_COLORS","Object","keys","filter","length","LEVEL_MAX_POINTS","LEVEL_PENALTY","LEVEL_ALLOWED_MODES","玉","王座","Level","levelId","_majorRank","_minorRank","realId","this","Math","floor","other","mode","toString","includes","getMaxPoint","majorRank","minorRank","score","maxPoints","level","getNextLevel","getStartingPoint","getPreviousLevel","getAdjustedLevel","getTag","formatAdjustedScore","getLevelTag","LevelWithDelta","freeze","obj","formatAdjustedScoreWithTag","delta","RANK_DELTA","MODE_DELTA","calculateDeltaPoint","rank","includePenalty","result","ceil","getPenaltyPoint","PlayerMetadata","calculateExpectedGamePoint","metadata","rankDeltaPoints","rank_avg_score","rankWeightedPoints","point","rank_rates","expectedGamePoint","reduce","b","estimateStableLevel","lastPositiveLevel","abs","isAllowedMode","prevLevel","estimateStableLevel2","toFixed","GameRecord","getRankIndexByPlayer","rec","player","playerId","accountId","sortedPlayers","players","index","sort","i","getPlayerRankLabel","getPlayerRankColor","encodeAccountId","t","formatFullStartTime","startTime","getRecordLink","trailer","parseInt","uuid","requestAnimationFrame","window","dispatchEvent","UIEvent","setTimeout","scrollToTop","scrollTo","formatPercent","NOT_FINISHED","notFinished","useAsync","maybePromise","fulfilledValue","setFulfilledValue","cancelled","then","useAsyncFactory","factory","deps","useMemo","Loading","size","parseOptionalDate","s","defaultValue","ModelBuilders","params","startDate","endDate","selectedMode","version","listing","isValid","startOf","valueOf","searchText","search","RouteSync","view","useParams","useModel","model","updateModel","useLocation","state","pendingRouteUpdate","modelResult","newModel","Model","toPlain","newPath","generatePath","fromPlain","DEFAULT_DATE","FilterPanel","updateSearchTextFromEvent","setMode","setDate","playerSearchCache","NUM_RESULTS_SHOWN","NUM_FETCH","normalizeName","toLowerCase","trim","PlayerSearchResult","setVersion","cachedResult","prefix","normalizedPrefix","isExactMatch","slice","findRawResultFromCache","mayHaveMore","filteredPlayers","forEach","nickname","push","isLoading","debounceToken","searchPlayer","Date","getTime","clearTimeout","generatePlayerPathById","PlayerSearch","PlayerDetails","GameRecordTable","PLAYER_PATH","PATH","genPath","Routes","exact","showFullTime","showStartEnd","FormRow","inline","MODE_CHECKBOXES","String","ModeSelector","unshift","ListingDataLoader","_date","skip","limit","cacheTag","PlayerDataLoader","_playerId","_startDate","_endDate","_mode","_getDatePath","_getParams","stats","extended_stats","extendedStats","DataProviderImpl","itemsPerChunk","_loader","_metadata","_countPromise","_chunks","_itemsPerChunk","_filterPredicate","_filteredIndices","_filterResultCache","predicate","updateFilteredIndices","getMetadataSync","count","numShownItems","numLoadedItems","indices","chunk","game","_triggerFullLoad","getCount","getCountMaybeSync","getMetadata","console","log","Error","resolve","mappedIndex","_mapItemIndex","chunkNumber","skipPreload","innerIndex","_getChunk","preload","requestedIndex","reversed","chunkIndex","_loadChunk","numChunks","warn","getRecords","ListingDataProvider","create","PlayerDataProvider","endOf","loadingPlaceholder","DUMMY_DATA_ADAPTER","noop","DataAdapter","provider","onDataUpdate","_provider","_onDataUpdate","_triggeredRequest","promise","_callHook","catch","isError","maybeCount","_installHook","getUnfilteredCountSync","isItemLoaded","hook","DataAdapterContext","createContext","useDataAdapter","useContext","Consumer","DataAdapterProvider","dataProviders","searchPredicate","memoFunc","memoDeps","needPredicate","modeId","some","indexOf","usePredicate","dataProvider","getProviderKey","createProvider","dataAdapter","setDataAdapter","refreshDataAdapter","removeExtraParams","setFilterPredicate","adapter","cancelUpdateHook","setUpdateHook","Provider","ScrollerContext","useScrollerProps","Scroller","scrollerProps","DEFAULT_MODEL","ModelContext","isSameDateValue","d1","d2","isSame","ModelProvider","useReducer","oldModel","newProps","isChanged","normalizeUpdate","encodeURIComponent","getDeltaRanking","timespan"],"mappings":"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","file":"static/js/main.a0b756af.chunk.js","sourcesContent":["export const DATA_ROOT = \"https://ak-data-2.sapk.ch/\";\nconst API_ROOT_PROD = `${DATA_ROOT}api/`;\nconst API_ROOT_TEST = `${DATA_ROOT}api-test/`;\nexport const API_ROOT = process.env.NODE_ENV === \"development\" ? API_ROOT_TEST : API_ROOT_PROD;\n","import { API_ROOT } from \"./constants\";\n\nlet onMaintenance: (msg: string) => void = () => {};\n\nexport function setMaintenanceHandler(handler: (msg: string) => void) {\n  onMaintenance = handler;\n}\n\nexport async function apiGet<T>(path: string) {\n  const resp = await fetch(API_ROOT + path);\n  if (!resp.ok) {\n    throw resp;\n  }\n  const data = await resp.json();\n  if (data.maintenance) {\n    onMaintenance(data.maintenance);\n    return new Promise(() => {}) as Promise<T>; // Freeze all other components\n  }\n  return data as T;\n}\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const Container = ({ title = undefined, children = undefined as ReactNode, fluid = false }) => (\r\n  <div className={`my-5 container${fluid ? \"-fluid\" : \"\"}`}>\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-12\">\r\n        {title && <h2 className=\"mb-4\">{title}</h2>}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import { useState, useEffect, ReactNode } from \"react\";\r\nimport React from \"react\";\r\nimport { ReactComponentLike } from \"prop-types\";\r\nimport { triggerRelayout } from \"../../utils/index\";\r\n\r\nexport function Alert({\r\n  className = \"\",\r\n  type = \"info\",\r\n  container = React.Fragment as ReactComponentLike,\r\n  stateName = \"\",\r\n  closable = true,\r\n  children = undefined as ReactNode\r\n}) {\r\n  const stateKey = `alertState_${stateName}`;\r\n  const [closed, setClosed] = useState(() => stateName && !!localStorage.getItem(stateKey));\r\n  useEffect(() => {\r\n    if (stateName && closed) {\r\n      localStorage.setItem(stateKey, \"true\");\r\n    }\r\n  }, [closed, stateName, stateKey]);\r\n  if (closed && closable) {\r\n    return null;\r\n  }\r\n  const Cont = container;\r\n  return (\r\n    <Cont>\r\n      <div className={`alert alert-${type} alert-dismissible fade show ${className}`} role=\"alert\">\r\n        {children}\r\n        {closable && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            onClick={event => {\r\n              event.preventDefault();\r\n              setClosed(true);\r\n              triggerRelayout();\r\n            }}\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </Cont>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { Alert } from \"../misc/alert\";\r\n\r\nexport function AppHeader() {\r\n  return (\r\n    <Alert container={Container} stateName=\"topNote\">\r\n      <h4>说明</h4>\r\n      <ul>\r\n        <li>本页面数据由第三方维护，不能绝对保证完整和正确，信息仅供参考，请勿用于不良用途。</li>\r\n        <li>记录包含雀魂国服四人半庄段位战玉之间及王座之间的牌谱。</li>\r\n        <li>对局数据收集从 2019 年 8 月 23 日开始，之前的对局已无法获取。</li>\r\n        <li>\r\n          正常情况下全部对局都会被记录，但不排除因网络问题遗漏部分对局的情况。另 2019 年 10 月 10 日前因程序 Bug\r\n          每天晚间可能遗漏掉 10% ~ 20% 的对局，此 Bug 目前已经修复。\r\n        </li>\r\n        <li>页面不是实时更新，对局一般会在结束后数分钟至数小时内出现。</li>\r\n        <li>\r\n          如有问题或建议，请戳 <a href=\"mailto:i@sapika.ch\">SAPikachu (i@sapika.ch)</a> 或{\" \"}\r\n          <a href=\"https://github.com/SAPikachu/amae-koromo/\">提交 Issue</a>。\r\n        </li>\r\n      </ul>\r\n    </Alert>\r\n  );\r\n}\r\n","import * as React from \"react\";\nimport { useState } from \"react\";\n\nimport { Alert } from \"../misc/alert\";\nimport { Container } from \"../layout/container\";\nimport { setMaintenanceHandler } from \"../../data/source/api\";\n\nexport function MaintenanceHandler({ children }: { children: React.ReactElement }): React.ReactElement {\n  const [msg, setMsg] = useState(\"\");\n  setMaintenanceHandler(setMsg);\n  if (!msg) {\n    return children;\n  }\n  return (\n    <Alert container={Container} closable={false}>\n      <h4>临时维护公告</h4>\n      <p>{msg}</p>\n    </Alert>\n  );\n}\n","import React from \"react\";\nimport { Location } from \"history\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { TITLE_PREFIX } from \"../../utils/constants\";\nimport { useState } from \"react\";\n\nfunction isActive(match: any, location: Location): boolean {\n  if (!match) {\n    return false;\n  }\n  return !location.pathname.startsWith(\"/ranking\");\n}\n\nexport default function Navbar() {\n  const [mobileVisible, setMobileVisible] = useState(false);\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n      <div className=\"container\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          {TITLE_PREFIX}\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n          onClick={() => setMobileVisible(!mobileVisible)}\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div\n          className={`collapse navbar-collapse justify-content-end ${mobileVisible ? \"\" : \"d-none\"} d-lg-block`}\n          id=\"navbarNavAltMarkup\"\n        >\n          <div className=\"navbar-nav\">\n            <NavLink className=\"nav-item nav-link\" activeClassName=\"active\" to=\"/\" isActive={isActive}>\n              主页\n            </NavLink>\n            <NavLink className=\"nav-item nav-link\" activeClassName=\"active\" to=\"/ranking\">\n              排行榜\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","import React from \"react\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Loadable from \"react-loadable\";\nimport Scroller from \"../misc/scroller\";\n\nimport { Container } from \"../layout\";\nimport { AppHeader } from \"./appHeader\";\nimport GameRecords from \"../gameRecords\";\nimport { TITLE_PREFIX, CANONICAL_DOMAIN } from \"../../utils/constants\";\nimport { MaintenanceHandler } from \"./maintenance\";\nimport Navbar from \"./navbar\";\n\nconst Helmet = Loadable({\n  loader: () => import(\"react-helmet\"),\n  loading: () => <></>\n});\nconst Ranking = Loadable({\n  loader: () => import(\"../ranking\"),\n  loading: () => <></>\n});\n\nfunction App() {\n  return (\n    <Router>\n      <Helmet>\n        <title>{TITLE_PREFIX}</title>\n        <link rel=\"canonical\" href={`https://${CANONICAL_DOMAIN}/`} />\n      </Helmet>\n      <Navbar />\n      <MaintenanceHandler>\n        <Scroller>\n          <AppHeader />\n          <Container>\n            <Switch>\n              <Route path=\"/ranking\">\n                <Ranking />\n              </Route>\n              <Route path=\"/\">\n                <GameRecords />\n              </Route>\n            </Switch>\n          </Container>\n        </Scroller>\n      </MaintenanceHandler>\n    </Router>\n  );\n}\nexport default App;\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"./styles/bootstrap-custom.scss\";\nimport \"./styles/styles.scss\";\n\nimport App from \"./components/app\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n","import dayjs from \"dayjs\";\r\n\r\nexport const TITLE_PREFIX = \"雀魂牌谱屋\";\r\nexport const DATE_MIN = dayjs(\"2019-08-23\", \"YYYY-MM-DD\");\r\nexport const CANONICAL_DOMAIN = \"amae-koromo.sapk.ch\";","import React from \"react\";\r\n\r\nexport interface CheckboxItem {\r\n  key: string;\r\n  label: string;\r\n}\r\n\r\ntype CommonGroupParams = {\r\n  items: CheckboxItem[];\r\n  groupKey: string;\r\n};\r\ntype CheckboxGroupParams = CommonGroupParams & {\r\n  type: \"checkbox\";\r\n  selectedItemKeys: Set<string> | null;\r\n  onChange: (selectedItemKeys: Set<string>) => void;\r\n};\r\ntype RadioGroupParams = CommonGroupParams & {\r\n  type: \"radio\";\r\n  selectedItemKey: string;\r\n  onChange: (selectedItemKey: string) => void;\r\n};\r\n\r\nexport function CheckboxGroup(\r\n  props: CheckboxGroupParams | RadioGroupParams = {\r\n    type: \"checkbox\",\r\n    items: [],\r\n    groupKey: \"default\",\r\n    selectedItemKeys: null,\r\n    onChange: () => {}\r\n  }\r\n) {\r\n  const { type, items, groupKey } = props;\r\n  const { setSelected, isChecked } = (() => {\r\n    if (props.type === \"checkbox\") {\r\n      const { selectedItemKeys, onChange } = props;\r\n      return {\r\n        setSelected(key: string, isSelected: boolean) {\r\n          if (isSelected && (!selectedItemKeys || selectedItemKeys.has(key))) {\r\n            return;\r\n          }\r\n          if (!isSelected && selectedItemKeys && !selectedItemKeys.has(key)) {\r\n            return;\r\n          }\r\n          const newSet = new Set(selectedItemKeys || items.map(x => x.key));\r\n          if (isSelected) {\r\n            newSet.add(key);\r\n          } else {\r\n            newSet.delete(key);\r\n          }\r\n          onChange(newSet);\r\n        },\r\n        isChecked: (key: string) => !selectedItemKeys || selectedItemKeys.has(key)\r\n      };\r\n    } else {\r\n      const { selectedItemKey, onChange } = props;\r\n      return {\r\n        setSelected(key: string, isSelected: boolean) {\r\n          if (!isSelected) {\r\n            return;\r\n          }\r\n          onChange(key);\r\n        },\r\n        isChecked: (key: string) => selectedItemKey === key\r\n      };\r\n    }\r\n  })();\r\n  return (\r\n    <React.Fragment>\r\n      {items.map(item => (\r\n        <div className=\"form-check form-check-inline\" key={item.key}>\r\n          <input\r\n            className=\"form-check-input\"\r\n            type={type}\r\n            id={`CG_${groupKey}_${item.key}`}\r\n            name={`CG_${groupKey}_${item.key}`}\r\n            value={item.key}\r\n            checked={isChecked(item.key)}\r\n            onChange={event => setSelected(item.key, event.currentTarget.checked)}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor={`CG_${groupKey}_${item.key}`}>\r\n            {item.label}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport dayjs from \"dayjs\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport function DatePicker({\r\n  date = dayjs() as dayjs.ConfigType,\r\n  onChange = (() => {}) as (_: dayjs.Dayjs) => void,\r\n  className = \"\",\r\n  min = 0 as dayjs.ConfigType,\r\n  max = dayjs() as dayjs.ConfigType\r\n}) {\r\n  const handleChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => onChange(dayjs(e.currentTarget.value, \"YYYY-MM-DD\")),\r\n    [onChange]\r\n  );\r\n  return (\r\n    <input\r\n      className={className}\r\n      type=\"date\"\r\n      value={dayjs(date).format(\"YYYY-MM-DD\")}\r\n      min={min ? dayjs(min).format(\"YYYY-MM-DD\") : undefined}\r\n      max={max ? dayjs(max).format(\"YYYY-MM-DD\") : undefined}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n","export * from \"./checkboxGroup\";\r\nexport * from \"./datePicker\";\r\nexport * from \"./formRow\";\r\n","export const PLAYER_RANKS = \"初士杰豪圣魂\";\nexport const RANK_LABELS = [\"一位\", \"二位\", \"三位\", \"四位\"];\nexport const RANK_COLORS = [\"#28a745\", \"#17a2b8\", \"#6c757d\", \"#dc3545\"];\n","export enum GameMode {\n  王座 = 16,\n  玉 = 12\n}\nexport const NUMBER_OF_GAME_MODE = Object.keys(GameMode).filter(\n  x => typeof GameMode[x as keyof typeof GameMode] === \"number\"\n).length;\n","import { GameMode } from \"./gameMode\";\nimport { PLAYER_RANKS } from \"./constants\";\n\nconst LEVEL_MAX_POINTS = [20, 80, 200, 600, 800, 1000, 1200, 1400, 2000, 2800, 3200, 3600, 4000, 6000, 9000];\nconst LEVEL_PENALTY = [0, 0, 0, 20, 40, 60, 80, 100, 120, 165, 180, 195, 210, 225, 240, 255];\n\nconst LEVEL_ALLOWED_MODES: { [key: string]: GameMode[] } = {\n  \"1\": [],\n  \"2\": [],\n  \"3\": [],\n  \"4\": [GameMode.玉],\n  \"5\": [GameMode.玉, GameMode.王座],\n  \"6\": [GameMode.王座]\n};\n\nexport class Level {\n  _majorRank: number;\n  _minorRank: number;\n  constructor(levelId: number) {\n    const realId = levelId % 10000;\n    this._majorRank = Math.floor(realId / 100);\n    this._minorRank = realId % 100;\n  }\n  isSameMajorRank(other: Level): boolean {\n    return this._majorRank === other._majorRank;\n  }\n  isSame(other: Level): boolean {\n    return this._majorRank === other._majorRank && this._minorRank === other._minorRank;\n  }\n  isAllowedMode(mode: GameMode): boolean {\n    return LEVEL_ALLOWED_MODES[this._majorRank.toString() as keyof typeof LEVEL_ALLOWED_MODES].includes(mode);\n  }\n  getTag(): string {\n    const label = PLAYER_RANKS[this._majorRank - 1];\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return label;\n    }\n    return label + this._minorRank;\n  }\n  getMaxPoint(): number {\n    return LEVEL_MAX_POINTS[(this._majorRank - 1) * 3 + this._minorRank - 1];\n  }\n  getPenaltyPoint(): number {\n    return LEVEL_PENALTY[(this._majorRank - 1) * 3 + this._minorRank - 1];\n  }\n  getStartingPoint(): number {\n    if (this._majorRank === 1) {\n      return 0;\n    }\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return 10000;\n    }\n    return this.getMaxPoint() / 2;\n  }\n  getNextLevel(): Level {\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return this;\n    }\n    let majorRank = this._majorRank;\n    let minorRank = this._minorRank + 1;\n    if (minorRank > 3) {\n      majorRank++;\n      minorRank = 1;\n    }\n    return new Level(majorRank * 100 + minorRank);\n  }\n  getPreviousLevel(): Level {\n    if (this._majorRank === 1 && this._minorRank === 1) {\n      return this;\n    }\n    let majorRank = this._majorRank;\n    let minorRank = this._minorRank - 1;\n    if (minorRank < 1) {\n      majorRank--;\n      minorRank = 3;\n    }\n    return new Level(majorRank * 100 + minorRank);\n  }\n  getAdjustedLevel(score: number): Level {\n    let maxPoints = this.getMaxPoint();\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let level: Level = this;\n    if (maxPoints && score >= maxPoints) {\n      level = this.getNextLevel();\n      maxPoints = level.getMaxPoint();\n      score = level.getStartingPoint();\n    } else if (score < 0) {\n      if (!maxPoints || level._majorRank === 1 || (level._majorRank === 2 && level._minorRank === 1)) {\n        score = 0;\n      } else {\n        level = this.getPreviousLevel();\n        maxPoints = level.getMaxPoint();\n        score = level.getStartingPoint();\n      }\n    }\n    return level;\n  }\n  formatAdjustedScoreWithTag(score: number) {\n    const level = this.getAdjustedLevel(score);\n    return `${level.getTag()} - ${this.formatAdjustedScore(score)}`;\n  }\n  formatAdjustedScore(score: number) {\n    const level = this.getAdjustedLevel(score);\n    return `${level === this ? Math.max(score, 0) : level.getStartingPoint()}${\n      level.getMaxPoint() ? \"/\" + level.getMaxPoint() : \"\"\n    }`;\n  }\n}\nexport function getLevelTag(levelId: number) {\n  return new Level(levelId).getTag();\n}\nexport type LevelWithDelta = {\n  id: number;\n  score: number;\n  delta: number;\n};\nexport const LevelWithDelta = Object.freeze({\n  format(obj: LevelWithDelta): string {\n    return new Level(obj.id).formatAdjustedScoreWithTag(obj.score + obj.delta);\n  },\n  formatAdjustedScore(obj: LevelWithDelta): string {\n    return new Level(obj.id).formatAdjustedScore(obj.score + obj.delta);\n  },\n  getTag(obj: LevelWithDelta): string {\n    return LevelWithDelta.getAdjustedLevel(obj).getTag();\n  },\n  getAdjustedLevel(obj: LevelWithDelta): Level {\n    return new Level(obj.id).getAdjustedLevel(obj.score + obj.delta);\n  }\n});\n","import { LevelWithDelta, Level } from \"./level\";\nimport { GameMode } from \"./gameMode\";\n\nconst RANK_DELTA = [15, 5, -5, -15];\nconst MODE_DELTA = {\n  \"12\": [110, 55, 0, 0],\n  \"16\": [120, 60, 0, 0]\n};\n\nexport interface PlayerExtendedStats {\n  id: number;\n  和牌率: number;\n  自摸率: number;\n  默听率: number;\n  放铳率: number;\n  副露率: number;\n  立直率: number;\n  平均打点: number;\n  最大连庄: number;\n  和了巡数: number;\n  平均铳点: number;\n  流局率: number;\n  流听率: number;\n}\nexport interface Metadata {\n  count: number;\n}\nexport interface PlayerMetadataLite extends Metadata {\n  id: number;\n  nickname: string;\n  level: LevelWithDelta;\n}\nexport interface PlayerMetadata extends PlayerMetadataLite {\n  rank_rates: [number, number, number, number];\n  rank_avg_score: [number, number, number, number];\n  avg_rank: number;\n  negative_rate: number;\n  extended_stats?: PlayerExtendedStats | Promise<PlayerExtendedStats>;\n}\n\nfunction calculateDeltaPoint(score: number, rank: number, mode: GameMode, level: Level, includePenalty = true): number {\n  let result =\n    Math.ceil((score - 25000) / 1000 + RANK_DELTA[rank]) + MODE_DELTA[mode.toString() as keyof typeof MODE_DELTA][rank];\n  if (rank === 3 && includePenalty) {\n    result -= level.getPenaltyPoint();\n  }\n  /*\n  console.log(\n    `calculateDeltaPoint: score=${score}, rank=${rank}, mode=${mode}, level=${level.getTag()}, result=${result}`\n  );\n  */\n  return result;\n}\n\nexport const PlayerMetadata = Object.freeze({\n  calculateExpectedGamePoint(metadata: PlayerMetadata, mode: GameMode, level?: Level, includePenalty = true): number {\n    const rankDeltaPoints = metadata.rank_avg_score.map((score, rank) =>\n      calculateDeltaPoint(score, rank, mode, level || LevelWithDelta.getAdjustedLevel(metadata.level), includePenalty)\n    );\n    const rankWeightedPoints = rankDeltaPoints.map((point, rank) => point * metadata.rank_rates[rank]);\n    const expectedGamePoint = rankWeightedPoints.reduce((a, b) => a + b, 0);\n    /*\n    console.log(rankDeltaPoints);\n    console.log(rankWeightedPoints);\n    console.log(\n      `calculateExpectedGamePoint: mode=${mode}, level=${level ? level.getTag() : \"\"}, result=${expectedGamePoint}`\n    );\n    */\n    return expectedGamePoint;\n  },\n  estimateStableLevel(metadata: PlayerMetadata, mode: GameMode): string {\n    let level = new Level(metadata.level.id);\n    let lastPositiveLevel: Level | undefined = undefined;\n    for (;;) {\n      const expectedGamePoint = PlayerMetadata.calculateExpectedGamePoint(metadata, mode, level);\n      if (Math.abs(expectedGamePoint) < 0.001) {\n        return level.getTag();\n      }\n      if (expectedGamePoint >= 0) {\n        lastPositiveLevel = level;\n        level = level.getNextLevel();\n        if (!level.isAllowedMode(mode)) {\n          return lastPositiveLevel.getTag() + \"+\";\n        }\n        if (level === lastPositiveLevel) {\n          return level.getTag() + \"+\";\n        }\n      } else {\n        if (lastPositiveLevel) {\n          return lastPositiveLevel.getTag();\n        }\n        break;\n      }\n    }\n    if (!level.getMaxPoint()) {\n      // 魂天不会掉段\n      return level.getTag() + \"-\";\n    }\n    for (;;) {\n      const prevLevel = level.getPreviousLevel();\n      if (!prevLevel.isAllowedMode(mode) || prevLevel === level) {\n        return level.getTag() + \"-\";\n      }\n      level = prevLevel;\n      const expectedGamePoint = PlayerMetadata.calculateExpectedGamePoint(metadata, mode, level);\n      if (expectedGamePoint + 0.001 >= 0) {\n        return level.getTag();\n      }\n    }\n  },\n  estimateStableLevel2(metadata: PlayerMetadata, mode: GameMode): string {\n    if (!metadata.rank_rates[3]) {\n      return \"\";\n    }\n    const estimatedPoints = this.calculateExpectedGamePoint(metadata, mode, undefined, false);\n    const result = estimatedPoints / (metadata.rank_rates[3] * 15) - 10;\n    if (result >= 7) {\n      return `魂${(result - 6).toFixed(2)}`;\n    }\n    if (result >= 4) {\n      return `圣${(result - 3).toFixed(2)}`;\n    }\n    return `豪${result.toFixed(2)}`;\n  }\n});\n","import dayjs from \"dayjs\";\n\nimport { GameMode } from \"./gameMode\";\nimport { RANK_LABELS, RANK_COLORS } from \"./constants\";\n\nexport interface PlayerRecord {\n  accountId: number;\n  nickname: string;\n  level: number;\n  score: number;\n}\nexport interface GameRecord {\n  modeId: GameMode;\n  uuid: string;\n  startTime: number;\n  endTime: number;\n  players: PlayerRecord[];\n}\nexport const GameRecord = Object.freeze({\n  getRankIndexByPlayer(rec: GameRecord, player: number | string | PlayerRecord): number {\n    const playerId = (typeof player === \"object\" ? player.accountId : player).toString();\n    const sortedPlayers = rec.players.map((player, index) => ({ player, index }));\n    sortedPlayers.sort((a, b) => 5 - b.index + b.player.score - (5 - a.index + a.player.score));\n    for (let i = 0; i < sortedPlayers.length; i++) {\n      if (sortedPlayers[i].player.accountId.toString() === playerId) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  getPlayerRankLabel(rec: GameRecord, player: number | string | PlayerRecord): string {\n    return RANK_LABELS[GameRecord.getRankIndexByPlayer(rec, player)] || \"\";\n  },\n  getPlayerRankColor(rec: GameRecord, player: number | string | PlayerRecord): string {\n    return RANK_COLORS[GameRecord.getRankIndexByPlayer(rec, player)];\n  },\n  encodeAccountId: (t: number) => 1358437 + ((7 * t + 1117113) ^ 86216345),\n  formatFullStartTime: (rec: GameRecord) => dayjs(rec.startTime * 1000).format(\"YYYY/M/D HH:mm\"),\n  getRecordLink(rec: GameRecord, player?: PlayerRecord | number | string) {\n    const playerId = typeof player === \"object\" ? player.accountId : player;\n    const trailer = playerId\n      ? `_a${GameRecord.encodeAccountId(typeof playerId === \"number\" ? playerId : parseInt(playerId))}`\n      : \"\";\n    return `https://www.majsoul.com/1/?paipu=${rec.uuid}${trailer}`;\n  }\n});\n","export * from \"./constants\";\nexport * from \"./gameMode\";\nexport * from \"./level\";\nexport * from \"./metadata\";\nexport * from \"./record\";\n","import { useState, useEffect, useMemo } from \"react\";\nexport function triggerRelayout() {\n  requestAnimationFrame(() => window.dispatchEvent(new UIEvent(\"resize\")));\n  setTimeout(function () {\n    window.dispatchEvent(new UIEvent(\"resize\"));\n  }, 200);\n}\nexport function scrollToTop() {\n  window.scrollTo(0, 0);\n  requestAnimationFrame(() => window.scrollTo(0, 0));\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const formatPercent = (x: any) => (x > 0 ? `${(x * 100).toFixed(2)}%` : \"\");\n\ntype NotFinished = { notFinished: string };\nconst NOT_FINISHED = { notFinished: \"yes\" };\n\nexport function useAsync<T>(maybePromise: T | Promise<T>): T | undefined {\n  const [fulfilledValue, setFulfilledValue] = useState<T | NotFinished>(NOT_FINISHED);\n  useEffect(() => {\n    let cancelled = false;\n    if (maybePromise instanceof Promise) {\n      setFulfilledValue(NOT_FINISHED);\n      maybePromise.then(result => {\n        if (cancelled) {\n          return;\n        }\n        setFulfilledValue(result);\n      });\n    } else {\n      setFulfilledValue(maybePromise);\n    }\n    return () => { cancelled = true; };\n  }, [maybePromise]);\n  if (fulfilledValue !== NOT_FINISHED) {\n    return fulfilledValue as T;\n  }\n  return undefined;\n}\nexport function useAsyncFactory<T>(factory: () => Promise<T>, deps: readonly any[]): T | undefined {\n  const promise = useMemo(factory, deps);\n  return useAsync(promise);\n}","import React from \"react\";\n\nexport default function Loading({ size = \"normal\" }: { size?: \"normal\" | \"small\" }) {\n  return (\n    <div className={`d-flex justify-content-center m-${size === \"normal\" ? 5 : 1}`}>\n      <div className={`spinner-border ${size === \"normal\" ? \"\" : \"spinner-border-sm\"}`} role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport dayjs from \"dayjs\";\n\nimport { useParams, useLocation, Redirect } from \"react-router\";\nimport { useModel, Model, ModelPlain } from \"./model\";\nimport { generatePath } from \"./routes\";\nimport { useEffect } from \"react\";\nimport { scrollToTop, triggerRelayout } from \"../../utils/index\";\n\ntype ListingRouteParams = {\n  date?: string;\n  mode?: string;\n  search?: string;\n};\n\ntype PlayerRouteParams = {\n  id: string;\n  startDate?: string;\n  endDate?: string;\n  mode?: string;\n};\n\ntype HistoryState = {\n  model: ModelPlain;\n  pathname: string;\n};\n\nfunction parseOptionalDate<T>(s: string | null | undefined, defaultValue: T): dayjs.Dayjs | T {\n  return s ? dayjs(s, \"YYYY-MM-DD\") : defaultValue;\n}\n\nconst ModelBuilders = {\n  player(params: PlayerRouteParams): Model | string {\n    return {\n      type: \"player\",\n      playerId: params.id,\n      startDate: parseOptionalDate(params.startDate, null),\n      endDate: parseOptionalDate(params.endDate, null),\n      selectedMode: params.mode || \"\",\n      version: 0\n    };\n  },\n  listing(params: ListingRouteParams): Model | string {\n    const date = parseOptionalDate(params.date, null);\n    if (date && !date.isValid()) {\n      return \"/\";\n    }\n    return {\n      type: undefined,\n      date: date ? date.startOf(\"day\").valueOf() : null,\n      selectedMode: params.mode || \"\",\n      searchText: params.search || \"\",\n      version: 0\n    };\n  }\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function RouteSync({ view }: { view: keyof typeof ModelBuilders }): React.FunctionComponentElement<any> {\n  const params = useParams();\n  const [model, updateModel] = useModel();\n  const location = useLocation<HistoryState>();\n  useEffect(triggerRelayout, [model.type]);\n  const state = location.state;\n  // console.log(params, model, location, state);\n  if (state && state.model.version === model.version) {\n    delete (model as Model).pendingRouteUpdate;\n    if (location.pathname !== state.pathname) {\n      return <Redirect to={{ pathname: state.pathname, state }} />;\n    }\n    return <></>;\n  }\n  if (!state) {\n    // Navigation\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const modelResult = ModelBuilders[view](params as any);\n    if (typeof modelResult === \"string\") {\n      return <Redirect to={modelResult} />;\n    }\n    const newModel: Model = {\n      ...modelResult,\n      version: model.version\n    };\n    updateModel(newModel);\n    scrollToTop();\n    return (\n      <Redirect\n        to={{ pathname: location.pathname, state: { pathname: location.pathname, model: Model.toPlain(newModel) } }}\n      />\n    );\n  }\n  if (model.pendingRouteUpdate) {\n    // Model updated\n    const newPath = generatePath(model);\n    delete (model as Model).pendingRouteUpdate; // Do not trigger update\n    return <Redirect to={{ pathname: newPath, state: { pathname: newPath, model: Model.toPlain(model) } }} />;\n  } else {\n    const restoredModel = Model.fromPlain(state.model);\n    updateModel(restoredModel);\n    return <></>;\n  }\n}\n","import { useCallback } from \"react\";\r\nimport React from \"react\";\r\n\r\nimport { FormRow, DatePicker } from \"../form\";\r\nimport { useModel } from \"./model\";\r\nimport dayjs from \"dayjs\";\r\nimport { DATE_MIN } from \"../../utils/constants\";\r\nimport { ModeSelector } from \"./modeSelector\";\r\n\r\nconst DEFAULT_DATE = dayjs().startOf(\"day\");\r\n\r\nexport function FilterPanel({ className = \"\" }) {\r\n  const [model, updateModel] = useModel();\r\n  const updateSearchTextFromEvent = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => updateModel({ searchText: e.currentTarget.value }),\r\n    [updateModel]\r\n  );\r\n  const setMode = useCallback((mode: string) => updateModel({ selectedMode: mode }), [updateModel]);\r\n  const setDate = useCallback((date: dayjs.ConfigType) => updateModel({ date }), [updateModel]);\r\n  if (model.type !== undefined) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={className}>\r\n      <FormRow title=\"日期\">\r\n        <DatePicker min={DATE_MIN} date={model.date || DEFAULT_DATE} onChange={setDate} className=\"form-control\" />\r\n      </FormRow>\r\n      <FormRow title=\"查找玩家\">\r\n        <input type=\"text\" className=\"form-control\" value={model.searchText} onChange={updateSearchTextFromEvent} />\r\n      </FormRow>\r\n      <FormRow>\r\n        <ModeSelector mode={model.selectedMode} onChange={setMode} />\r\n      </FormRow>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { useEffect, useState, useMemo } from \"react\";\n\nimport { useModel } from \"./model\";\nimport Loading from \"../misc/loading\";\nimport { PlayerMetadataLite, getLevelTag } from \"../../data/types\";\nimport { searchPlayer } from \"../../data/source/misc\";\nimport { Link } from \"react-router-dom\";\nimport { generatePlayerPathById } from \"./routes\";\n\nconst playerSearchCache = {} as { [prefix: string]: PlayerMetadataLite[] | Promise<PlayerMetadataLite[]> };\nconst NUM_RESULTS_SHOWN = 6;\nconst NUM_FETCH = 20;\n\nconst normalizeName = (s: string) => s.toLowerCase().trim();\n\nfunction findRawResultFromCache(prefix: string): { result: PlayerMetadataLite[]; isExactMatch: boolean } | null {\n  const normalizedPrefix = normalizeName(prefix);\n  prefix = normalizedPrefix;\n  while (prefix) {\n    const players = playerSearchCache[prefix];\n    if (!players || players instanceof Promise) {\n      prefix = prefix.slice(0, prefix.length - 1);\n      continue;\n    }\n    return {\n      isExactMatch: prefix === normalizedPrefix,\n      result: players\n    };\n  }\n  return null;\n}\n\nfunction PlayerSearchResult({ searchText }: { searchText: string }) {\n  const [version, setVersion] = useState(0);\n  const [players, isLoading, mayHaveMore] = useMemo(() => {\n    const cachedResult = findRawResultFromCache(searchText);\n    if (!cachedResult) {\n      return [[], true];\n    }\n    if (cachedResult.isExactMatch) {\n      return [cachedResult.result, false];\n    }\n    const normalizedPrefix = normalizeName(searchText);\n    let mayHaveMore = cachedResult.result.length >= NUM_FETCH;\n    const filteredPlayers = [] as PlayerMetadataLite[];\n    cachedResult.result.forEach(player => {\n      if (normalizeName(player.nickname).startsWith(normalizedPrefix)) {\n        filteredPlayers.push(player);\n      } else if (filteredPlayers.length) {\n        // Result covers all players who have the specified prefix\n        mayHaveMore = false;\n      }\n    });\n    return [filteredPlayers, mayHaveMore && filteredPlayers.length < NUM_RESULTS_SHOWN, mayHaveMore];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchText, version]);\n  useEffect(() => {\n    const prefix = normalizeName(searchText);\n    if (playerSearchCache[prefix]) {\n      return;\n    }\n    if (!isLoading) {\n      return;\n    }\n    let cancelled = false;\n    let debounceToken: NodeJS.Timeout | undefined = setTimeout(() => {\n      debounceToken = undefined;\n      if (cancelled) {\n        return;\n      }\n      if (playerSearchCache[prefix]) {\n        return;\n      }\n      playerSearchCache[prefix] = searchPlayer(prefix).then(function(players) {\n        playerSearchCache[prefix] = players;\n        if (!cancelled) {\n          setVersion(new Date().getTime());\n        }\n        return players;\n      });\n    }, 500);\n    return () => {\n      cancelled = true;\n      if (debounceToken) {\n        clearTimeout(debounceToken);\n      }\n    };\n  }, [searchText, isLoading]);\n  return (\n    <>\n      <h6 className=\"text-center mb-2\">玩家前缀搜索</h6>\n      <ul className=\"list-unstyled row mb-2\">\n        {players.slice(0, NUM_RESULTS_SHOWN).map(x => (\n          <li key={x.id} className=\"col-6\">\n            <Link to={generatePlayerPathById(x.id)}>\n              <span>\n                [{getLevelTag(x.level.id)}] {x.nickname}\n              </span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      {(isLoading && <Loading size=\"small\" />) ||\n        ((players.length > NUM_RESULTS_SHOWN || mayHaveMore) && (\n          <small className=\"d-block text-center text-muted\">（输入更长名字显示其它结果）</small>\n        ))}\n    </>\n  );\n}\n\nexport function PlayerSearch({ className = \"\" }) {\n  const [model] = useModel();\n  if (\"playerId\" in model || !model.searchText) {\n    return <></>;\n  }\n  return (\n    <div className={className}>\n      <PlayerSearchResult searchText={model.searchText} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Switch, Route, Redirect, generatePath as genPath } from \"react-router-dom\";\n\nimport { Model, ModelProvider } from \"./model\";\nimport dayjs from \"dayjs\";\nimport { RouteSync } from \"./routeSync\";\nimport { DataAdapterProvider } from \"./dataAdapterProvider\";\nimport { FilterPanel } from \"./filterPanel\";\nimport Loadable from \"react-loadable\";\nimport Loading from \"../misc/loading\";\nimport { PlayerSearch } from \"./playerSearch\";\nconst PlayerDetails = Loadable({\n  loader: () => import(\"./playerDetails\"),\n  loading: () => <Loading />\n});\nconst GameRecordTable = Loadable({\n  loader: () => import(\"./table\"),\n  loading: () => <Loading />\n});\n\nconst PLAYER_PATH = \"/player/:id/:mode([0-9]+)?/:startDate(\\\\d{4}-\\\\d{2}-\\\\d{2})?/:endDate(\\\\d{4}-\\\\d{2}-\\\\d{2})?\";\nconst PATH = \"/:date(\\\\d{4}-\\\\d{2}-\\\\d{2})/:mode([0-9]+)?/:search?\";\n\nexport function generatePath(model: Model): string {\n  if (model.type === \"player\") {\n    return genPath(PLAYER_PATH, {\n      id: model.playerId,\n      startDate: model.startDate ? dayjs(model.startDate).format(\"YYYY-MM-DD\") : undefined,\n      endDate: model.endDate ? dayjs(model.endDate).format(\"YYYY-MM-DD\") : undefined,\n      mode: model.selectedMode || undefined\n    });\n  }\n  if (!model.selectedMode && !model.searchText && !model.date) {\n    return \"/\";\n  }\n  return genPath(PATH, {\n    date: dayjs(model.date || new Date()).format(\"YYYY-MM-DD\"),\n    mode: model.selectedMode || undefined,\n    search: model.searchText || undefined\n  });\n}\nexport function generatePlayerPathById(playerId: number | string): string {\n  return generatePath({\n    type: \"player\",\n    playerId: playerId.toString(),\n    startDate: null,\n    endDate: null,\n    selectedMode: \"\",\n    version: 0\n  });\n}\n\nfunction Routes() {\n  return (\n    <ModelProvider>\n      <DataAdapterProvider>\n        <Switch>\n          <Route exact path={PLAYER_PATH}>\n            <RouteSync view=\"player\" />\n            <PlayerDetails />\n            <GameRecordTable showFullTime showStartEnd={false} />\n          </Route>\n          <Route exact path={[\"/\", PATH]}>\n            <RouteSync view=\"listing\" />\n            <div className=\"row\">\n              <FilterPanel className=\"col\" />\n              <PlayerSearch className=\"col-12 col-sm-6 col-md-4\" />\n            </div>\n            <GameRecordTable />\n          </Route>\n          <Route>\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </DataAdapterProvider>\n    </ModelProvider>\n  );\n}\nexport default Routes;\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const FormRow = ({ title = \"\", inline = false, children = undefined as ReactNode }) => (\r\n  <div className=\"form-group row\">\r\n    <label className={`col-${inline ? \"lg\" : \"md\"}-2 col-form-label`}>{title}</label>\r\n    <div className={`col-${inline ? \"lg\" : \"md\"}-10 ${inline ? \"form-inline\" : \"\"}`}>{children}</div>\r\n  </div>\r\n);\r\n","import React from \"react\";\n\nimport { CheckboxGroup } from \"../form\";\nimport { GameMode } from \"../../data/types\";\n\nconst MODE_CHECKBOXES = Object.keys(GameMode)\n  .filter(x => typeof GameMode[x as keyof typeof GameMode] !== \"string\")\n  .map(x => ({\n    key: String(GameMode[x as keyof typeof GameMode]),\n    label: x\n  }));\nMODE_CHECKBOXES.unshift({\n  key: \"\",\n  label: \"全部\"\n});\n\nexport function ModeSelector({ mode, onChange }: { mode: string; onChange: (x: string) => void }) {\n  return (\n    <CheckboxGroup\n      type=\"radio\"\n      groupKey=\"ModeSelector\"\n      items={MODE_CHECKBOXES}\n      selectedItemKey={mode || \"\"}\n      onChange={onChange}\n    />\n  );\n}\n","/* eslint-disable @typescript-eslint/camelcase */\nimport dayjs from \"dayjs\";\n\nimport { GameRecord } from \"../../types/record\";\nimport { Metadata, PlayerMetadata, PlayerExtendedStats } from \"../../types/metadata\";\nimport { apiGet } from \"../api\";\n\nexport interface DataLoader<T extends Metadata> {\n  getMetadata(): Promise<T>;\n  getRecords(skip: number, limit: number, cacheTag?: string): Promise<GameRecord[]>;\n}\n\nexport class ListingDataLoader implements DataLoader<Metadata> {\n  _date: dayjs.Dayjs;\n  constructor(date: dayjs.ConfigType) {\n    this._date = dayjs(date).startOf(\"day\");\n  }\n  async getMetadata(): Promise<Metadata> {\n    return await apiGet<Metadata>(`count/${this._date.valueOf()}`);\n  }\n  async getRecords(skip: number, limit: number, cacheTag = \"\"): Promise<GameRecord[]> {\n    return await apiGet<GameRecord[]>(`games/${this._date.valueOf()}?skip=${skip}&limit=${limit}&tag=${cacheTag}`);\n  }\n}\n\nexport class PlayerDataLoader implements DataLoader<PlayerMetadata> {\n  _playerId: string;\n  _startDate?: dayjs.Dayjs;\n  _endDate?: dayjs.Dayjs;\n  _mode: string;\n  constructor(playerId: string, startDate?: dayjs.Dayjs, endDate?: dayjs.Dayjs, mode = \"\") {\n    this._playerId = playerId;\n    this._startDate = startDate;\n    this._endDate = endDate;\n    this._mode = mode;\n  }\n  _getDatePath(): string {\n    let result = \"\";\n    if (this._startDate) {\n      result += `/${this._startDate.valueOf()}`;\n      if (this._endDate) {\n        result += `/${this._endDate.valueOf()}`;\n      }\n    }\n    return result;\n  }\n  _getParams(): string {\n    return `${this._playerId}${this._getDatePath()}?mode=${this._mode}`;\n  }\n  async getMetadata(): Promise<PlayerMetadata> {\n    return await apiGet<PlayerMetadata>(`player_stats/${this._getParams()}`).then(stats => {\n      stats.extended_stats = apiGet<PlayerExtendedStats>(`player_extended_stats/${this._getParams()}`).then(\n        extendedStats => (stats.extended_stats = extendedStats)\n      );\n      return stats;\n    });\n  }\n  async getRecords(skip: number, limit: number, cacheTag = \"\"): Promise<GameRecord[]> {\n    return await apiGet<GameRecord[]>(\n      `player_records/${this._playerId}${this._getDatePath()}?skip=${skip}&limit=${limit}&mode=${\n        this._mode\n      }&tag=${cacheTag}`\n    );\n  }\n}\n","import dayjs from \"dayjs\";\n\nimport { GameRecord } from \"../../types/record\";\nimport { Metadata } from \"../../types/metadata\";\nimport { ListingDataLoader, PlayerDataLoader, DataLoader } from \"./loader\";\n\nexport type FilterPredicate = ((record: GameRecord) => boolean) | null;\nclass DataProviderImpl<\n  TLoader extends DataLoader<TMetadata>,\n  TMetadata extends Metadata = TLoader extends DataLoader<infer T> ? T : Metadata\n> {\n  _loader: TLoader;\n  _metadata: TMetadata | Promise<TMetadata> | null;\n  _countPromise: Promise<number> | null;\n  _chunks: (GameRecord[] | Promise<GameRecord[]>)[];\n  _itemsPerChunk: number;\n  _filterPredicate: FilterPredicate;\n  _filteredIndices: number[] | null;\n  _filterResultCache: { [uuid: string]: boolean };\n\n  constructor(loader: TLoader, itemsPerChunk = 100) {\n    this._loader = loader;\n    this._metadata = null;\n    this._countPromise = null;\n    this._chunks = [];\n    this._itemsPerChunk = itemsPerChunk;\n    this._filterPredicate = null;\n    this._filteredIndices = null;\n    this._filterResultCache = {};\n  }\n  setFilterPredicate(predicate: FilterPredicate) {\n    if (this._filterPredicate === predicate) {\n      return;\n    }\n    this._filterPredicate = predicate;\n    this._filterResultCache = {};\n    this.updateFilteredIndices();\n  }\n  updateFilteredIndices() {\n    this._filteredIndices = null;\n    if (!this._filterPredicate) {\n      return;\n    }\n    const metadata = this.getMetadataSync();\n    if (!metadata) {\n      return;\n    }\n    const count = metadata.count;\n    let numShownItems = 0;\n    let numLoadedItems = 0;\n    const indices = [];\n    for (let i = 0; i < count; i++) {\n      const chunk = this._chunks[Math.floor(i / this._itemsPerChunk)];\n      if (!chunk || chunk instanceof Promise) {\n        indices.push(i);\n        continue;\n      }\n      numLoadedItems++;\n      const game = chunk[i % this._itemsPerChunk];\n      let result = this._filterResultCache[game.uuid];\n      if (result === undefined) {\n        this._filterResultCache[game.uuid] = result = this._filterPredicate(game);\n      }\n      if (result) {\n        indices.push(i);\n        numShownItems++;\n      }\n    }\n    this._filteredIndices = indices;\n    if (numShownItems < 10 && numLoadedItems >= this._itemsPerChunk) {\n      this._triggerFullLoad();\n    }\n  }\n  getMetadataSync(): TMetadata | null {\n    return this._metadata && !(this._metadata instanceof Promise) ? this._metadata : null;\n  }\n  getCountMaybeSync(): number | Promise<number> {\n    const metadata = this.getMetadataSync();\n    if (metadata) {\n      return this._filteredIndices ? this._filteredIndices.length : metadata.count;\n    }\n    return this.getCount();\n  }\n  async getCount(): Promise<number> {\n    const metadata = this.getMetadataSync();\n    if (metadata) {\n      return this.getCountMaybeSync();\n    }\n    if (!this._metadata) {\n      this._metadata = this._loader.getMetadata().then(metadata => {\n        if (!metadata) {\n          console.log(\"No metadata returned\");\n          throw new Error(\"No metadata returned\");\n        }\n        this._metadata = metadata;\n        this.updateFilteredIndices();\n        this._countPromise = null;\n        return metadata;\n      });\n    }\n    if (this._countPromise) {\n      return this._countPromise;\n    }\n    this._countPromise = Promise.resolve(this._metadata)\n      .then(() => new Promise(resolve => setTimeout(resolve, 100)))\n      .then(() => this.getCountMaybeSync());\n    return this._countPromise;\n  }\n  getUnfilteredCountSync(): number | null {\n    const metadata = this.getMetadataSync();\n    if (!metadata) {\n      return null;\n    }\n    return metadata.count;\n  }\n  isItemLoaded(index: number): boolean {\n    const mappedIndex = this._mapItemIndex(index);\n    if (mappedIndex === null) {\n      return false;\n    }\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\n    return !!this._chunks[chunkNumber] && !(this._chunks[chunkNumber] instanceof Promise);\n  }\n  getItem(index: number, skipPreload = false): GameRecord | Promise<GameRecord | null> {\n    const mappedIndex = this._mapItemIndex(index);\n    if (mappedIndex === null) {\n      return this.getCount().then(count => {\n        if (index > count - 1 || this._mapItemIndex(index) === null) {\n          return null;\n        }\n        return this.getItem(index);\n      });\n    }\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\n    const innerIndex = mappedIndex % this._itemsPerChunk;\n    const chunk = this._chunks[chunkNumber];\n    if (!chunk || chunk instanceof Promise) {\n      return this._getChunk(chunkNumber).then(chunk => chunk[innerIndex]);\n    }\n    if (!skipPreload && !this._filteredIndices) {\n      this.preload(index + this._itemsPerChunk);\n    }\n    return chunk[innerIndex];\n  }\n  preload(index: number) {\n    const count = this.getCountMaybeSync();\n    if (count instanceof Promise) {\n      return;\n    }\n    if (index >= count) {\n      return;\n    }\n    this.getItem(index, true);\n  }\n  _mapItemIndex(requestedIndex: number): number | null {\n    const count = this.getCountMaybeSync();\n    if (count instanceof Promise) {\n      return null;\n    }\n    if (requestedIndex < 0) {\n      return null;\n    }\n    // Descending order\n    const reversed = count - requestedIndex - 1;\n    if (reversed < 0) {\n      return null;\n    }\n    return this._filteredIndices ? this._filteredIndices[reversed] : reversed;\n  }\n  async _getChunk(chunkIndex: number): Promise<GameRecord[]> {\n    if (!this._chunks[chunkIndex]) {\n      this._chunks[chunkIndex] = this._loadChunk(chunkIndex);\n    }\n    return this._chunks[chunkIndex];\n  }\n  _triggerFullLoad() {\n    const count = this.getCountMaybeSync();\n    if (typeof count !== \"number\") {\n      return;\n    }\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\n    for (let i = 0; i < numChunks; i++) {\n      if (this._chunks[i]) {\n        continue;\n      }\n      this._getChunk(i);\n    }\n  }\n  async _loadChunk(chunkIndex: number): Promise<GameRecord[]> {\n    const count = await this.getCount();\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\n    if (!numChunks) {\n      return [];\n    }\n    if (chunkIndex >= numChunks) {\n      console.warn(`Loading out-of-index chunk: ${chunkIndex}, number of items: ${count}`);\n      return [];\n    }\n    const chunk = await this._loader.getRecords(\n      this._itemsPerChunk * chunkIndex,\n      this._itemsPerChunk,\n      chunkIndex === numChunks - 1 ? count.toString() : \"\"\n    );\n    if (chunk.length < this._itemsPerChunk && chunkIndex < numChunks - 1) {\n      console.warn(\"Unexpected number of items in chunk:\", chunk.length);\n    }\n    this._chunks[chunkIndex] = chunk;\n    this.updateFilteredIndices();\n    return chunk;\n  }\n}\n\nexport type ListingDataProvider = DataProviderImpl<ListingDataLoader>;\nexport const ListingDataProvider = Object.freeze({\n  create(date: dayjs.ConfigType): ListingDataProvider {\n    return new DataProviderImpl<ListingDataLoader>(new ListingDataLoader(date));\n  }\n});\nexport type PlayerDataProvider = DataProviderImpl<PlayerDataLoader>;\nexport const PlayerDataProvider = Object.freeze({\n  create(\n    playerId: string,\n    startDate: dayjs.ConfigType | null,\n    endDate: dayjs.ConfigType | null,\n    mode: string\n  ): PlayerDataProvider {\n    return new DataProviderImpl<PlayerDataLoader>(\n      new PlayerDataLoader(\n        playerId,\n        startDate ? dayjs(startDate).startOf(\"day\") : undefined,\n        endDate ? dayjs(endDate).endOf(\"day\") : undefined,\n        mode\n      )\n    );\n  }\n});\nexport type DataProvider = ListingDataProvider | PlayerDataProvider;\n","import { useState, useEffect, useMemo, useCallback, useContext } from \"react\";\r\nimport React, { ReactChild } from \"react\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport {\r\n  DataProvider,\r\n  FilterPredicate,\r\n  ListingDataProvider,\r\n  PlayerDataProvider\r\n} from \"../../data/source/records/provider\";\r\nimport { useModel, Model } from \"./model\";\r\nimport { Metadata, GameRecord } from \"../../data/types\";\r\nimport { generatePath } from \"./routes\";\r\n\r\ninterface ItemLoadingPlaceholder {\r\n  loading: boolean;\r\n}\r\n\r\nconst loadingPlaceholder = { loading: true };\r\n\r\n// eslint-disable-next-line @typescript-eslint/interface-name-prefix\r\nexport interface IDataAdapter {\r\n  getCount(): number;\r\n  getUnfilteredCount(): number;\r\n  getMetadata<T extends Metadata>(): T | null;\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder;\r\n  isItemLoaded(index: number): boolean;\r\n}\r\n\r\nclass DummyDataAdapter implements IDataAdapter {\r\n  getCount(): number {\r\n    return 0;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return 0;\r\n  }\r\n  getMetadata<T extends Metadata>(): T | null {\r\n    return null;\r\n  }\r\n  getItem(): GameRecord | ItemLoadingPlaceholder {\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const DUMMY_DATA_ADAPTER = new DummyDataAdapter() as IDataAdapter;\r\n\r\nconst noop = () => {};\r\n\r\nclass DataAdapter implements IDataAdapter {\r\n  _provider: DataProvider;\r\n  _onDataUpdate: (isError: boolean) => void;\r\n  _triggeredRequest: boolean;\r\n\r\n  constructor(provider: DataProvider, onDataUpdate = noop) {\r\n    this._provider = provider;\r\n    this._onDataUpdate = onDataUpdate;\r\n    this._triggeredRequest = false;\r\n  }\r\n  _installHook<T>(promise: Promise<T>) {\r\n    if (this._triggeredRequest) {\r\n      return;\r\n    }\r\n    this._triggeredRequest = true;\r\n    promise.then(() => this._callHook(false)).catch(() => this._callHook(true));\r\n  }\r\n  _callHook(isError: boolean) {\r\n    this._onDataUpdate(isError);\r\n  }\r\n  getCount(): number {\r\n    const maybeCount = this._provider.getCountMaybeSync();\r\n    if (maybeCount instanceof Promise) {\r\n      this._installHook(maybeCount);\r\n      return 0;\r\n    }\r\n    return maybeCount;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return this._provider.getUnfilteredCountSync() || 0;\r\n  }\r\n  getMetadata<T extends Metadata>(): T | null {\r\n    return this._provider.getMetadataSync() as T | null;\r\n  }\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder {\r\n    if (index >= this.getCount()) {\r\n      return loadingPlaceholder;\r\n    }\r\n    if (this._provider.isItemLoaded(index)) {\r\n      return this._provider.getItem(index) as GameRecord;\r\n    }\r\n    if (!this._triggeredRequest) {\r\n      this._installHook(this._provider.getItem(index) as Promise<GameRecord>);\r\n    }\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    if (index < 0) {\r\n      return false;\r\n    }\r\n    return this._provider.isItemLoaded(index);\r\n  }\r\n  setUpdateHook(hook: () => void) {\r\n    this._onDataUpdate = hook;\r\n  }\r\n  cancelUpdateHook() {\r\n    this._onDataUpdate = noop;\r\n  }\r\n}\r\n\r\nconst DataAdapterContext = React.createContext(DUMMY_DATA_ADAPTER);\r\n\r\nexport const useDataAdapter = () => useContext(DataAdapterContext);\r\nexport const DataAdapterConsumer = DataAdapterContext.Consumer;\r\n\r\nfunction getProviderKey(model: Model): string {\r\n  if (model.type === undefined) {\r\n    return dayjs(model.date || dayjs())\r\n      .startOf(\"day\")\r\n      .valueOf()\r\n      .toString();\r\n  } else if (model.type === \"player\") {\r\n    return generatePath(model);\r\n  }\r\n  throw new Error(\"Unknown model type\");\r\n}\r\n\r\nfunction createProvider(model: Model): DataProvider {\r\n  if (model.type === undefined) {\r\n    return ListingDataProvider.create(model.date || dayjs().startOf(\"day\"));\r\n  }\r\n  if (model.type === \"player\") {\r\n    return PlayerDataProvider.create(model.playerId, model.startDate, model.endDate, model.selectedMode);\r\n  }\r\n  throw new Error(\"Not implemented\");\r\n}\r\n\r\nfunction usePredicate(model: Model): FilterPredicate {\r\n  let memoFunc: () => FilterPredicate = () => null;\r\n  let memoDeps = [null, \"\"];\r\n  if (model.type === undefined) {\r\n    const searchText = (model.searchText || \"\").trim() || \"\";\r\n    const needPredicate = searchText || model.selectedMode;\r\n    memoFunc = () =>\r\n      needPredicate\r\n        ? game => {\r\n            if (model.selectedMode && model.selectedMode !== game.modeId.toString()) {\r\n              return false;\r\n            }\r\n            if (!game.players.some(player => player.nickname.toLowerCase().indexOf(searchText) > -1)) {\r\n              return false;\r\n            }\r\n            return true;\r\n          }\r\n        : null;\r\n    memoDeps = [(model.type === undefined && model.selectedMode) || null, searchText];\r\n  }\r\n  return useMemo(memoFunc, memoDeps);\r\n}\r\n\r\nexport function DataAdapterProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const [model, updateModel] = useModel();\r\n  const [dataProviders] = useState(() => ({} as { [key: string]: DataProvider }));\r\n  const searchPredicate = usePredicate(model);\r\n  const dataProvider = useMemo(() => {\r\n    const key = getProviderKey(model);\r\n    if (!dataProviders[key]) {\r\n      dataProviders[key] = createProvider(model);\r\n    }\r\n    return dataProviders[key];\r\n  }, [model, dataProviders]);\r\n  const [dataAdapter, setDataAdapter] = useState(() => DUMMY_DATA_ADAPTER);\r\n  const refreshDataAdapter = useCallback(\r\n    (isError?: boolean) => {\r\n      if (isError) {\r\n        updateModel(Model.removeExtraParams(model));\r\n        return;\r\n      }\r\n      dataProvider.setFilterPredicate(searchPredicate);\r\n      const adapter = new DataAdapter(dataProvider);\r\n      setDataAdapter(adapter);\r\n    },\r\n    [dataProvider, searchPredicate, model, updateModel]\r\n  );\r\n  useEffect(refreshDataAdapter, [refreshDataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      return () => adapter.cancelUpdateHook();\r\n    }\r\n  }, [dataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      adapter.setUpdateHook(refreshDataAdapter);\r\n    }\r\n  }, [dataAdapter, refreshDataAdapter]);\r\n  useEffect(() => {\r\n    dataProvider.getCountMaybeSync(); // Preload metadata\r\n  }, [dataProvider]);\r\n  return <DataAdapterContext.Provider value={dataAdapter}>{children}</DataAdapterContext.Provider>;\r\n}\r\n","import React, { ReactChild, useContext } from \"react\";\r\n\r\nimport { WindowScrollerChildProps } from \"react-virtualized\";\r\nimport { WindowScroller } from \"react-virtualized/dist/es/WindowScroller\";\r\n\r\nconst ScrollerContext = React.createContext<WindowScrollerChildProps>({} as any);\r\n\r\nexport const useScrollerProps = () => useContext(ScrollerContext);\r\n\r\nfunction Scroller({ children }: { children: ReactChild | ReactChild[] }) {\r\n  return (\r\n    <WindowScroller>\r\n      {scrollerProps => <ScrollerContext.Provider value={scrollerProps}>{children}</ScrollerContext.Provider>}\r\n    </WindowScroller>\r\n  );\r\n}\r\nexport default Scroller;\r\n","import dayjs from \"dayjs\";\r\nimport React, { useReducer, useContext, ReactChild } from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\ninterface WithRuntimeInfo {\r\n  version: number;\r\n  pendingRouteUpdate?: boolean;\r\n}\r\nexport interface ListingModel {\r\n  type: undefined;\r\n  date: dayjs.ConfigType | null;\r\n  selectedMode: string;\r\n  searchText: string;\r\n}\r\nexport interface PlayerModel {\r\n  type: \"player\";\r\n  playerId: string;\r\n  startDate: dayjs.ConfigType | null;\r\n  endDate: dayjs.ConfigType | null;\r\n  selectedMode: string;\r\n}\r\nexport type Model = (ListingModel | PlayerModel) & WithRuntimeInfo;\r\ninterface ListingModelPlain {\r\n  type: undefined;\r\n  date: number | null;\r\n  selectedMode: string;\r\n  searchText: string;\r\n}\r\nexport interface PlayerModelPlain {\r\n  type: \"player\";\r\n  playerId: string;\r\n  startDate: number | null;\r\n  endDate: number | null;\r\n  selectedMode: string;\r\n}\r\nexport type ModelPlain = (ListingModelPlain | PlayerModelPlain) & WithRuntimeInfo;\r\nexport const Model = Object.freeze({\r\n  toPlain(model: Model): ModelPlain {\r\n    if (model.type === \"player\") {\r\n      return {\r\n        ...model,\r\n        startDate: model.startDate ? dayjs(model.startDate).valueOf() : null,\r\n        endDate: model.endDate ? dayjs(model.endDate).valueOf() : null\r\n      };\r\n    }\r\n    return {\r\n      ...model,\r\n      type: undefined,\r\n      date: model.date ? dayjs(model.date).valueOf() : null\r\n    };\r\n  },\r\n  fromPlain(model: ModelPlain): ListingModel | PlayerModel {\r\n    if (model.type === \"player\") {\r\n      return model;\r\n    }\r\n    if (model.type === undefined) {\r\n      return {\r\n        type: undefined,\r\n        date: model.date || null,\r\n        searchText: model.searchText || \"\",\r\n        selectedMode: model.selectedMode\r\n      };\r\n    }\r\n    console.warn(\"Unknown model data from location state:\", model);\r\n    // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\r\n    return DEFAULT_MODEL;\r\n  },\r\n  removeExtraParams(model: Model): Model {\r\n    if (model.type === \"player\") {\r\n      return {\r\n        type: \"player\",\r\n        playerId: model.playerId,\r\n        selectedMode: \"\",\r\n        startDate: null,\r\n        endDate: null,\r\n        version: 0\r\n      };\r\n    }\r\n    return {\r\n      type: undefined,\r\n      searchText: \"\",\r\n      selectedMode: \"\",\r\n      date: null,\r\n      version: 0\r\n    };\r\n  }\r\n});\r\ntype ModelUpdate = Partial<ListingModel> | ({ type: \"player\" } & Partial<PlayerModel>);\r\ntype DispatchModelUpdate = (props: ModelUpdate) => void;\r\n\r\nconst DEFAULT_MODEL: ListingModel = { type: undefined, date: null, selectedMode: \"\", searchText: \"\" };\r\nconst ModelContext = React.createContext<[Readonly<Model>, DispatchModelUpdate]>([\r\n  { ...DEFAULT_MODEL, version: 0 },\r\n  () => {}\r\n]);\r\nexport const useModel = () => useContext(ModelContext);\r\n\r\nfunction normalizeUpdate(newProps: ModelUpdate): ModelUpdate {\r\n  if (newProps.type === undefined) {\r\n    if (newProps.date) {\r\n      newProps.date = dayjs(newProps.date).valueOf();\r\n    }\r\n  }\r\n  for (const key of Object.keys(newProps)) {\r\n    if (key !== \"type\" && newProps[key as keyof typeof newProps] === undefined) {\r\n      delete newProps[key as keyof typeof newProps];\r\n    }\r\n  }\r\n  return newProps;\r\n}\r\nfunction isSameDateValue(d1?: dayjs.ConfigType | null, d2?: dayjs.ConfigType | null): boolean {\r\n  if (d1 === d2) {\r\n    return true;\r\n  }\r\n  if (!d1 || !d2) {\r\n    return false;\r\n  }\r\n  return dayjs(d1).isSame(d2, \"day\");\r\n}\r\nfunction isChanged(oldModel: Model, newProps: ModelUpdate): boolean {\r\n  if (oldModel.type !== newProps.type) {\r\n    return true;\r\n  }\r\n  if (newProps.selectedMode !== undefined && newProps.selectedMode !== oldModel.selectedMode) {\r\n    return true;\r\n  }\r\n  if (oldModel.type === undefined && newProps.type === oldModel.type) {\r\n    if (newProps.date !== undefined && !isSameDateValue(newProps.date, oldModel.date)) {\r\n      return true;\r\n    }\r\n    if (newProps.searchText !== undefined && newProps.searchText !== oldModel.searchText) {\r\n      return true;\r\n    }\r\n  }\r\n  if (oldModel.type === \"player\" && newProps.type === oldModel.type) {\r\n    if (newProps.playerId !== undefined && newProps.playerId !== oldModel.playerId) {\r\n      return true;\r\n    }\r\n    if (newProps.startDate !== undefined && !isSameDateValue(oldModel.startDate, newProps.startDate)) {\r\n      return true;\r\n    }\r\n    if (newProps.endDate !== undefined && !isSameDateValue(oldModel.endDate, newProps.endDate)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function ModelProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const location = useLocation();\r\n  const [model, updateModel] = useReducer(\r\n    (oldModel: Model, newProps: ModelUpdate): Model =>\r\n      isChanged(oldModel, newProps)\r\n        ? {\r\n            ...((oldModel.type === newProps.type ? oldModel : {}) as Model),\r\n            ...(normalizeUpdate(newProps) as Model),\r\n            version: oldModel.version + 1,\r\n            pendingRouteUpdate: true\r\n          }\r\n        : oldModel,\r\n    null,\r\n    (): Model => ({\r\n      ...DEFAULT_MODEL,\r\n      ...Model.fromPlain((location.state || {}).model || {}),\r\n      version: new Date().getTime()\r\n    })\r\n  );\r\n  const value: [Model, DispatchModelUpdate] = useMemo(() => [model, updateModel], [model, updateModel]);\r\n  return <ModelContext.Provider value={value}>{children}</ModelContext.Provider>;\r\n}\r\n","/* eslint-disable @typescript-eslint/camelcase */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable no-use-before-define */\nimport dayjs from \"dayjs\";\n\nimport { apiGet } from \"./api\";\nimport { PlayerMetadataLite, PlayerExtendedStats } from \"../types/metadata\";\nimport { RankingTimeSpan, DeltaRankingResponse } from \"../types/ranking\";\n\nexport async function searchPlayer(prefix: string, limit = 20): Promise<PlayerMetadataLite[]> {\n  prefix = prefix.trim();\n  if (!prefix) {\n    return [];\n  }\n  return apiGet<PlayerMetadataLite[]>(`search_player/${encodeURIComponent(prefix)}?limit=${limit}`);\n}\n\nexport async function getExtendedStats(\n  playerId: number,\n  startDate?: dayjs.ConfigType,\n  endDate?: dayjs.ConfigType,\n  mode = \"\"\n): Promise<PlayerExtendedStats> {\n  let datePath = \"\";\n  if (startDate) {\n    datePath += `/${dayjs(startDate).valueOf()}`;\n    if (endDate) {\n      datePath += `/${dayjs(endDate).valueOf()}`;\n    }\n  }\n  return await apiGet<PlayerExtendedStats>(`player_extended_stats/${playerId}${datePath}?mode=${mode}`);\n}\n\nexport async function getDeltaRanking(\n  timespan: RankingTimeSpan\n): Promise<DeltaRankingResponse> {\n  return await apiGet<DeltaRankingResponse>(`player_delta_ranking/${timespan}`);\n}\n"],"sourceRoot":""}