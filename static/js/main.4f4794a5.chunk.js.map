{"version":3,"sources":["components/misc/scroller.tsx","components/layout/container.tsx","components/misc/alert.tsx","components/app/appHeader.tsx","utils/gameMode.ts","components/gameRecords/model.tsx","components/gameRecords/routeSync.tsx","components/gameRecords/routes.tsx","utils/constants.ts","utils/dataSource.ts","components/gameRecords/dataAdapterProvider.tsx","components/gameRecords/player.tsx","utils/index.ts","components/gameRecords/table.tsx","components/form/checkboxGroup.tsx","components/form/datePicker.tsx","components/form/formRow.tsx","components/gameRecords/filterPanel.tsx","components/app/index.tsx","index.tsx"],"names":["ScrollerContext","React","createContext","useScrollerProps","useContext","Scroller","_ref","children","react_default","a","createElement","es","scrollerProps","Provider","value","Container","_ref$title","title","undefined","_ref$children","_ref$fluid","fluid","className","concat","Alert","_ref$className","_ref$type","type","_ref$container","container","Fragment","_ref$stateName","stateName","stateKey","_useState","useState","localStorage","getItem","_useState2","Object","slicedToArray","closed","setClosed","useEffect","setItem","Cont","role","data-dismiss","aria-label","onClick","event","preventDefault","setTimeout","window","dispatchEvent","UIEvent","aria-hidden","AppHeader","container_Container","href","GameMode","NUMBER_OF_GAME_MODE","keys","filter","x","length","ModelUtils","freeze","toPlain","model","date","moment","valueOf","searchText","selectedModes","Array","from","version","fromPlain","Set","DEFAULT_MODEL","ModelContext","useModel","isChanged","oldModel","newProps","isSame","newSelectedModes","size","set","other","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","elem","has","err","return","isSameSet","ModelProvider","location","useLocation","_useReducer","useReducer","objectSpread","normalizeUpdate","state","_useReducer2","updateModel","useMemo","RouteSync","params","useParams","_useModel","_useModel2","isValid","react_router","to","modes","split","map","trim","newModel","startOf","search","pathname","path","newPath","genPath","PATH","Date","format","join","generatePath","DATA_ROOT","API_ROOT","PLAYER_RANKS","DataProvider","itemsPerChunk","arguments","classCallCheck","this","_date","_count","_chunks","_itemsPerChunk","_filterPredicate","_filteredIndices","_filterResultCache","createClass","key","_apiGet2","asyncToGenerator","regenerator_default","mark","_callee","resp","wrap","_context","prev","fetch","sent","ok","json","abrupt","stop","_x2","apply","predicate","updateFilteredIndices","count","numShownItems","numLoadedItems","indices","i","chunk","Math","floor","Promise","push","game","result","uuid","_triggerFullLoad","getCount","_getCount","_callee3","_this","_context3","_callee2","_context2","_apiGet","getCountMaybeSync","index","mappedIndex","_mapItemIndex","chunkNumber","_this2","skipPreload","then","innerIndex","_getChunk","preload","requestedIndex","reversed","_getChunk2","_callee4","chunkIndex","_context4","_loadChunk","_x3","numChunks","ceil","_loadChunk2","_callee5","_context5","console","warn","_x4","dateToProviderKey","toString","loadingPlaceholder","loading","DUMMY_DATA_ADAPTER","noop","DataAdapter","provider","onDataUpdate","_provider","_onDataUpdate","_triggeredRequest","promise","_callHook","bind","maybeCount","_installHook","getUnfilteredCountSync","isItemLoaded","hook","DataAdapterContext","useDataAdapter","Consumer","DataAdapterProvider","defineProperty","dataProviders","searchPredicate","modeId","players","some","player","nickname","toLowerCase","indexOf","dataProvider","_useState3","_useState4","dataAdapter","setDataAdapter","refreshDataAdapter","useCallback","setFilterPredicate","adapter","cancelUpdateHook","setUpdateHook","Player","t","_ref$player","level","score","accountId","isTop","target","levelId","realId","majorRank","minorRank","label","getLevelTag","formatTime","unix","Players","memo","player_Player","max","toConsumableArray","GameRecordTable","data","isScrolling","onChildScroll","scrollTop","height","ref","registerChild","disableHeight","_ref2","width","autoHeight","rowCount","rowGetter","_ref3","rowHeight","matchMedia","matches","headerHeight","onScroll","rowClassName","_ref4","clsx","even","noRowsRenderer","getUnfilteredCount","dataKey","cellRenderer","_ref5","cellData","_ref6","rowData","flexGrow","_ref7","_ref8","CheckboxGroup","_ref$items","items","_ref$selectedItemKeys","selectedItemKeys","_ref$groupKey","groupKey","_ref$onChange","onChange","setSelected","isSelected","newSet","add","delete","item","id","checked","currentTarget","htmlFor","DatePicker","_ref$date","_","_ref$min","min","_ref$max","handleChange","e","FormRow","MODE_CHECKBOXES","String","DEFAULT_DATE","FilterPanel","updateSearchTextFromEvent","setSelectedItems","setDate","formRow_FormRow","Routes","exact","App","react_router_dom","scroller","routes","rootElement","document","getElementById","render","react","app"],"mappings":"wOAIMA,EAAkBC,IAAMC,cAAwC,IAEzDC,EAAmB,kBAAMC,qBAAWJ,IASlCK,MAPf,SAAAC,GAAyE,IAArDC,EAAqDD,EAArDC,SAClB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACG,SAAAC,GAAa,OAAIJ,EAAAC,EAAAC,cAACV,EAAgBa,SAAjB,CAA0BC,MAAOF,GAAgBL,MCT5DQ,EAAY,SAAAT,GAAA,IAAAU,EAAAV,EAAGW,aAAH,IAAAD,OAAWE,EAAXF,EAAAG,EAAAb,EAAsBC,gBAAtB,IAAAY,OAAiCD,EAAjCC,EAAAC,EAAAd,EAAyDe,aAAzD,IAAAD,KAAA,OACvBZ,EAAAC,EAAAC,cAAA,OAAKY,UAAS,iBAAAC,OAAmBF,EAAQ,SAAW,KAClDb,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACZL,GAAST,EAAAC,EAAAC,cAAA,MAAIY,UAAU,QAAQL,GAC/BV,cCHF,SAASiB,EAATlB,GAMJ,IAAAmB,EAAAnB,EALDgB,iBAKC,IAAAG,EALW,GAKXA,EAAAC,EAAApB,EAJDqB,YAIC,IAAAD,EAJM,OAINA,EAAAE,EAAAtB,EAHDuB,iBAGC,IAAAD,EAHW3B,IAAM6B,SAGjBF,EAAAG,EAAAzB,EAFD0B,iBAEC,IAAAD,EAFW,GAEXA,EAAAZ,EAAAb,EADDC,gBACC,IAAAY,OADUD,EACVC,EACKc,EAAQ,cAAAV,OAAiBS,GAD9BE,EAE2BC,mBAC1B,kBAAMH,KAAeI,aAAaC,QAAQJ,KAH3CK,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAEMO,EAFNH,EAAA,GAEcI,EAFdJ,EAAA,GAUD,GALAK,oBAAU,WACJX,GAAaS,GACfL,aAAaQ,QAAQX,EAAU,SAEhC,CAACQ,EAAQT,EAAWC,IACnBQ,EACF,OAAO,KAET,IAAMI,EAAOhB,EACb,OACErB,EAAAC,EAAAC,cAACmC,EAAD,KACErC,EAAAC,EAAAC,cAAA,OACEY,UAAS,eAAAC,OAAiBI,EAAjB,iCAAAJ,OAAqDD,GAC9DwB,KAAK,SAEJvC,EACDC,EAAAC,EAAAC,cAAA,UACEiB,KAAK,SACLL,UAAU,QACVyB,eAAa,QACbC,aAAW,QACXC,QAAS,SAAAC,GACPA,EAAMC,iBACNT,GAAU,GACVU,WAAW,WACTC,OAAOC,cAAc,IAAIC,QAAQ,YAChC,OAGL/C,EAAAC,EAAAC,cAAA,QAAM8C,cAAY,QAAlB,WCvCH,SAASC,IACd,OACEjD,EAAAC,EAAAC,cAACF,EAAAC,EAAMqB,SAAP,KACEtB,EAAAC,EAAAC,cAACgD,EAAD,KACElD,EAAAC,EAAAC,cAAA,6CAEFF,EAAAC,EAAAC,cAACc,EAAD,CAAOK,UAAWd,EAAWiB,UAAU,WACrCxB,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,0HACAF,EAAAC,EAAAC,cAAA,gLACAF,EAAAC,EAAAC,cAAA,2aAIAF,EAAAC,EAAAC,cAAA,0KACAF,EAAAC,EAAAC,cAAA,0EACaF,EAAAC,EAAAC,cAAA,KAAGiD,KAAK,sBAAR,2BADb,UACwE,IACtEnD,EAAAC,EAAAC,cAAA,KAAGiD,KAAK,6CAAR,sBAFF,iBCrBLC,qHAIUA,QACFC,EAAsBtB,OAAOuB,KAAKF,GAAUG,OACvD,SAAAC,GAAC,MAAoD,kBAAzCJ,EAASI,KACrBC,OCYWC,EAAa3B,OAAO4B,OAAO,CACtCC,QAAS,SAASC,GAChB,MAAO,CACLC,KAAMD,EAAMC,KAAOC,IAAOF,EAAMC,MAAME,UAAY,KAClDC,WAAYJ,EAAMI,WAClBC,cAAeL,EAAMK,cAAgBC,MAAMC,KAAKP,EAAMK,eAAiB,KACvEG,QAASR,EAAMQ,UAGnBC,UAAW,SAAST,GAClB,MAAO,CACLC,KAAMD,EAAMC,MAAQ,KACpBG,WAAYJ,EAAMI,YAAc,GAChCC,cAAeL,EAAMK,cAAgB,IAAIK,IAAIV,EAAMK,eAAiB,SAOpEM,EAAuB,CAAEV,KAAM,KAAMI,cAAe,KAAMD,WAAY,GAAII,QAAS,GACnFI,EAAehF,IAAMC,cAAsD,CAAC8E,EAAe,eACpFE,EAAW,kBAAM9E,qBAAW6E,IAuBzC,SAASE,EAAUC,EAAiBC,GAClC,QACoBnE,IAAlBmE,EAASf,MACTe,EAASf,OAASc,EAASd,QACzBe,EAASf,OAASc,EAASd,OAASC,IAAOc,EAASf,MAAMgB,OAAOF,EAASd,KAAM,QAElF,OAAO,EAET,QAA4BpD,IAAxBmE,EAASZ,YAA4BY,EAASZ,aAAeW,EAASX,WACxE,OAAO,EAET,IAAIc,EAAmBF,EAASX,cAIhC,GAHIa,GAAoBA,EAAiBC,MAAQ3B,IAC/C0B,EAAmB,WAEIrE,IAArBqE,GAAkCA,IAAqBH,EAASV,cAAe,CACjF,IAAKa,IAAqBH,EAASV,cACjC,OAAO,EAET,GAxCJ,SAAsBe,EAAaC,GACjC,GAAID,EAAID,OAASE,EAAMF,KACrB,OAAO,EAFuC,IAAAG,GAAA,EAAAC,GAAA,EAAAC,OAAA3E,EAAA,IAIhD,QAAA4E,EAAAC,EAAmBL,EAAnBM,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA0B,KAAfS,EAAeN,EAAAhF,MACxB,IAAK2E,EAAIY,IAAID,GACX,OAAO,GANqC,MAAAE,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAShD,OAAO,EA+BDW,CAAUpB,EAASV,cAAea,GACpC,OAAO,EAGX,OAAO,EAGF,SAASkB,EAATnG,GAA8E,IAArDC,EAAqDD,EAArDC,SACxBmG,EAAWC,cADkEC,EAEtDC,qBAC3B,SAACzB,EAAiBC,GAAlB,OACEF,EAAUC,EAAUC,GAApB9C,OAAAuE,EAAA,EAAAvE,CAAA,GACS6C,EAxCf,SAAyBC,GAOvB,OANIA,EAASf,OACXe,EAASf,KAAOC,IAAOc,EAASf,MAAME,WAEpCa,EAASX,eAAiBW,EAASX,cAAcc,MAAQ3B,IAC3DwB,EAASX,cAAgB,MAEpBW,EAiCmB0B,CAAgB1B,GADtC,CACiDR,QAASO,EAASP,QAAU,IACzEO,GACN,KACA,kBAAA7C,OAAAuE,EAAA,EAAAvE,CAAA,GAAmByC,EAAkBd,EAAWY,WAAW4B,EAASM,OAAS,IAAI3C,OAAS,IAA1F,CAA+FQ,QAAS,MARvBoC,EAAA1E,OAAAC,EAAA,EAAAD,CAAAqE,EAAA,GAE5EvC,EAF4E4C,EAAA,GAErEC,EAFqED,EAAA,GAU7EnG,EAAsCqG,kBAAQ,iBAAM,CAAC9C,EAAO6C,IAAc,CAAC7C,EAAO6C,IACxF,OAAO1G,EAAAC,EAAAC,cAACuE,EAAapE,SAAd,CAAuBC,MAAOA,GAAQP,GCnFxC,SAAS6G,IACd,IAAMC,EAASC,cADgDC,EAElCrC,IAFkCsC,EAAAjF,OAAAC,EAAA,EAAAD,CAAAgF,EAAA,GAExDlD,EAFwDmD,EAAA,GAEjDN,EAFiDM,EAAA,GAGzDd,EAAWC,cACXK,EAAQN,EAASM,MACvB,GAAIA,GAASA,EAAM3C,MAAMQ,UAAYR,EAAMQ,QACzC,OAAOrE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,MAET,IAAKkF,EAAO,CACV,IAAM1C,EAAO+C,EAAO/C,KAAOC,IAAO8C,EAAO/C,KAAM,cAAgB,KAC/D,GAAIA,IAASA,EAAKmD,UAChB,OAAOjH,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAUC,GAAG,MAEtB,IAAMC,EAAQP,EAAOO,MACjB,IAAI7C,IACFsC,EAAOO,MACJC,MAAM,KACNC,IAAI,SAAA9D,GAAC,OAAIA,EAAE+D,SACXhE,OAAO,SAAAC,GAAC,QAAMA,KAEnB,KACEgE,EAAkB,CACtB1D,KAAMA,EAAOA,EAAK2D,QAAQ,OAAOzD,UAAY,KAC7CE,cAAekD,EACfnD,WAAY4C,EAAOa,QAAU,GAC7BrD,QAASR,EAAMQ,SAGjB,OADAqC,EAAYc,GACLxH,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAUC,GAAI,CAAEQ,SAAUzB,EAASyB,SAAUnB,MAAO,CAAEoB,KAAM1B,EAASyB,SAAU9D,MAAOH,EAAWE,QAAQ4D,OAElH,IAAMK,ECnCD,SAAsBhE,GAC3B,KAAMA,EAAMK,gBAAkBL,EAAMK,cAAcc,QAAUnB,EAAMI,aAAeJ,EAAMC,KACrF,MAAO,IAET,OAAOgE,YAAQC,GAAM,CACnBjE,KAAMC,IAAOF,EAAMC,MAAQ,IAAIkE,MAAQC,OAAO,cAC9Cb,MAAOvD,EAAMK,eAAiBL,EAAMK,cAAcc,KAAOb,MAAMC,KAAKP,EAAMK,eAAegE,KAAK,UAAOxH,EACrGgH,OAAQ7D,EAAMI,iBAAcvD,ID4BdyH,CAAatE,GAC7B,OAAIgE,IAAYrB,EAAMoB,KACb5H,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,MAEFtB,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAUC,GAAI,CAAEQ,SAAUE,EAASrB,MAAO,CAAEoB,KAAMC,EAAShE,MAAOH,EAAWE,QAAQC,4DEpDjFuE,EAAY,yCACZC,EAAQ,GAAAtH,OAAMqH,EAAN,QCMRE,EAAe,uCA0DrB,IAAMC,EAAb,WASE,SAAAA,EAAYzE,GAA+C,IAArB0E,EAAqBC,UAAAhF,OAAA,QAAA/C,IAAA+H,UAAA,GAAAA,UAAA,GAAL,IAAK1G,OAAA2G,EAAA,EAAA3G,CAAA4G,KAAAJ,GAAAI,KAR3DC,WAQ2D,EAAAD,KAP3DE,YAO2D,EAAAF,KAN3DG,aAM2D,EAAAH,KAL3DI,oBAK2D,EAAAJ,KAJ3DK,sBAI2D,EAAAL,KAH3DM,sBAG2D,EAAAN,KAF3DO,wBAE2D,EACzDP,KAAKC,MAAQ7E,IAAOD,GAAM2D,QAAQ,OAClCkB,KAAKE,OAAS,KACdF,KAAKG,QAAU,GACfH,KAAKI,eAAiBP,EACtBG,KAAKK,iBAAmB,KACxBL,KAAKM,iBAAmB,KACxBN,KAAKO,mBAAqB,GAhB9B,OAAAnH,OAAAoH,EAAA,EAAApH,CAAAwG,EAAA,EAAAa,IAAA,UAAA9I,MAAA,eAAA+I,EAAAtH,OAAAuH,EAAA,EAAAvH,CAAAwH,EAAAtJ,EAAAuJ,KAAA,SAAAC,EAkBmB7B,GAlBnB,IAAA8B,EAAA,OAAAH,EAAAtJ,EAAA0J,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAlE,MAAA,cAAAkE,EAAAlE,KAAA,EAmBuBoE,MAAMzB,EAAWT,GAnBxC,WAmBU8B,EAnBVE,EAAAG,MAoBcC,GApBd,CAAAJ,EAAAlE,KAAA,cAqBYgE,EArBZ,cAAAE,EAAAlE,KAAA,EAuBkBgE,EAAKO,OAvBvB,cAAAL,EAAAM,OAAA,SAAAN,EAAAG,MAAA,wBAAAH,EAAAO,SAAAV,MAAA,gBAAAW,GAAA,OAAAf,EAAAgB,MAAA1B,KAAAF,YAAA,KAAAW,IAAA,qBAAA9I,MAAA,SAyBqBgK,GACb3B,KAAKK,mBAAqBsB,IAG9B3B,KAAKK,iBAAmBsB,EACxB3B,KAAKO,mBAAqB,GAC1BP,KAAK4B,2BA/BT,CAAAnB,IAAA,wBAAA9I,MAAA,WAmCI,GADAqI,KAAKM,iBAAmB,KACnBN,KAAKK,iBAAV,CAGA,IAAMwB,EAAQ7B,KAAKE,OACnB,GAAqB,kBAAV2B,EAAX,CAMA,IAHA,IAAIC,EAAgB,EAChBC,EAAiB,EACfC,EAAU,GACPC,EAAI,EAAGA,EAAIJ,EAAOI,IAAK,CAC9B,IAAMC,EAAQlC,KAAKG,QAAQgC,KAAKC,MAAMH,EAAIjC,KAAKI,iBAC/C,IAAK8B,GAASA,aAAiBG,QAC7BL,EAAQM,KAAKL,OADf,CAIAF,IACA,IAAMQ,EAAOL,EAAMD,EAAIjC,KAAKI,gBACxBoC,EAASxC,KAAKO,mBAAmBgC,EAAKE,WAC3B1K,IAAXyK,IACFxC,KAAKO,mBAAmBgC,EAAKE,MAAQD,EAASxC,KAAKK,iBAAiBkC,IAElEC,IACFR,EAAQM,KAAKL,GACbH,MAGJ9B,KAAKM,iBAAmB0B,EACpBF,EAAgB,IAAMC,GAAkB/B,KAAKI,gBAC/CJ,KAAK0C,uBAhEX,CAAAjC,IAAA,oBAAA9I,MAAA,WAoEI,OAAoB,OAAhBqI,KAAKE,OACAF,KAAK2C,WAEP3C,KAAKM,iBAAmBN,KAAKM,iBAAiBxF,OAASkF,KAAKE,SAvEvE,CAAAO,IAAA,WAAA9I,MAAA,eAAAiL,EAAAxJ,OAAAuH,EAAA,EAAAvH,CAAAwH,EAAAtJ,EAAAuJ,KAAA,SAAAgC,IAAA,IAAAC,EAAA9C,KAAA,OAAAY,EAAAtJ,EAAA0J,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAAhG,MAAA,cA0EwB,OAAhBiD,KAAKE,SACPF,KAAKE,OAAS9G,OAAAuH,EAAA,EAAAvH,CAAAwH,EAAAtJ,EAAAuJ,KAAC,SAAAmC,IAAA,IAAAjC,EAAA,OAAAH,EAAAtJ,EAAA0J,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAAlG,MAAA,cAAAkG,EAAAlG,KAAA,EACM+F,EAAKI,QAAL,SAAA9K,OAAyC0K,EAAK7C,MAAM5E,YAD1D,cACP0F,EADOkC,EAAA7B,KAEb0B,EAAK5C,OAASa,EAAKc,MACnBiB,EAAKlB,wBAHQqB,EAAA1B,OAAA,SAINuB,EAAKK,qBAJC,wBAAAF,EAAAzB,SAAAwB,KAAD5J,IA3EpB2J,EAAAxB,OAAA,SAkFWvB,KAAKmD,qBAlFhB,wBAAAJ,EAAAvB,SAAAqB,EAAA7C,SAAA,yBAAA4C,EAAAlB,MAAA1B,KAAAF,YAAA,KAAAW,IAAA,yBAAA9I,MAAA,WAqFI,MAA2B,kBAAhBqI,KAAKE,OACP,KAEFF,KAAKE,SAxFhB,CAAAO,IAAA,eAAA9I,MAAA,SA0FeyL,GACX,IAAMC,EAAcrD,KAAKsD,cAAcF,GACvC,GAAoB,OAAhBC,EACF,OAAO,EAET,IAAME,EAAcpB,KAAKC,MAAMiB,EAAcrD,KAAKI,gBAClD,QAASJ,KAAKG,QAAQoD,MAAkBvD,KAAKG,QAAQoD,aAAwBlB,WAhGjF,CAAA5B,IAAA,UAAA9I,MAAA,SAkGUyL,GAAsE,IAAAI,EAAAxD,KAAvDyD,EAAuD3D,UAAAhF,OAAA,QAAA/C,IAAA+H,UAAA,IAAAA,UAAA,GACtEuD,EAAcrD,KAAKsD,cAAcF,GACvC,GAAoB,OAAhBC,EACF,OAAOrD,KAAK2C,WAAWe,KAAK,kBAAMF,EAAKtK,QAAQkK,KAEjD,IAAMG,EAAcpB,KAAKC,MAAMiB,EAAcrD,KAAKI,gBAC5CuD,EAAaN,EAAcrD,KAAKI,eAChC8B,EAAQlC,KAAKG,QAAQoD,GAC3B,OAAKrB,GAASA,aAAiBG,QACtBrC,KAAK4D,UAAUL,GAAaG,KAAK,SAAAxB,GAAK,OAAIA,EAAMyB,MAEpDF,GAAgBzD,KAAKM,kBACxBN,KAAK6D,QAAQT,EAAQpD,KAAKI,gBAErB8B,EAAMyB,MAhHjB,CAAAlD,IAAA,UAAA9I,MAAA,SAkHUyL,GACN,IAAMvB,EAAQ7B,KAAKmD,oBACftB,aAAiBQ,SAGjBe,GAASvB,GAGb7B,KAAK9G,QAAQkK,GAAO,KA1HxB,CAAA3C,IAAA,gBAAA9I,MAAA,SA4HgBmM,GACZ,IAAMjC,EAAQ7B,KAAKmD,oBACnB,GAAItB,aAAiBQ,QACnB,OAAO,KAET,GAAIyB,EAAiB,EACnB,OAAO,KAGT,IAAMC,EAAWlC,EAAQiC,EAAiB,EAC1C,OAAIC,EAAW,EACN,KAEF/D,KAAKM,iBAAmBN,KAAKM,iBAAiByD,GAAYA,IAzIrE,CAAAtD,IAAA,YAAA9I,MAAA,eAAAqM,EAAA5K,OAAAuH,EAAA,EAAAvH,CAAAwH,EAAAtJ,EAAAuJ,KAAA,SAAAoD,EA2IkBC,GA3IlB,OAAAtD,EAAAtJ,EAAA0J,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAApH,MAAA,cA4ISiD,KAAKG,QAAQ+D,KAChBlE,KAAKG,QAAQ+D,GAAclE,KAAKoE,WAAWF,IA7IjDC,EAAA5C,OAAA,SA+IWvB,KAAKG,QAAQ+D,IA/IxB,wBAAAC,EAAA3C,SAAAyC,EAAAjE,SAAA,gBAAAqE,GAAA,OAAAL,EAAAtC,MAAA1B,KAAAF,YAAA,KAAAW,IAAA,mBAAA9I,MAAA,WAkJI,IAAMkK,EAAQ7B,KAAKmD,oBACnB,GAAqB,kBAAVtB,EAIX,IADA,IAAMyC,EAAYnC,KAAKoC,KAAK1C,EAAQ7B,KAAKI,gBAChC6B,EAAI,EAAGA,EAAIqC,EAAWrC,IACzBjC,KAAKG,QAAQ8B,IAGjBjC,KAAK4D,UAAU3B,KA3JrB,CAAAxB,IAAA,aAAA9I,MAAA,eAAA6M,EAAApL,OAAAuH,EAAA,EAAAvH,CAAAwH,EAAAtJ,EAAAuJ,KAAA,SAAA4D,EA8JmBP,GA9JnB,IAAArC,EAAAyC,EAAApC,EAAA,OAAAtB,EAAAtJ,EAAA0J,KAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAA3H,MAAA,cAAA2H,EAAA3H,KAAA,EA+JwBiD,KAAK2C,WA/J7B,UA+JUd,EA/JV6C,EAAAtD,KAgKUkD,EAAYnC,KAAKoC,KAAK1C,EAAQ7B,KAAKI,gBAhK7C,CAAAsE,EAAA3H,KAAA,eAAA2H,EAAAnD,OAAA,SAkKa,IAlKb,YAoKQ2C,GAAcI,GApKtB,CAAAI,EAAA3H,KAAA,eAqKM4H,QAAQC,KAAR,+BAAAxM,OAA4C8L,EAA5C,uBAAA9L,OAA4E4H,KAAKE,SArKvFwE,EAAAnD,OAAA,SAsKa,IAtKb,cAAAmD,EAAA3H,KAAA,GAwKwBiD,KAAKkD,QAAL,SAAA9K,OACT4H,KAAKC,MAAM5E,UADF,UAAAjD,OACoB4H,KAAKI,eAAiB8D,EAD1C,WAAA9L,OAC8D4H,KAAKI,eADnE,SAAAhI,OAEhB8L,IAAeI,EAAY,EAAIzC,EAAQ,KA1K/C,eAwKUK,EAxKVwC,EAAAtD,MA6KctG,OAASkF,KAAKI,gBAAkB8D,EAAaI,EAAY,GACjEK,QAAQC,KAAK,uCAAwC1C,EAAMpH,QAE7DkF,KAAKG,QAAQ+D,GAAchC,EAC3BlC,KAAK4B,wBAjLT8C,EAAAnD,OAAA,SAkLWW,GAlLX,yBAAAwC,EAAAlD,SAAAiD,EAAAzE,SAAA,gBAAA6E,GAAA,OAAAL,EAAA9C,MAAA1B,KAAAF,YAAA,MAAAF,EAAA,GC1DMkF,EAAoB,SAAC3J,GAAD,OACxBC,IAAOD,GACJ2D,QAAQ,OACRzD,UACA0J,YAMCC,EAAqB,CAAEC,SAAS,GAwBzBC,EAAqB,uGAb9B,OAAO,+CAGP,OAAO,kCAED9B,GACN,OAAO4B,uCAEI5B,GACX,OAAO,YAML+B,EAAO,aAEPC,aAKJ,SAAAA,EAAYC,GAA6C,IAArBC,EAAqBxF,UAAAhF,OAAA,QAAA/C,IAAA+H,UAAA,GAAAA,UAAA,GAANqF,EAAM/L,OAAA2G,EAAA,EAAA3G,CAAA4G,KAAAoF,GAAApF,KAJzDuF,eAIyD,EAAAvF,KAHzDwF,mBAGyD,EAAAxF,KAFzDyF,uBAEyD,EACvDzF,KAAKuF,UAAYF,EACjBrF,KAAKwF,cAAgBF,EACrBtF,KAAKyF,mBAAoB,2DAEdC,GACP1F,KAAKyF,oBAGTzF,KAAKyF,mBAAoB,EACzBC,EAAQhC,KAAK1D,KAAK2F,UAAUC,KAAK5F,4CAGjCA,KAAKwF,mDAGL,IAAMK,EAAa7F,KAAKuF,UAAUpC,oBAClC,OAAI0C,aAAsBxD,SACxBrC,KAAK8F,aAAaD,GACX,GAEFA,+CAGP,OAAO7F,KAAKuF,UAAUQ,0BAA4B,kCAE5C3C,GACN,OAAIpD,KAAKuF,UAAUS,aAAa5C,GACvBpD,KAAKuF,UAAUrM,QAAQkK,IAE3BpD,KAAKyF,mBACRzF,KAAK8F,aAAa9F,KAAKuF,UAAUrM,QAAQkK,IAEpC4B,wCAEI5B,GACX,QAAIA,EAAQ,IAGLpD,KAAKuF,UAAUS,aAAa5C,yCAEvB6C,GACZjG,KAAKwF,cAAgBS,6CAGrBjG,KAAKwF,cAAgBL,WAInBe,EAAqBpP,IAAMC,cAAcmO,GAElCiB,EAAiB,kBAAMlP,qBAAWiP,IACZA,EAAmBE,SAE/C,SAASC,EAATlP,GAAoF,IAArDC,EAAqDD,EAArDC,SAAqDgH,EACzErC,IAATb,EADkF9B,OAAAC,EAAA,EAAAD,CAAAgF,EAAA,MAEnFjD,EAAOD,EAAMC,MAAQC,MAF8DrC,EAGjEC,mBAAS,kBAAAI,OAAAkN,EAAA,EAAAlN,CAAA,GAAU0L,EAAkB3J,GAAQ,IAAIyE,EAAazE,MAA/EoL,EAHkFnN,OAAAC,EAAA,EAAAD,CAAAL,EAAA,MAInFuC,GAAcJ,EAAMI,YAAc,IAAIsD,OACtC4H,EAAmCxI,kBACvC,kBACE1C,GAAeJ,EAAMK,eAAiBL,EAAMK,cAAcc,KAAO3B,EAC7D,SAAA6H,GACE,QAAIrH,EAAMK,gBAAkBL,EAAMK,cAAc2B,IAAIqF,EAAKkE,OAAO1B,gBAG5DzJ,IAAeiH,EAAKmE,QAAQC,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SAASC,cAAcC,QAAQzL,IAAe,MAKtG,MACN,CAACJ,EAAMK,cAAeD,IAElB0L,EAAehJ,kBAAQ,WAC3B,IAAMyC,EAAMqE,EAAkB3J,GAI9B,OAHKoL,EAAc9F,KACjB8F,EAAc9F,GAAO,IAAIb,EAAazE,IAEjCoL,EAAc9F,IACpB,CAACtF,EAAMoL,IA1B+EU,EA2BnDjO,mBAAS,kBAAMkM,IA3BoCgC,EAAA9N,OAAAC,EAAA,EAAAD,CAAA6N,EAAA,GA2BlFE,EA3BkFD,EAAA,GA2BrEE,EA3BqEF,EAAA,GA4BnFG,EAAqBC,sBAAY,WACrCN,EAAaO,mBAAmBf,GAChC,IAAMgB,EAAU,IAAIpC,EAAY4B,GAChCI,EAAeI,IACd,CAACR,EAAcR,IAclB,OAbAhN,oBAAU6N,EAAoB,CAACA,IAC/B7N,oBAAU,WACR,IAAMgO,EAAUL,EAChB,GAAIK,aAAmBpC,EACrB,OAAO,kBAAMoC,EAAQC,qBAEtB,CAACN,IACJ3N,oBAAU,WACQ2N,aACO/B,GADP+B,EAENO,cAAcL,IAEvB,CAACF,EAAaE,IACVhQ,EAAAC,EAAAC,cAAC2O,EAAmBxO,SAApB,CAA6BC,MAAOwP,GAAc/P,wBCjJ3D,IAEauQ,EAAS,SAAAxQ,GAQnB,IAVsByQ,EAUtBC,EAAA1Q,EAPDyP,OAAUC,EAOTgB,EAPShB,SAAUiB,EAOnBD,EAPmBC,MAAOC,EAO1BF,EAP0BE,MAAOC,EAOjCH,EAPiCG,UAC1BvF,EAMPtL,EANDoL,KAAQE,KACRwF,EAKC9Q,EALD8Q,MAMA,OACE5Q,EAAAC,EAAAC,cAAA,OAAKY,UAAS,UAAAC,OAAY6P,GAAS,qBACjC5Q,EAAAC,EAAAC,cAAA,KAAGiD,KAAI,oCAAApC,OAAsCqK,EAAtC,MAAArK,QAbYwP,EAamDI,EAbrC,SAAY,EAAIJ,EAAI,QAAW,YAaoBM,OAAO,UAA3F,ICfC,SAAqBC,GAC1B,IAAMC,EAASD,EAAU,IACnBE,EAAYlG,KAAKC,MAAMgG,EAAS,KAChCE,EAAYF,EAAS,IACrBG,EAAQ5I,EAAa0I,EAAY,GACvC,OAAIA,IAAc1I,EAAa7E,OACtByN,EAEFA,EAAQD,EDQPE,CAAYV,GADhB,KAC0BjB,EAD1B,SAC+C9O,IAAVgQ,GAAA,IAAA3P,OAA2B2P,EAA3B,QETrCU,EAAa,SAAC5N,GAAD,OAAgBA,EAAIO,IAAOsN,KAAK7N,GAAGyE,OAAO,SAAW,MAElEqJ,EAAU7R,IAAM8R,KAAK,SAAAzR,GAAA,IAAGoL,EAAHpL,EAAGoL,KAAH,OACzBlL,EAAAC,EAAAC,cAAA,OAAKY,UAAU,kBACZoK,EAAKmE,QAAQ/H,IAAI,SAAA9D,GAAC,OACjBxD,EAAAC,EAAAC,cAAA,OAAKkJ,IAAK5F,EAAEmN,UAAW7P,UAAU,wBAC/Bd,EAAAC,EAAAC,cAACsR,EAAD,CAAQtG,KAAMA,EAAMqE,OAAQ/L,EAAGoN,MAAOpN,EAAEkN,QAAU5F,KAAK2G,IAALpH,MAAAS,KAAI/I,OAAA2P,EAAA,EAAA3P,CAAQmJ,EAAKmE,QAAQ/H,IAAI,SAAA9D,GAAC,OAAIA,EAAEkN,kBAMvF,SAASiB,IACd,IAAMC,EAAO9C,IACP1O,EAAgBT,IACdkS,EAAkDzR,EAAlDyR,YAAaC,EAAqC1R,EAArC0R,cAAeC,EAAsB3R,EAAtB2R,UAAWC,EAAW5R,EAAX4R,OAC/C,OACEhS,EAAAC,EAAAC,cAAA,OAAK+R,IAAK7R,EAAc8R,eACtBlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWgS,eAAa,GACrB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OACCrS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmS,YAAU,EACVC,SAAUX,EAAKtG,WACfkH,UAAW,SAAAC,GAAA,IAAG1G,EAAH0G,EAAG1G,MAAH,OAAe6F,EAAK/P,QAAQkK,IACvC2G,UAAW7P,OAAO8P,WAAW,sBAAsBC,QAAU,GAAK,IAClEC,aAAc,GACdR,MAAOA,EACPL,OAAQA,EACRH,YAAaA,EACbiB,SAAUhB,EACVC,UAAWA,EACXgB,aAAc,SAAAC,GAAA,IAAGjH,EAAHiH,EAAGjH,MAAH,OACZA,GAAS,EAAIkH,YAAK,CAAErF,SAAUgE,EAAKjD,aAAa5C,GAAQmH,KAAsB,KAAP,EAARnH,KAAsB,IAEvFoH,eAAgB,kBAAOvB,EAAKwB,qBAAuB,KAAOpT,EAAAC,EAAAC,cAAA,KAAGY,UAAU,eAAb,2BAE1Dd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQkT,QAAQ,SAASnC,MAAM,eAAKoC,aAAc,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAAkBpQ,EAASoQ,IAAWnB,MAAO,KAC/FrS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEkT,QAAQ,UACRnC,MAAM,eACNoC,aAAc,SAAAG,GAAA,IAAGC,EAAHD,EAAGC,QAAH,OAAkBA,GAAWA,EAAQrE,QAAUrP,EAAAC,EAAAC,cAACoR,EAAD,CAASpG,KAAMwI,IAAc,MAC1FrB,MAAO,IACPsB,SAAU,IAEZ3T,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQkT,QAAQ,YAAYnC,MAAM,eAAKoC,aAAc,SAAAM,GAAA,IAAGJ,EAAHI,EAAGJ,SAAH,OAAkBpC,EAAWoC,IAAWnB,MAAO,KACpGrS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQkT,QAAQ,UAAUnC,MAAM,eAAKoC,aAAc,SAAAO,GAAA,IAAGL,EAAHK,EAAGL,SAAH,OAAkBpC,EAAWoC,IAAWnB,MAAO,SChDvG,SAASyB,EAAThU,GAKJ,IAAAiU,EAAAjU,EAJDkU,aAIC,IAAAD,EAJO,GAIPA,EAAAE,EAAAnU,EAHDoU,wBAGC,IAAAD,EAHkB,KAGlBA,EAAAE,EAAArU,EAFDsU,gBAEC,IAAAD,EAFU,UAEVA,EAAAE,EAAAvU,EADDwU,gBACC,IAAAD,EADU,SAACH,KACXG,EACKE,EAAc,SAASnL,EAAaoL,GACxC,KAAIA,GAAgBN,IAAoBA,EAAiBrO,IAAIuD,MAGxDoL,IAAcN,GAAqBA,EAAiBrO,IAAIuD,IAA7D,CAGA,IAAMqL,EAAS,IAAIlQ,IAAI2P,GAAoBF,EAAM1M,IAAI,SAAA9D,GAAC,OAAIA,EAAE4F,OACxDoL,EACFC,EAAOC,IAAItL,GAEXqL,EAAOE,OAAOvL,GAEhBkL,EAASG,KAEX,OACEzU,EAAAC,EAAAC,cAACF,EAAAC,EAAMqB,SAAP,KACG0S,EAAM1M,IAAI,SAAAsN,GAAI,OACb5U,EAAAC,EAAAC,cAAA,OAAKY,UAAU,+BAA+BsI,IAAKwL,EAAKxL,KACtDpJ,EAAAC,EAAAC,cAAA,SACEY,UAAU,mBACVK,KAAK,WACL0T,GAAE,MAAA9T,OAAQqT,EAAR,KAAArT,OAAoB6T,EAAKxL,KAC3B9I,MAAOsU,EAAKxL,IACZ0L,SAAUZ,GAAoBA,EAAiBrO,IAAI+O,EAAKxL,KACxDkL,SAAU,SAAA5R,GAAK,OAAI6R,EAAYK,EAAKxL,IAAK1G,EAAMqS,cAAcD,YAE/D9U,EAAAC,EAAAC,cAAA,SAAOY,UAAU,mBAAmBkU,QAAO,MAAAjU,OAAQqT,EAAR,KAAArT,OAAoB6T,EAAKxL,MACjEwL,EAAK1D,WCnCX,SAAS+D,GAATnV,GAMJ,IAAAoV,EAAApV,EALDgE,YAKC,IAAAoR,EALMnR,MAKNmR,EAAAb,EAAAvU,EAJDwU,gBAIC,IAAAD,EAJU,SAACc,KAIXd,EAAApT,EAAAnB,EAHDgB,iBAGC,IAAAG,EAHW,GAGXA,EAAAmU,EAAAtV,EAFDuV,WAEC,IAAAD,OAFK1U,EAEL0U,EAAAE,EAAAxV,EADD2R,WACC,IAAA6D,EADKvR,MACLuR,EACKC,EAAetF,sBACnB,SAACuF,GAAD,OAA4ClB,EAASvQ,IAAOyR,EAAET,cAAczU,MAAO,gBACnF,CAACgU,IAEH,OACEtU,EAAAC,EAAAC,cAAA,SACEY,UAAWA,EACXK,KAAK,OACLb,MAAOyD,IAAOD,GAAMmE,OAAO,cAC3BoN,IAAKA,EAAMtR,IAAOsR,GAAKpN,OAAO,mBAAgBvH,EAC9C+Q,IAAKA,EAAM1N,IAAO0N,GAAKxJ,OAAO,mBAAgBvH,EAC9C4T,SAAUiB,ICtBT,IAAME,GAAU,SAAA3V,GAAA,IAAAU,EAAAV,EAAGW,aAAH,IAAAD,EAAW,GAAXA,EAAAG,EAAAb,EAAeC,gBAAf,IAAAY,OAA0BD,EAA1BC,EAAA,OACrBX,EAAAC,EAAAC,cAAA,OAAKY,UAAU,kBACbd,EAAAC,EAAAC,cAAA,SAAOY,UAAU,2BAA2BL,GAC5CT,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aAAaf,KCInB2V,GAAkB3T,OAAOuB,KAAKF,GACxCG,OAAO,SAAAC,GAAC,MAAoD,kBAAzCJ,EAASI,KAC5B8D,IAAI,SAAA9D,GAAC,MAAK,CACT4F,IAAKuM,OAAOvS,EAASI,IACrB0N,MAAO1N,KAGLoS,GAAe7R,MAAS0D,QAAQ,OAE/B,SAASoO,KAAc,IAAA9O,EACCrC,IADDsC,EAAAjF,OAAAC,EAAA,EAAAD,CAAAgF,EAAA,GACrBlD,EADqBmD,EAAA,GACdN,EADcM,EAAA,GAEtB8O,EAA4B7F,sBAChC,SAACuF,GAAD,OAA4C9O,EAAY,CAAEzC,WAAYuR,EAAET,cAAczU,SACtF,CAACoG,IAEGqP,EAAmB9F,sBACvB,SAACiE,GAAD,OAAmCxN,EAAY,CAAExC,cAAegQ,KAChE,CAACxN,IAEGsP,EAAU/F,sBAAY,SAACnM,GAAD,OAAuB4C,EAAY,CAAE5C,UAAS,CAAC4C,IAC3E,OACE1G,EAAAC,EAAAC,cAACF,EAAAC,EAAMqB,SAAP,KACEtB,EAAAC,EAAAC,cAAC+V,GAAD,CAASxV,MAAM,gBACbT,EAAAC,EAAAC,cAAC+U,GAAD,CAAYI,IAAI,aAAavR,KAAMD,EAAMC,MAAQ8R,GAActB,SAAU0B,EAASlV,UAAU,kBAE9Fd,EAAAC,EAAAC,cAAC+V,GAAD,CAASxV,MAAM,4BACbT,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,OAAOL,UAAU,eAAeR,MAAOuD,EAAMI,WAAYqQ,SAAUwB,KAEjF9V,EAAAC,EAAAC,cAAC+V,GAAD,KACEjW,EAAAC,EAAAC,cAAC4T,EAAD,CAAeE,MAAO0B,GAAiBxB,iBAAkBrQ,EAAMK,cAAeoQ,SAAUyB,MV3BhG,IAAMhO,GAAO,yDA+BEmO,OAlBf,WACE,OACElW,EAAAC,EAAAC,cAAC+F,EAAD,KACEjG,EAAAC,EAAAC,cAAC0G,EAAD,MACA5G,EAAAC,EAAAC,cAAC2V,GAAD,MACA7V,EAAAC,EAAAC,cAAC8O,EAAD,KACEhP,EAAAC,EAAAC,cAACgH,EAAA,EAAD,KACElH,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAOiP,OAAK,EAACvO,KAAM,CAAC,IAAKG,KACvB/H,EAAAC,EAAAC,cAACyR,EAAD,OAEF3R,EAAAC,EAAAC,cAACgH,EAAA,EAAD,KACElH,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAUC,GAAG,WWNViP,OAnBf,WACE,OACEpW,EAAAC,EAAAC,cAACmW,EAAA,EAAD,KACErW,EAAAC,EAAAC,cAACoW,EAAD,KACEtW,EAAAC,EAAAC,cAAC+C,EAAD,MACAjD,EAAAC,EAAAC,cAACgD,EAAD,KACElD,EAAAC,EAAAC,cAACgH,EAAA,EAAD,KACElH,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAOiP,OAAK,EAACvO,KAAM,CAAC,IAAK,2DACvB5H,EAAAC,EAAAC,cAACqW,GAAD,OAEFvW,EAAAC,EAAAC,cAACgH,EAAA,EAAD,KACElH,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAUC,GAAG,YCZrBqP,GAAcC,SAASC,eAAe,QAC5CC,iBAAOC,EAAA,cAACC,GAAD,MAASL","file":"static/js/main.4f4794a5.chunk.js","sourcesContent":["import React, { ReactChild, useContext } from \"react\";\r\n\r\nimport { WindowScroller, WindowScrollerChildProps } from \"react-virtualized\";\r\n\r\nconst ScrollerContext = React.createContext<WindowScrollerChildProps>({} as any);\r\n\r\nexport const useScrollerProps = () => useContext(ScrollerContext);\r\n\r\nfunction Scroller({ children }: { children: ReactChild | ReactChild[] }) {\r\n  return (\r\n    <WindowScroller>\r\n      {scrollerProps => <ScrollerContext.Provider value={scrollerProps}>{children}</ScrollerContext.Provider>}\r\n    </WindowScroller>\r\n  );\r\n}\r\nexport default Scroller;\r\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const Container = ({ title = undefined, children = undefined as ReactNode, fluid = false }) => (\r\n  <div className={`my-5 container${fluid ? \"-fluid\" : \"\"}`}>\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-12\">\r\n        {title && <h2 className=\"mb-4\">{title}</h2>}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import { useState, useEffect, ReactNode } from \"react\";\r\nimport React from \"react\";\r\nimport { ReactComponentLike } from \"prop-types\";\r\n\r\nexport function Alert({\r\n  className = \"\",\r\n  type = \"info\",\r\n  container = React.Fragment as ReactComponentLike,\r\n  stateName = \"\",\r\n  children = undefined as ReactNode\r\n}) {\r\n  const stateKey = `alertState_${stateName}`;\r\n  const [closed, setClosed] = useState(\r\n    () => stateName && !!localStorage.getItem(stateKey)\r\n  );\r\n  useEffect(() => {\r\n    if (stateName && closed) {\r\n      localStorage.setItem(stateKey, \"true\");\r\n    }\r\n  }, [closed, stateName, stateKey]);\r\n  if (closed) {\r\n    return null;\r\n  }\r\n  const Cont = container;\r\n  return (\r\n    <Cont>\r\n      <div\r\n        className={`alert alert-${type} alert-dismissible fade show ${className}`}\r\n        role=\"alert\"\r\n      >\r\n        {children}\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n          onClick={event => {\r\n            event.preventDefault();\r\n            setClosed(true);\r\n            setTimeout(function() {\r\n              window.dispatchEvent(new UIEvent(\"resize\"));\r\n            }, 1000);\r\n          }}\r\n        >\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n      </div>\r\n    </Cont>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { Alert } from \"../misc/alert\";\r\n\r\nexport function AppHeader() {\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <h1>雀魂牌谱屋</h1>\r\n      </Container>\r\n      <Alert container={Container} stateName=\"topNote\">\r\n        <h4>说明</h4>\r\n        <ul>\r\n          <li>本页面由第三方维护，与雀魂官方无关。</li>\r\n          <li>记录包含雀魂国服四人半庄段位战玉之间及王座之间的牌谱。</li>\r\n          <li>\r\n            正常情况下全部对局都会被记录，但不排除因网络问题遗漏部分对局的情况。另 2019 年 10 月 10 日前因程序 Bug\r\n            每天晚间可能遗漏掉 10% ~ 20% 的对局，此 Bug 目前已经修复。\r\n          </li>\r\n          <li>页面不是实时更新，对局一般会在结束后二十分钟内出现。</li>\r\n          <li>\r\n            如有问题或建议，请戳 <a href=\"mailto:i@sapika.ch\">SAPikachu (i@sapika.ch)</a> 或{\" \"}\r\n            <a href=\"https://github.com/SAPikachu/amae-koromo/\">提交 Issue</a>。\r\n          </li>\r\n        </ul>\r\n      </Alert>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","enum GameMode {\r\n  王座 = 16,\r\n  玉 = 12\r\n}\r\nexport default GameMode;\r\nexport const NUMBER_OF_GAME_MODE = Object.keys(GameMode).filter(\r\n  x => typeof GameMode[x as keyof typeof GameMode] === \"number\"\r\n).length;\r\n","import { MomentInput } from \"moment\";\r\nimport moment from \"moment\";\r\nimport React, { useReducer, useContext, ReactChild } from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport { NUMBER_OF_GAME_MODE } from \"../../utils/gameMode\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nexport interface Model {\r\n  date: MomentInput | null;\r\n  selectedModes: Set<string> | null;\r\n  searchText: string;\r\n  version: number;\r\n}\r\nexport interface ModelPlain {\r\n  date: number | null;\r\n  selectedModes: string[] | null;\r\n  searchText: string;\r\n  version: number;\r\n}\r\nexport const ModelUtils = Object.freeze({\r\n  toPlain: function(model: Model): ModelPlain {\r\n    return {\r\n      date: model.date ? moment(model.date).valueOf() : null,\r\n      searchText: model.searchText,\r\n      selectedModes: model.selectedModes ? Array.from(model.selectedModes) : null,\r\n      version: model.version\r\n    };\r\n  },\r\n  fromPlain: function(model: ModelPlain): Partial<Model> {\r\n    return {\r\n      date: model.date || null,\r\n      searchText: model.searchText || \"\",\r\n      selectedModes: model.selectedModes ? new Set(model.selectedModes) : null\r\n    };\r\n  }\r\n});\r\ntype ModelUpdate = Partial<Model>;\r\ntype DispatchModelUpdate = (props: ModelUpdate) => void;\r\n\r\nconst DEFAULT_MODEL: Model = { date: null, selectedModes: null, searchText: \"\", version: 0 };\r\nconst ModelContext = React.createContext<[Readonly<Model>, DispatchModelUpdate]>([DEFAULT_MODEL, () => {}]);\r\nexport const useModel = () => useContext(ModelContext);\r\n\r\nfunction isSameSet<T>(set: Set<T>, other: Set<T>) {\r\n  if (set.size !== other.size) {\r\n    return false;\r\n  }\r\n  for (const elem of other) {\r\n    if (!set.has(elem)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction normalizeUpdate(newProps: ModelUpdate): ModelUpdate {\r\n  if (newProps.date) {\r\n    newProps.date = moment(newProps.date).valueOf();\r\n  }\r\n  if (newProps.selectedModes && newProps.selectedModes.size >= NUMBER_OF_GAME_MODE) {\r\n    newProps.selectedModes = null;\r\n  }\r\n  return newProps;\r\n}\r\nfunction isChanged(oldModel: Model, newProps: ModelUpdate): boolean {\r\n  if (\r\n    newProps.date !== undefined &&\r\n    newProps.date !== oldModel.date &&\r\n    (!newProps.date || !oldModel.date || !moment(newProps.date).isSame(oldModel.date, \"day\"))\r\n  ) {\r\n    return true;\r\n  }\r\n  if (newProps.searchText !== undefined && newProps.searchText !== oldModel.searchText) {\r\n    return true;\r\n  }\r\n  let newSelectedModes = newProps.selectedModes;\r\n  if (newSelectedModes && newSelectedModes.size >= NUMBER_OF_GAME_MODE) {\r\n    newSelectedModes = null;\r\n  }\r\n  if (newSelectedModes !== undefined && newSelectedModes !== oldModel.selectedModes) {\r\n    if (!newSelectedModes || !oldModel.selectedModes) {\r\n      return true;\r\n    }\r\n    if (isSameSet(oldModel.selectedModes, newSelectedModes)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function ModelProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const location = useLocation();\r\n  const [model, updateModel] = useReducer(\r\n    (oldModel: Model, newProps: ModelUpdate): Model =>\r\n      isChanged(oldModel, newProps)\r\n        ? { ...oldModel, ...normalizeUpdate(newProps), version: oldModel.version + 1 }\r\n        : oldModel,\r\n    null,\r\n    (): Model => ({ ...DEFAULT_MODEL, ...ModelUtils.fromPlain((location.state || {}).model || {}), version: 0 })\r\n  );\r\n  const value: [Model, DispatchModelUpdate] = useMemo(() => [model, updateModel], [model, updateModel]);\r\n  return <ModelContext.Provider value={value}>{children}</ModelContext.Provider>;\r\n}\r\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport { useParams, useLocation, Redirect } from \"react-router\";\nimport { useModel, Model, ModelPlain, ModelUtils } from './model';\nimport { generatePath } from \"./routes\";\n\ntype RouteParams = {\n  date?: string;\n  modes?: string;\n  search?: string;\n};\n\ntype HistoryState = {\n  path: string;\n  model: ModelPlain;\n};\n\nexport function RouteSync(): React.FunctionComponentElement<any> {\n  const params = useParams<RouteParams>();\n  const [model, updateModel] = useModel();\n  const location = useLocation<HistoryState>();\n  const state = location.state;\n  if (state && state.model.version === model.version) {\n    return <></>;\n  }\n  if (!state) {\n    const date = params.date ? moment(params.date, \"YYYY-MM-DD\") : null;\n    if (date && !date.isValid()) {\n      return <Redirect to=\"/\" />;\n    }\n    const modes = params.modes\n      ? new Set(\n          params.modes\n            .split(\".\")\n            .map(x => x.trim())\n            .filter(x => !!x)\n        )\n      : null;\n    const newModel: Model = {\n      date: date ? date.startOf(\"day\").valueOf() : null,\n      selectedModes: modes,\n      searchText: params.search || \"\",\n      version: model.version\n    };\n    updateModel(newModel);\n    return <Redirect to={{ pathname: location.pathname, state: { path: location.pathname, model: ModelUtils.toPlain(newModel) } }} />;\n  }\n  const newPath = generatePath(model);\n  if (newPath === state.path) {\n    return <></>;\n  }\n  return <Redirect to={{ pathname: newPath, state: { path: newPath, model: ModelUtils.toPlain(model) } }} />;\n}\n","import React from \"react\";\n\nimport { Switch, Route, Redirect, generatePath as genPath } from \"react-router-dom\";\n\nimport { Model, ModelProvider } from \"./model\";\nimport moment from \"moment\";\nimport { RouteSync } from \"./routeSync\";\nimport { DataAdapterProvider } from \"./dataAdapterProvider\";\nimport { GameRecordTable } from \"./table\";\nimport { FilterPanel } from \"./filterPanel\";\n\nconst PATH = \"/:date(\\\\d{4}-\\\\d{2}-\\\\d{2})/:modes([0-9.]+)?/:search?\";\n\nexport function generatePath(model: Model): string {\n  if ((!model.selectedModes || !model.selectedModes.size) && !model.searchText && !model.date) {\n    return \"/\";\n  }\n  return genPath(PATH, {\n    date: moment(model.date || new Date()).format(\"YYYY-MM-DD\"),\n    modes: model.selectedModes && model.selectedModes.size ? Array.from(model.selectedModes).join(\".\") : undefined,\n    search: model.searchText || undefined\n  });\n}\n\nfunction Routes() {\n  return (\n    <ModelProvider>\n      <RouteSync />\n      <FilterPanel />\n      <DataAdapterProvider>\n        <Switch>\n          <Route exact path={[\"/\", PATH]}>\n            <GameRecordTable />\n          </Route>\n          <Route>\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </DataAdapterProvider>\n    </ModelProvider>\n  );\n}\nexport default Routes;\n","export const DATA_ROOT = \"https://d2ek5tscv4zquv.cloudfront.net/\";\r\nexport const API_ROOT = `${DATA_ROOT}api/`;\r\n","import moment from \"moment\";\r\n\r\nimport { DATA_ROOT, API_ROOT } from \"./constants\";\r\nimport GameMode from \"./gameMode\";\r\n\r\nexport { default as GameMode, NUMBER_OF_GAME_MODE } from \"./gameMode\";\r\n\r\nexport const PLAYER_RANKS = \"初士杰豪圣魂\";\r\n\r\nexport interface PlayerRecord {\r\n  accountId: number;\r\n  nickname: string;\r\n  level: number;\r\n  score: number;\r\n}\r\nexport interface GameRecord {\r\n  modeId: GameMode;\r\n  uuid: string;\r\n  startTime: number;\r\n  endTime: number;\r\n  players: PlayerRecord[];\r\n}\r\ninterface CouchDbViewRow<T> {\r\n  id: string;\r\n  key: any;\r\n  value: T;\r\n}\r\ninterface CouchDbViewResponse<T> {\r\n  total_rows: number;\r\n  offset: number;\r\n  rows: CouchDbViewRow<T>[];\r\n}\r\n\r\nconst DATA_CACHE_MS = 120000;\r\nexport async function fetchGameRecords(date: moment.MomentInput): Promise<GameRecord[]> {\r\n  const dateString = moment(date).format(\"YYMMDD\");\r\n  const isToday = moment(date).isSame(moment(), \"day\");\r\n  const cacheTag = `gameRecord${isToday ? \"Today\" : dateString}`;\r\n  const timestamp = new Date().getTime();\r\n  const lastUpdateTimestamp = parseInt(sessionStorage.lastUpdateTimestamp || \"0\", 10);\r\n  const cacheExpired = isToday && timestamp > lastUpdateTimestamp + DATA_CACHE_MS;\r\n  if (cacheExpired) {\r\n    sessionStorage.removeItem(cacheTag);\r\n    sessionStorage.setItem(\"lastUpdateTimestamp\", timestamp.toString());\r\n  }\r\n  if (sessionStorage[cacheTag]) {\r\n    return Promise.resolve(JSON.parse(sessionStorage[cacheTag]));\r\n  }\r\n  try {\r\n    const resp = await fetch(`${DATA_ROOT}records/${dateString}.json?t=${cacheTag}`);\r\n    const ret = Object.values(await resp.json()) as GameRecord[];\r\n    ret.sort((a, b) => b.endTime - a.endTime);\r\n    const cacheData = JSON.stringify(ret);\r\n    try {\r\n      sessionStorage.setItem(cacheTag, cacheData);\r\n    } catch (e) {\r\n      sessionStorage.clear();\r\n      sessionStorage.setItem(cacheTag, cacheData);\r\n    }\r\n    return ret;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n}\r\nexport type FilterPredicate = ((record: GameRecord) => boolean) | null;\r\nexport class DataProvider {\r\n  _date: moment.Moment;\r\n  _count: number | Promise<number> | null;\r\n  _chunks: (GameRecord[] | Promise<GameRecord[]>)[];\r\n  _itemsPerChunk: number;\r\n  _filterPredicate: FilterPredicate;\r\n  _filteredIndices: number[] | null;\r\n  _filterResultCache: { [uuid: string]: boolean };\r\n\r\n  constructor(date: moment.MomentInput, itemsPerChunk = 100) {\r\n    this._date = moment(date).startOf(\"day\");\r\n    this._count = null;\r\n    this._chunks = [];\r\n    this._itemsPerChunk = itemsPerChunk;\r\n    this._filterPredicate = null;\r\n    this._filteredIndices = null;\r\n    this._filterResultCache = {};\r\n  }\r\n  async _apiGet<T>(path: string) {\r\n    const resp = await fetch(API_ROOT + path);\r\n    if (!resp.ok) {\r\n      throw resp;\r\n    }\r\n    return (await resp.json()) as T;\r\n  }\r\n  setFilterPredicate(predicate: FilterPredicate) {\r\n    if (this._filterPredicate === predicate) {\r\n      return;\r\n    }\r\n    this._filterPredicate = predicate;\r\n    this._filterResultCache = {};\r\n    this.updateFilteredIndices();\r\n  }\r\n  updateFilteredIndices() {\r\n    this._filteredIndices = null;\r\n    if (!this._filterPredicate) {\r\n      return;\r\n    }\r\n    const count = this._count;\r\n    if (typeof count !== \"number\") {\r\n      return;\r\n    }\r\n    let numShownItems = 0;\r\n    let numLoadedItems = 0;\r\n    const indices = [];\r\n    for (let i = 0; i < count; i++) {\r\n      const chunk = this._chunks[Math.floor(i / this._itemsPerChunk)];\r\n      if (!chunk || chunk instanceof Promise) {\r\n        indices.push(i);\r\n        continue;\r\n      }\r\n      numLoadedItems++;\r\n      const game = chunk[i % this._itemsPerChunk];\r\n      let result = this._filterResultCache[game.uuid];\r\n      if (result === undefined) {\r\n        this._filterResultCache[game.uuid] = result = this._filterPredicate(game);\r\n      }\r\n      if (result) {\r\n        indices.push(i);\r\n        numShownItems++;\r\n      }\r\n    }\r\n    this._filteredIndices = indices;\r\n    if (numShownItems < 10 && numLoadedItems >= this._itemsPerChunk) {\r\n      this._triggerFullLoad();\r\n    }\r\n  }\r\n  getCountMaybeSync(): number | Promise<number> {\r\n    if (this._count === null) {\r\n      return this.getCount();\r\n    }\r\n    return this._filteredIndices ? this._filteredIndices.length : this._count;\r\n  }\r\n  async getCount(): Promise<number> {\r\n    if (this._count === null) {\r\n      this._count = (async () => {\r\n        const resp = await this._apiGet<{ count: number }>(`count/${this._date.valueOf()}`);\r\n        this._count = resp.count;\r\n        this.updateFilteredIndices();\r\n        return this.getCountMaybeSync();\r\n      })();\r\n    }\r\n    return this.getCountMaybeSync();\r\n  }\r\n  getUnfilteredCountSync(): number | null {\r\n    if (typeof this._count !== \"number\") {\r\n      return null;\r\n    }\r\n    return this._count;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    const mappedIndex = this._mapItemIndex(index);\r\n    if (mappedIndex === null) {\r\n      return false;\r\n    }\r\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\r\n    return !!this._chunks[chunkNumber] && !(this._chunks[chunkNumber] instanceof Promise);\r\n  }\r\n  getItem(index: number, skipPreload = false): GameRecord | Promise<GameRecord> {\r\n    const mappedIndex = this._mapItemIndex(index);\r\n    if (mappedIndex === null) {\r\n      return this.getCount().then(() => this.getItem(index));\r\n    }\r\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\r\n    const innerIndex = mappedIndex % this._itemsPerChunk;\r\n    const chunk = this._chunks[chunkNumber];\r\n    if (!chunk || chunk instanceof Promise) {\r\n      return this._getChunk(chunkNumber).then(chunk => chunk[innerIndex]);\r\n    }\r\n    if (!skipPreload && !this._filteredIndices) {\r\n      this.preload(index + this._itemsPerChunk);\r\n    }\r\n    return chunk[innerIndex];\r\n  }\r\n  preload(index: number) {\r\n    const count = this.getCountMaybeSync();\r\n    if (count instanceof Promise) {\r\n      return;\r\n    }\r\n    if (index >= count) {\r\n      return;\r\n    }\r\n    this.getItem(index, true);\r\n  }\r\n  _mapItemIndex(requestedIndex: number): number | null {\r\n    const count = this.getCountMaybeSync();\r\n    if (count instanceof Promise) {\r\n      return null;\r\n    }\r\n    if (requestedIndex < 0) {\r\n      return null;\r\n    }\r\n    // Descending order\r\n    const reversed = count - requestedIndex - 1;\r\n    if (reversed < 0) {\r\n      return null;\r\n    }\r\n    return this._filteredIndices ? this._filteredIndices[reversed] : reversed;\r\n  }\r\n  async _getChunk(chunkIndex: number): Promise<GameRecord[]> {\r\n    if (!this._chunks[chunkIndex]) {\r\n      this._chunks[chunkIndex] = this._loadChunk(chunkIndex);\r\n    }\r\n    return this._chunks[chunkIndex];\r\n  }\r\n  _triggerFullLoad() {\r\n    const count = this.getCountMaybeSync();\r\n    if (typeof count !== \"number\") {\r\n      return;\r\n    }\r\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\r\n    for (let i = 0; i < numChunks; i++) {\r\n      if (this._chunks[i]) {\r\n        continue;\r\n      }\r\n      this._getChunk(i);\r\n    }\r\n  }\r\n  async _loadChunk(chunkIndex: number): Promise<GameRecord[]> {\r\n    const count = await this.getCount();\r\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\r\n    if (!numChunks) {\r\n      return [];\r\n    }\r\n    if (chunkIndex >= numChunks) {\r\n      console.warn(`Loading out-of-index chunk: ${chunkIndex}, number of items: ${this._count}`);\r\n      return [];\r\n    }\r\n    const chunk = await this._apiGet<GameRecord[]>(\r\n      `games/${this._date.valueOf()}?skip=${this._itemsPerChunk * chunkIndex}&limit=${this._itemsPerChunk}&tag=${\r\n        chunkIndex === numChunks - 1 ? count : \"\"\r\n      }`,\r\n    );\r\n    if (chunk.length < this._itemsPerChunk && chunkIndex < numChunks - 1) {\r\n      console.warn(\"Unexpected number of items in chunk:\", chunk.length);\r\n    }\r\n    this._chunks[chunkIndex] = chunk;\r\n    this.updateFilteredIndices();\r\n    return chunk;\r\n  }\r\n}\r\n","import { useState, useEffect, useMemo, useCallback, useContext } from \"react\";\r\nimport React, { ReactChild } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport { DataProvider, GameRecord, NUMBER_OF_GAME_MODE, FilterPredicate } from \"../../utils/dataSource\";\r\nimport { useModel } from \"./model\";\r\n\r\nconst dateToProviderKey = (date: moment.MomentInput) =>\r\n  moment(date)\r\n    .startOf(\"day\")\r\n    .valueOf()\r\n    .toString();\r\n\r\ninterface ItemLoadingPlaceholder {\r\n  loading: boolean;\r\n}\r\n\r\nconst loadingPlaceholder = { loading: true };\r\n\r\nexport interface IDataAdapter {\r\n  getCount(): number;\r\n  getUnfilteredCount(): number;\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder;\r\n  isItemLoaded(index: number): boolean;\r\n}\r\n\r\nclass _DummyDataAdapter implements IDataAdapter {\r\n  getCount(): number {\r\n    return 0;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return 0;\r\n  }\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder {\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const DUMMY_DATA_ADAPTER = new _DummyDataAdapter() as IDataAdapter;\r\n\r\nconst noop = () => {};\r\n\r\nclass DataAdapter implements IDataAdapter {\r\n  _provider: DataProvider;\r\n  _onDataUpdate: () => void;\r\n  _triggeredRequest: boolean;\r\n\r\n  constructor(provider: DataProvider, onDataUpdate = noop) {\r\n    this._provider = provider;\r\n    this._onDataUpdate = onDataUpdate;\r\n    this._triggeredRequest = false;\r\n  }\r\n  _installHook(promise: Promise<any>) {\r\n    if (this._triggeredRequest) {\r\n      return;\r\n    }\r\n    this._triggeredRequest = true;\r\n    promise.then(this._callHook.bind(this));\r\n  }\r\n  _callHook() {\r\n    this._onDataUpdate();\r\n  }\r\n  getCount(): number {\r\n    const maybeCount = this._provider.getCountMaybeSync();\r\n    if (maybeCount instanceof Promise) {\r\n      this._installHook(maybeCount);\r\n      return 0;\r\n    }\r\n    return maybeCount;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return this._provider.getUnfilteredCountSync() || 0;\r\n  }\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder {\r\n    if (this._provider.isItemLoaded(index)) {\r\n      return this._provider.getItem(index) as GameRecord;\r\n    }\r\n    if (!this._triggeredRequest) {\r\n      this._installHook(this._provider.getItem(index) as Promise<GameRecord>);\r\n    }\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    if (index < 0) {\r\n      return false;\r\n    }\r\n    return this._provider.isItemLoaded(index);\r\n  }\r\n  setUpdateHook(hook: () => void) {\r\n    this._onDataUpdate = hook;\r\n  }\r\n  cancelUpdateHook() {\r\n    this._onDataUpdate = noop;\r\n  }\r\n}\r\n\r\nconst DataAdapterContext = React.createContext(DUMMY_DATA_ADAPTER);\r\n\r\nexport const useDataAdapter = () => useContext(DataAdapterContext);\r\nexport const DataAdapterConsumer = DataAdapterContext.Consumer;\r\n\r\nexport function DataAdapterProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const [model] = useModel();\r\n  const date = model.date || moment();\r\n  const [dataProviders] = useState(() => ({ [dateToProviderKey(date)]: new DataProvider(date) }));\r\n  const searchText = (model.searchText || \"\").trim();\r\n  const searchPredicate: FilterPredicate = useMemo(\r\n    () =>\r\n      searchText || (model.selectedModes && model.selectedModes.size < NUMBER_OF_GAME_MODE)\r\n        ? game => {\r\n            if (model.selectedModes && !model.selectedModes.has(game.modeId.toString())) {\r\n              return false;\r\n            }\r\n            if (searchText && !game.players.some(player => player.nickname.toLowerCase().indexOf(searchText) > -1)) {\r\n              return false;\r\n            }\r\n            return true;\r\n          }\r\n        : null,\r\n    [model.selectedModes, searchText]\r\n  );\r\n  const dataProvider = useMemo(() => {\r\n    const key = dateToProviderKey(date);\r\n    if (!dataProviders[key]) {\r\n      dataProviders[key] = new DataProvider(date);\r\n    }\r\n    return dataProviders[key];\r\n  }, [date, dataProviders]);\r\n  const [dataAdapter, setDataAdapter] = useState(() => DUMMY_DATA_ADAPTER);\r\n  const refreshDataAdapter = useCallback(() => {\r\n    dataProvider.setFilterPredicate(searchPredicate);\r\n    const adapter = new DataAdapter(dataProvider);\r\n    setDataAdapter(adapter);\r\n  }, [dataProvider, searchPredicate]);\r\n  useEffect(refreshDataAdapter, [refreshDataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      return () => adapter.cancelUpdateHook();\r\n    }\r\n  }, [dataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      adapter.setUpdateHook(refreshDataAdapter);\r\n    }\r\n  }, [dataAdapter, refreshDataAdapter]);\r\n  return <DataAdapterContext.Provider value={dataAdapter}>{children}</DataAdapterContext.Provider>;\r\n}\r\n","import React from \"react\";\r\n\r\nimport { getLevelTag } from \"../../utils\";\r\nimport { GameRecord, PlayerRecord } from \"../../utils/dataSource\";\r\n\r\nconst encodeAccountId = (t: number) => 1358437 + ((7 * t + 1117113) ^ 86216345);\r\n\r\nexport const Player = function({\r\n  player: { nickname, level, score, accountId },\r\n  game: { uuid },\r\n  isTop,\r\n}: {\r\n  player: PlayerRecord;\r\n  game: GameRecord;\r\n  isTop: boolean;\r\n}) {\r\n  return (\r\n    <div className={`player ${isTop && \"font-weight-bold\"}`}>\r\n      <a href={`https://www.majsoul.com/1/?paipu=${uuid}_a${encodeAccountId(accountId)}`} target=\"_blank\">\r\n        [{getLevelTag(level)}] {nickname} {score !== undefined && `[${score}]`}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n","import { PLAYER_RANKS } from \"./dataSource\";\r\nimport { SyntheticEvent } from \"react\";\r\n\r\nexport function getLevelTag(levelId: number) {\r\n  const realId = levelId % 10000;\r\n  const majorRank = Math.floor(realId / 100);\r\n  const minorRank = realId % 100;\r\n  const label = PLAYER_RANKS[majorRank - 1];\r\n  if (majorRank === PLAYER_RANKS.length) {\r\n    return label;\r\n  }\r\n  return label + minorRank;\r\n}\r\n\r\ninterface WithEventTargetReducer<T> {\r\n  _cachedEventTargetReducer?: (_: T) => any;\r\n}\r\nexport function eventTargetReducer<TElem extends EventTarget, TEvent extends SyntheticEvent<TElem>>(\r\n  func: NonNullable<(_: TElem) => any>,\r\n): NonNullable<(_: TEvent) => any> {\r\n  const withStore = func as WithEventTargetReducer<TEvent>;\r\n  if (!withStore._cachedEventTargetReducer) {\r\n    withStore._cachedEventTargetReducer = (event: TEvent) => func(event.currentTarget);\r\n  }\r\n  return withStore._cachedEventTargetReducer;\r\n}\r\n","import React from \"react\";\r\nimport { Table, Column, AutoSizer } from \"react-virtualized\";\r\nimport moment from \"moment\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { GameRecord, GameMode } from \"../../utils/dataSource\";\r\nimport { Player } from \"./player\";\r\nimport { useScrollerProps } from \"../misc/scroller\";\r\nimport { useDataAdapter } from \"./dataAdapterProvider\";\r\n\r\nconst formatTime = (x: number) => (x ? moment.unix(x).format(\"HH:mm\") : null);\r\n\r\nconst Players = React.memo(({ game }: { game: GameRecord }) => (\r\n  <div className=\"row no-gutters\">\r\n    {game.players.map(x => (\r\n      <div key={x.accountId} className=\"col-12 col-md-6 pr-1\">\r\n        <Player game={game} player={x} isTop={x.score === Math.max(...game.players.map(x => x.score))} />\r\n      </div>\r\n    ))}\r\n  </div>\r\n));\r\n\r\nexport function GameRecordTable() {\r\n  const data = useDataAdapter();\r\n  const scrollerProps = useScrollerProps();\r\n  const { isScrolling, onChildScroll, scrollTop, height } = scrollerProps;\r\n  return (\r\n    <div ref={scrollerProps.registerChild as any}>\r\n      <AutoSizer disableHeight>\r\n        {({ width }) => (\r\n          <Table\r\n            autoHeight\r\n            rowCount={data.getCount()}\r\n            rowGetter={({ index }) => data.getItem(index)}\r\n            rowHeight={window.matchMedia(\"(min-width: 768px)\").matches ? 70 : 140}\r\n            headerHeight={50}\r\n            width={width}\r\n            height={height}\r\n            isScrolling={isScrolling}\r\n            onScroll={onChildScroll}\r\n            scrollTop={scrollTop}\r\n            rowClassName={({ index }) =>\r\n              index >= 0 ? clsx({ loading: !data.isItemLoaded(index), even: (index & 1) === 0 }) : \"\"\r\n            }\r\n            noRowsRenderer={() => (data.getUnfilteredCount() ? null : <p className=\"text-center\">加载中...</p>)}\r\n          >\r\n            <Column dataKey=\"modeId\" label=\"等级\" cellRenderer={({ cellData }) => GameMode[cellData]} width={40} />\r\n            <Column\r\n              dataKey=\"players\"\r\n              label=\"玩家\"\r\n              cellRenderer={({ rowData }) => (rowData && rowData.players ? <Players game={rowData} /> : null)}\r\n              width={120}\r\n              flexGrow={1}\r\n            />\r\n            <Column dataKey=\"startTime\" label=\"开始\" cellRenderer={({ cellData }) => formatTime(cellData)} width={40} />\r\n            <Column dataKey=\"endTime\" label=\"结束\" cellRenderer={({ cellData }) => formatTime(cellData)} width={40} />\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport interface CheckboxItem {\r\n  key: string;\r\n  label: string;\r\n}\r\n\r\nexport function CheckboxGroup({\r\n  items = [] as CheckboxItem[],\r\n  selectedItemKeys = null as Set<string> | null,\r\n  groupKey = \"default\",\r\n  onChange = (selectedItemKeys: Set<string>) => {}\r\n}) {\r\n  const setSelected = function(key: string, isSelected: boolean) {\r\n    if (isSelected && (!selectedItemKeys || selectedItemKeys.has(key))) {\r\n      return;\r\n    }\r\n    if (!isSelected && selectedItemKeys && !selectedItemKeys.has(key)) {\r\n      return;\r\n    }\r\n    const newSet = new Set(selectedItemKeys || items.map(x => x.key));\r\n    if (isSelected) {\r\n      newSet.add(key);\r\n    } else {\r\n      newSet.delete(key);\r\n    }\r\n    onChange(newSet);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {items.map(item => (\r\n        <div className=\"form-check form-check-inline\" key={item.key}>\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            id={`CG_${groupKey}_${item.key}`}\r\n            value={item.key}\r\n            checked={!selectedItemKeys || selectedItemKeys.has(item.key)}\r\n            onChange={event => setSelected(item.key, event.currentTarget.checked)}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor={`CG_${groupKey}_${item.key}`}>\r\n            {item.label}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport { useCallback } from \"react\";\r\nimport { MomentInput } from \"moment\";\r\n\r\nexport function DatePicker({\r\n  date = moment() as MomentInput,\r\n  onChange = (_: MomentInput) => {},\r\n  className = \"\",\r\n  min = undefined as MomentInput,\r\n  max = moment() as MomentInput\r\n}) {\r\n  const handleChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => onChange(moment(e.currentTarget.value, \"YYYY-MM-DD\")),\r\n    [onChange]\r\n  );\r\n  return (\r\n    <input\r\n      className={className}\r\n      type=\"date\"\r\n      value={moment(date).format(\"YYYY-MM-DD\")}\r\n      min={min ? moment(min).format(\"YYYY-MM-DD\") : undefined}\r\n      max={max ? moment(max).format(\"YYYY-MM-DD\") : undefined}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const FormRow = ({ title = \"\", children = undefined as ReactNode }) => (\r\n  <div className=\"form-group row\">\r\n    <label className=\"col-sm-2 col-form-label\">{title}</label>\r\n    <div className=\"col-sm-10\">{children}</div>\r\n  </div>\r\n);\r\n","import { useCallback } from \"react\";\r\nimport React from \"react\";\r\n\r\nimport { FormRow, DatePicker, CheckboxGroup } from \"../form\";\r\nimport { GameMode } from \"../../utils/dataSource\";\r\nimport { useModel } from \"./model\";\r\nimport { MomentInput } from \"moment\";\r\nimport moment from \"moment\";\r\n\r\nexport const MODE_CHECKBOXES = Object.keys(GameMode)\r\n  .filter(x => typeof GameMode[x as keyof typeof GameMode] !== \"string\")\r\n  .map(x => ({\r\n    key: String(GameMode[x as keyof typeof GameMode]),\r\n    label: x\r\n  }));\r\n\r\nconst DEFAULT_DATE = moment().startOf(\"day\");\r\n\r\nexport function FilterPanel() {\r\n  const [model, updateModel] = useModel();\r\n  const updateSearchTextFromEvent = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => updateModel({ searchText: e.currentTarget.value }),\r\n    [updateModel]\r\n  );\r\n  const setSelectedItems = useCallback(\r\n    (selectedItemKeys: Set<string>) => updateModel({ selectedModes: selectedItemKeys }),\r\n    [updateModel]\r\n  );\r\n  const setDate = useCallback((date: MomentInput) => updateModel({ date }), [updateModel]);\r\n  return (\r\n    <React.Fragment>\r\n      <FormRow title=\"日期\">\r\n        <DatePicker min=\"2019-08-23\" date={model.date || DEFAULT_DATE} onChange={setDate} className=\"form-control\" />\r\n      </FormRow>\r\n      <FormRow title=\"查找玩家\">\r\n        <input type=\"text\" className=\"form-control\" value={model.searchText} onChange={updateSearchTextFromEvent} />\r\n      </FormRow>\r\n      <FormRow>\r\n        <CheckboxGroup items={MODE_CHECKBOXES} selectedItemKeys={model.selectedModes} onChange={setSelectedItems} />\r\n      </FormRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Scroller from \"../misc/scroller\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { AppHeader } from \"./appHeader\";\r\nimport GameRecords from \"../gameRecords\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Scroller>\r\n        <AppHeader />\r\n        <Container>\r\n          <Switch>\r\n            <Route exact path={[\"/\", \"/:date(\\\\d{4}-\\\\d{2}-\\\\d{2})/:modes([0-9.]+)?/:search?\"]}>\r\n              <GameRecords />\r\n            </Route>\r\n            <Route>\r\n              <Redirect to=\"/\" />\r\n            </Route>\r\n          </Switch>\r\n        </Container>\r\n      </Scroller>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-virtualized/styles.css\";\nimport \"./styles.css\";\n\nimport App from \"./components/app\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement)\n"],"sourceRoot":""}