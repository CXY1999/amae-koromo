{"version":3,"sources":["components/gameRecords/playerDetails.tsx"],"names":["DateRangeOptions","RankRateChart","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","loading","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_misc_loading__WEBPACK_IMPORTED_MODULE_8__","RecentRankChart","DATE_RANGE_ITEMS","Object","keys","map","key","label","PlayerDetailsSettings","_ref","_ref$showLevel","showLevel","_useModel","useModel","_useModel2","_home_travis_build_SAPikachu_amae_koromo_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","model","updateModel","_useState","useState","type","All","startDate","endDate","dayjs","isSame","subtract","Custom","Last4Weeks","_useState2","mode","setMode","_useState3","DATE_MIN","_useState4","customDateFrom","setCustomDateFrom","_useState5","_useState6","customDateTo","setCustomDateTo","useEffect","playerId","selectedMode","undefined","setSelectedMode","useCallback","className","_form_formRow__WEBPACK_IMPORTED_MODULE_9__","title","inline","_form__WEBPACK_IMPORTED_MODULE_11__","selectedItemKey","items","groupKey","onChange","Fragment","min","date","_modeSelector__WEBPACK_IMPORTED_MODULE_13__","StatItem","_ref2","description","_ref2$className","children","concat","PlayerExtendedStatsView","_ref3","maybeStats","stats","useAsync","triggerRelayout","formatPercent","和牌率","自摸率","放铳率","流局率","流听率","副露率","立直率","平均打点","平均铳点","和了巡数","toFixed","最大连庄","EstimatedStableLevel","_ref4","metadata","_useModel3","parseInt","LevelWithDelta","getTag","level","GameMode","王座","玉","notEnoughData","count","PlayerMetadata","estimateStableLevel","calculateExpectedGamePoint","PlayerDetails","dataAdapter","useDataAdapter","getMetadata","nickname","react_helmet__WEBPACK_IMPORTED_MODULE_3__","TITLE_PREFIX","id","aspect","formatAdjustedScore","extended_stats","avg_rank","negative_rate"],"mappings":"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","file":"static/js/4.b5ef9a8a.chunk.js","sourcesContent":["import React from \"react\";\nimport Loadable from \"react-loadable\";\nimport { Helmet } from \"react-helmet\";\n\nimport { useDataAdapter } from \"./dataAdapterProvider\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { triggerRelayout, formatPercent, useAsync } from \"../../utils/index\";\nimport { LevelWithDelta, PlayerExtendedStats, PlayerMetadata, GameMode } from \"../../utils/dataTypes\";\nimport { TITLE_PREFIX, DATE_MIN } from \"../../utils/constants\";\nimport Loading from \"../misc/loading\";\nimport { FormRow } from \"../form/formRow\";\nimport { useModel } from \"./model\";\nimport { CheckboxGroup, DatePicker } from \"../form\";\nimport dayjs from \"dayjs\";\nimport { ModeSelector } from \"./modeSelector\";\nconst RankRateChart = Loadable({\n  loader: () => import(\"./charts/rankRate\"),\n  loading: () => <Loading />\n});\nconst RecentRankChart = Loadable({\n  loader: () => import(\"./charts/recentRank\"),\n  loading: () => <Loading />\n});\n\nenum DateRangeOptions {\n  All = \"全部\",\n  Last4Weeks = \"最近四周\",\n  Custom = \"自定义\"\n}\nconst DATE_RANGE_ITEMS = Object.keys(DateRangeOptions).map((key: string) => ({\n  key: DateRangeOptions[key as keyof typeof DateRangeOptions],\n  label: DateRangeOptions[key as keyof typeof DateRangeOptions]\n}));\n\nfunction PlayerDetailsSettings({ showLevel = false }) {\n  const [model, updateModel] = useModel();\n  const [mode, setMode] = useState(() => {\n    if (model.type !== \"player\") {\n      return DateRangeOptions.All;\n    }\n    if (!model.startDate) {\n      return DateRangeOptions.All;\n    }\n    if (\n      (!model.endDate || dayjs(model.endDate).isSame(dayjs(), \"day\")) &&\n      dayjs(model.startDate).isSame(dayjs().subtract(27, \"day\"), \"day\")\n    ) {\n      return DateRangeOptions.Last4Weeks;\n    }\n    return DateRangeOptions.Custom;\n  });\n  const [customDateFrom, setCustomDateFrom] = useState(() =>\n    model.type === \"player\" && model.startDate ? model.startDate : DATE_MIN\n  );\n  const [customDateTo, setCustomDateTo] = useState(() =>\n    model.type === \"player\" && model.endDate ? model.endDate : dayjs()\n  );\n  useEffect(() => {\n    if (model.type !== \"player\") {\n      return;\n    }\n    switch (mode) {\n      case DateRangeOptions.All:\n        updateModel({\n          type: \"player\",\n          playerId: model.playerId,\n          startDate: null,\n          endDate: null,\n          selectedMode: undefined\n        });\n        break;\n      case DateRangeOptions.Last4Weeks:\n        updateModel({\n          type: \"player\",\n          playerId: model.playerId,\n          startDate: dayjs().subtract(27, \"day\"),\n          endDate: null\n        });\n        break;\n      case DateRangeOptions.Custom:\n        updateModel({\n          type: \"player\",\n          playerId: model.playerId,\n          startDate: customDateFrom,\n          endDate: customDateTo\n        });\n        break;\n    }\n  }, [model, mode, customDateFrom, customDateTo]);\n  const setSelectedMode = useCallback(mode => updateModel({ type: \"player\", selectedMode: mode }), [updateModel]);\n  return (\n    <div className=\"row\">\n      <div className=\"col-6\">\n        <FormRow title=\"时间\" inline={true}>\n          <CheckboxGroup\n            type=\"radio\"\n            selectedItemKey={mode}\n            items={DATE_RANGE_ITEMS}\n            groupKey=\"PlayerDetailsDateRangeSelector\"\n            onChange={setMode as (x: string) => void}\n          />\n          {mode === DateRangeOptions.Custom ? (\n            <>\n              <DatePicker min={DATE_MIN} onChange={setCustomDateFrom} date={customDateFrom} className=\"form-control\" />\n              <DatePicker min={DATE_MIN} onChange={setCustomDateTo} date={customDateTo} className=\"form-control\" />\n            </>\n          ) : null}\n        </FormRow>\n      </div>\n      {showLevel && (\n        <div className=\"col-6\">\n          <FormRow title=\"等级\" inline={true}>\n            <ModeSelector mode={model.selectedMode} onChange={setSelectedMode} />\n          </FormRow>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction StatItem({\n  label,\n  description,\n  className = \"\",\n  children\n}: {\n  label: string;\n  description?: string;\n  className?: string;\n  children: React.ReactChild;\n}) {\n  return (\n    <>\n      <dt className={`col-2 col-lg-1 text-nowrap ${className}`} title={description || \"\"}>\n        {label}\n      </dt>\n      <dd className={`col-4 col-lg-3 text-right ${className}`}>{children}</dd>\n    </>\n  );\n}\n\nfunction PlayerExtendedStatsView({ maybeStats }: { maybeStats: PlayerExtendedStats | Promise<PlayerExtendedStats> }) {\n  const stats = useAsync(maybeStats);\n  useEffect(triggerRelayout, [!!stats]);\n  if (!stats) {\n    return null;\n  }\n  return (\n    <>\n      <StatItem label=\"和牌率\" description=\"和牌局数 / 总局数\">\n        {formatPercent(stats.和牌率 || 0)}\n      </StatItem>\n      <StatItem label=\"自摸率\" description=\"自摸局数 / 和牌局数\">\n        {formatPercent(stats.自摸率 || 0)}\n      </StatItem>\n      <StatItem label=\"放铳率\" description=\"放铳局数 / 总局数\">\n        {formatPercent(stats.放铳率 || 0)}\n      </StatItem>\n      <StatItem label=\"流局率\" description=\"流局局数 / 总局数\">\n        {formatPercent(stats.流局率 || 0)}\n      </StatItem>\n      <StatItem label=\"流听率\" description=\"流局听牌局数 / 流局局数\">\n        {formatPercent(stats.流听率 || 0)}\n      </StatItem>\n      <StatItem label=\"副露率\" description=\"副露局数 / 总局数\">\n        {formatPercent(stats.副露率 || 0)}\n      </StatItem>\n      <StatItem label=\"立直率\" description=\"立直局数 / 总局数\">\n        {formatPercent(stats.立直率 || 0)}\n      </StatItem>\n      <StatItem label=\"平均打点\">{stats.平均打点 || 0}</StatItem>\n      <StatItem label=\"平均铳点\">{stats.平均铳点 || 0}</StatItem>\n      <StatItem label=\"和了巡数\">{(stats.和了巡数 || 0).toFixed(3)}</StatItem>\n      <StatItem label=\"最大连庄\">{stats.最大连庄 || 0}</StatItem>\n    </>\n  );\n}\n\nfunction EstimatedStableLevel({ metadata }: { metadata: PlayerMetadata }) {\n  const [model] = useModel();\n  const mode = model.selectedMode\n    ? (parseInt(model.selectedMode) as GameMode)\n    : LevelWithDelta.getTag(metadata.level) === \"魂\"\n    ? GameMode.王座\n    : GameMode.玉;\n  const notEnoughData = metadata.count < 100;\n  return (\n    <>\n      <StatItem\n        label=\"安定段位\"\n        description={`在${GameMode[mode]}之间一直进行对局，预测最终能达到的段位`}\n        className={notEnoughData ? \"font-italic font-lighter text-muted\" : \"\"}\n      >\n        <span title={notEnoughData ? \"数据量不足，计算结果可能有较大偏差\" : \"\"}>\n          {PlayerMetadata.estimateStableLevel(metadata, mode)}\n          {notEnoughData && \"?\"}\n        </span>\n      </StatItem>\n      <StatItem\n        label=\"每局期望\"\n        description={`在${GameMode[mode]}之间每局获得点数的数学期望值`}\n        className={notEnoughData ? \"font-italic font-lighter text-muted\" : \"\"}\n      >\n        <span title={notEnoughData ? \"数据量不足，计算结果可能有较大偏差\" : \"\"}>\n          {PlayerMetadata.calculateExpectedGamePoint(metadata, mode).toFixed(3)}\n          {notEnoughData && \"?\"}\n        </span>\n      </StatItem>\n    </>\n  );\n}\n\nexport default function PlayerDetails() {\n  const dataAdapter = useDataAdapter();\n  const metadata = dataAdapter.getMetadata<PlayerMetadata>();\n  useEffect(triggerRelayout, [!!metadata]);\n  if (!metadata || !metadata.nickname) {\n    return <Loading />;\n  }\n  return (\n    <div>\n      <Helmet>\n        <title>\n          {TITLE_PREFIX} - {metadata.nickname}\n        </title>\n      </Helmet>\n      <h2 className=\"text-center\">玩家：{metadata.nickname}</h2>\n      <div className=\"row mt-4\">\n        <div className=\"col-md-8\">\n          <h3 className=\"text-center mb-4\">最近走势</h3>\n          <RecentRankChart dataAdapter={dataAdapter} playerId={metadata.id} aspect={6} />\n          <h3 className=\"text-center mt-4 mb-4\">相关数据</h3>\n          <dl className=\"row\">\n            <StatItem label=\"记录场数\">{metadata.count}</StatItem>\n            <StatItem label=\"当前等级\">{LevelWithDelta.getTag(metadata.level)}</StatItem>\n            <StatItem label=\"当前分数\">{LevelWithDelta.formatAdjustedScore(metadata.level)}</StatItem>\n            {metadata.extended_stats && <PlayerExtendedStatsView maybeStats={metadata.extended_stats} />}\n            <StatItem label=\"平均顺位\">{metadata.avg_rank.toFixed(3)}</StatItem>\n            <StatItem label=\"被飞率\">{formatPercent(metadata.negative_rate)}</StatItem>\n            <EstimatedStableLevel metadata={metadata} />\n          </dl>\n        </div>\n        <div className=\"col-md-4\">\n          <h3 className=\"text-center mb-4\">累计战绩</h3>\n          <RankRateChart metadata={metadata} />\n        </div>\n      </div>\n      <PlayerDetailsSettings showLevel={true} />\n    </div>\n  );\n}\n"],"sourceRoot":""}