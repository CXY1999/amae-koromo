{"version":3,"sources":["components/gameRecords/player.tsx","components/gameRecords/charts/recentRank.tsx"],"names":["__webpack_require__","d","__webpack_exports__","Player","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_icons_io__WEBPACK_IMPORTED_MODULE_2__","_utils_dataSource__WEBPACK_IMPORTED_MODULE_3__","_routes__WEBPACK_IMPORTED_MODULE_4__","React","memo","_ref","player","game","isActive","hideDetailLink","nickname","level","score","accountId","isTop","GameRecord","getRankIndexByPlayer","a","createElement","className","concat","href","getRecordLink","title","target","getLevelTag","undefined","to","generatePath","type","playerId","toString","version","r","RecentRankChart","recharts__WEBPACK_IMPORTED_MODULE_1__","_utils_dataSource__WEBPACK_IMPORTED_MODULE_2__","_utils_gameMode__WEBPACK_IMPORTED_MODULE_3__","_player__WEBPACK_IMPORTED_MODULE_4__","createDot","props","active","Object","assign","stroke","RANK_COLORS","payload","rank","onClick","window","open","fill","createActiveDot","RankChartTooltip","arguments","length","realPayload","formatFullStartTime","GameMode","modeId","RANK_LABELS","players","map","x","key","_ref2","dataAdapter","_ref2$aspect","aspect","_ref2$numGames","numGames","dataPoints","useMemo","result","totalGames","getCount","i","Math","min","getItem","unshift","pos","width","height","data","margin","top","right","bottom","left","isAnimationActive","dataKey","strokeWidth","dot","activeDot","cursor","content"],"mappings":"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","file":"static/js/7.c1b279e3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoMdBook } from \"react-icons/io\";\r\n\r\nimport { GameRecord, PlayerRecord, getLevelTag } from \"../../utils/dataSource\";\r\nimport { generatePath } from \"./routes\";\r\n\r\nexport const Player = React.memo(function({\r\n  player,\r\n  game,\r\n  isActive,\r\n  hideDetailLink\r\n}: {\r\n  player: PlayerRecord;\r\n  game: GameRecord;\r\n  isActive: boolean;\r\n  hideDetailLink?: boolean;\r\n}) {\r\n  const { nickname, level, score, accountId } = player;\r\n  const isTop = GameRecord.getRankIndexByPlayer(game, player) === 0;\r\n  return (\r\n    <span className={`player ${isTop && \"font-weight-bold\"} ${isActive && \"active-player\"}`}>\r\n      <a href={GameRecord.getRecordLink(game, player)} title=\"查看牌谱\" target=\"_blank\">\r\n        [{getLevelTag(level)}] {nickname} {score !== undefined && `[${score}]`}\r\n      </a>{\" \"}\r\n      {hideDetailLink || isActive ? null : (\r\n        <Link title=\"玩家记录\" to={generatePath({ type: \"player\", playerId: accountId.toString(), version: 0 })}>\r\n          <IoMdBook />\r\n        </Link>\r\n      )}\r\n    </span>\r\n  );\r\n});\r\n","import React from \"react\";\nimport { ResponsiveContainer, LineChart, Line, Dot, Tooltip, TooltipProps } from \"recharts\";\n\nimport { IDataAdapter } from \"../dataAdapterProvider\";\nimport { GameRecord, RANK_LABELS, RANK_COLORS } from \"../../../utils/dataSource\";\nimport { useMemo } from \"react\";\nimport GameMode from \"../../../utils/gameMode\";\nimport { Player } from \"../player\";\n\ndeclare module \"recharts\" {\n  interface DotProps {\n    strokeWidth?: number;\n    stroke?: string;\n    fill?: string;\n    payload?: any;\n  }\n  interface LabelListProps {\n    fill?: string;\n  }\n}\n\ntype DotPayload = { pos: number; rank: number; game: GameRecord; playerId: number };\n\nconst createDot = (props: { payload: DotPayload }, active?: boolean) => {\n  return (\n    <Dot\n      {...props}\n      r={5}\n      stroke={RANK_COLORS[props.payload.rank]}\n      onClick={() => window.open(GameRecord.getRecordLink(props.payload.game, props.payload.playerId), \"_blank\")}\n      {...(active ? { fill: RANK_COLORS[props.payload.rank], r: 10 } : {})}\n    />\n  );\n};\nconst createActiveDot = (props: any) => createDot(props, true);\n\nconst RankChartTooltip = ({ active, payload }: TooltipProps = {}) => {\n  if (!active || !payload || !payload.length) {\n    return null;\n  }\n  const realPayload = payload[0].payload as DotPayload;\n  return (\n    <div className=\"player-chart-tooltip\">\n      <h5>\n        {GameRecord.formatFullStartTime(realPayload.game)} {GameMode[realPayload.game.modeId]}{\" \"}\n        {RANK_LABELS[realPayload.rank]}\n      </h5>\n      {realPayload.game.players.map(x => (\n        <p key={x.accountId.toString()}>\n          <Player player={x} game={realPayload.game} isActive={realPayload.playerId === x.accountId} hideDetailLink />\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default function RecentRankChart({\n  dataAdapter,\n  playerId,\n  aspect = 2,\n  numGames = 20\n}: {\n  dataAdapter: IDataAdapter;\n  playerId: number;\n  aspect?: number;\n  numGames?: number;\n}) {\n  const dataPoints = useMemo(() => {\n    const result = [] as DotPayload[];\n    const totalGames = dataAdapter.getCount();\n    if (!totalGames) {\n      return result;\n    }\n    for (let i = 0; i < Math.min(totalGames, numGames); i++) {\n      const game = dataAdapter.getItem(i);\n      if (!(\"uuid\" in game)) {\n        break;\n      }\n      const rank = GameRecord.getRankIndexByPlayer(game, playerId);\n      result.unshift({ pos: 3 - rank, rank, game, playerId });\n    }\n    return result;\n  }, [dataAdapter]);\n  return (\n    <ResponsiveContainer width=\"100%\" aspect={aspect} height=\"auto\">\n      <LineChart data={dataPoints} margin={{ top: 15, right: 15, bottom: 15, left: 15 }}>\n        <Line\n          isAnimationActive={false}\n          dataKey=\"pos\"\n          type=\"linear\"\n          stroke=\"#b5c2ce\"\n          strokeWidth={3}\n          dot={createDot}\n          activeDot={createActiveDot}\n        />\n        <Tooltip cursor={false} content={<RankChartTooltip />} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}"],"sourceRoot":""}