{"version":3,"sources":["components/gameRecords/playerDetails.tsx"],"names":["DateRangeOptions","RankRateChart","Loadable","loader","loading","RecentRankChart","ReactTooltipPromise","ReactTooltip","DATE_RANGE_ITEMS","Object","keys","map","key","label","PlayerDetailsSettings","showLevel","useModel","model","updateModel","useState","type","All","startDate","endDate","dayjs","isSame","subtract","Custom","Last4Weeks","mode","setMode","DATE_MIN","customDateFrom","setCustomDateFrom","customDateTo","setCustomDateTo","useEffect","playerId","selectedMode","undefined","setSelectedMode","useCallback","className","title","inline","selectedItemKey","items","groupKey","onChange","min","date","StatItem","description","children","data-tip","PlayerExtendedStatsView","maybeStats","stats","useAsync","triggerRelayout","formatPercent","和牌率","放铳率","自摸率","默听率","流局率","流听率","副露率","立直率","和了巡数","toFixed","平均打点","平均铳点","最大连庄","EstimatedStableLevel","metadata","level","LevelWithDelta","getAdjustedLevel","parseInt","getTag","GameMode","王座","玉","notEnoughData","count","expectedGamePoint","PlayerMetadata","calculateExpectedGamePoint","estimatedNumGamesToChangeLevel","getMaxPoint","isAllowedMode","curPoint","Level","id","score","delta","getStartingPoint","changeLevelMsg","estimateStableLevel","Math","abs","PlayerDetails","dataAdapter","useDataAdapter","getMetadata","then","x","rebuild","nickname","TITLE_PREFIX","aspect","formatAdjustedScore","extended_stats","avg_rank","negative_rate","effect","multiline","place"],"mappings":"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","file":"static/js/11.52c7e951.chunk.js","sourcesContent":["import React from \"react\";\nimport Loadable from \"react-loadable\";\nimport { Helmet } from \"react-helmet\";\n\nimport { useDataAdapter } from \"./dataAdapterProvider\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { triggerRelayout, formatPercent, useAsync } from \"../../utils/index\";\nimport { LevelWithDelta, PlayerExtendedStats, PlayerMetadata, GameMode, Level } from \"../../utils/dataTypes\";\nimport { TITLE_PREFIX, DATE_MIN } from \"../../utils/constants\";\nimport Loading from \"../misc/loading\";\nimport { FormRow } from \"../form/formRow\";\nimport { useModel } from \"./model\";\nimport { CheckboxGroup, DatePicker } from \"../form\";\nimport dayjs from \"dayjs\";\nimport { ModeSelector } from \"./modeSelector\";\nconst RankRateChart = Loadable({\n  loader: () => import(\"./charts/rankRate\"),\n  loading: () => <Loading />\n});\nconst RecentRankChart = Loadable({\n  loader: () => import(\"./charts/recentRank\"),\n  loading: () => <Loading />\n});\nconst ReactTooltipPromise = import(\"react-tooltip\");\nconst ReactTooltip = Loadable({\n  loader: () => ReactTooltipPromise,\n  loading: () => null\n});\n\nenum DateRangeOptions {\n  All = \"全部\",\n  Last4Weeks = \"最近四周\",\n  Custom = \"自定义\"\n}\nconst DATE_RANGE_ITEMS = Object.keys(DateRangeOptions).map((key: string) => ({\n  key: DateRangeOptions[key as keyof typeof DateRangeOptions],\n  label: DateRangeOptions[key as keyof typeof DateRangeOptions]\n}));\n\nfunction PlayerDetailsSettings({ showLevel = false }) {\n  const [model, updateModel] = useModel();\n  const [mode, setMode] = useState(() => {\n    if (model.type !== \"player\") {\n      return DateRangeOptions.All;\n    }\n    if (!model.startDate) {\n      return DateRangeOptions.All;\n    }\n    if (\n      (!model.endDate || dayjs(model.endDate).isSame(dayjs(), \"day\")) &&\n      dayjs(model.startDate).isSame(dayjs().subtract(27, \"day\"), \"day\")\n    ) {\n      return DateRangeOptions.Last4Weeks;\n    }\n    return DateRangeOptions.Custom;\n  });\n  const [customDateFrom, setCustomDateFrom] = useState(() =>\n    model.type === \"player\" && model.startDate ? model.startDate : DATE_MIN\n  );\n  const [customDateTo, setCustomDateTo] = useState(() =>\n    model.type === \"player\" && model.endDate ? model.endDate : dayjs()\n  );\n  useEffect(() => {\n    if (model.type !== \"player\") {\n      return;\n    }\n    switch (mode) {\n      case DateRangeOptions.All:\n        updateModel({\n          type: \"player\",\n          playerId: model.playerId,\n          startDate: null,\n          endDate: null,\n          selectedMode: undefined\n        });\n        break;\n      case DateRangeOptions.Last4Weeks:\n        updateModel({\n          type: \"player\",\n          playerId: model.playerId,\n          startDate: dayjs().subtract(27, \"day\"),\n          endDate: null\n        });\n        break;\n      case DateRangeOptions.Custom:\n        updateModel({\n          type: \"player\",\n          playerId: model.playerId,\n          startDate: customDateFrom,\n          endDate: customDateTo\n        });\n        break;\n    }\n  }, [model, mode, customDateFrom, customDateTo, updateModel]);\n  const setSelectedMode = useCallback(mode => updateModel({ type: \"player\", selectedMode: mode }), [updateModel]);\n  return (\n    <div className=\"row\">\n      <div className=\"col-6\">\n        <FormRow title=\"时间\" inline={true}>\n          <CheckboxGroup\n            type=\"radio\"\n            selectedItemKey={mode}\n            items={DATE_RANGE_ITEMS}\n            groupKey=\"PlayerDetailsDateRangeSelector\"\n            onChange={setMode as (x: string) => void}\n          />\n          {mode === DateRangeOptions.Custom ? (\n            <>\n              <DatePicker min={DATE_MIN} onChange={setCustomDateFrom} date={customDateFrom} className=\"form-control\" />\n              <DatePicker min={DATE_MIN} onChange={setCustomDateTo} date={customDateTo} className=\"form-control\" />\n            </>\n          ) : null}\n        </FormRow>\n      </div>\n      {showLevel && (\n        <div className=\"col-6\">\n          <FormRow title=\"等级\" inline={true}>\n            <ModeSelector mode={model.selectedMode} onChange={setSelectedMode} />\n          </FormRow>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction StatItem({\n  label,\n  description,\n  className = \"\",\n  children\n}: {\n  label: string;\n  description?: string;\n  className?: string;\n  children: React.ReactChild;\n}) {\n  return (\n    <>\n      <dt className={`col-2 col-lg-1 text-nowrap ${className}`}>{label}</dt>\n      <dd className={`col-4 col-lg-3 text-right ${className}`} data-tip={description || \"\"}>\n        {children}\n      </dd>\n    </>\n  );\n}\n\nfunction PlayerExtendedStatsView({ maybeStats }: { maybeStats: PlayerExtendedStats | Promise<PlayerExtendedStats> }) {\n  const stats = useAsync(maybeStats);\n  useEffect(triggerRelayout, [!!stats]);\n  if (!stats) {\n    return null;\n  }\n  return (\n    <>\n      <StatItem label=\"和牌率\" description=\"和牌局数 / 总局数\">\n        {formatPercent(stats.和牌率 || 0)}\n      </StatItem>\n      <StatItem label=\"放铳率\" description=\"放铳局数 / 总局数\">\n        {formatPercent(stats.放铳率 || 0)}\n      </StatItem>\n      <StatItem label=\"自摸率\" description=\"自摸局数 / 和牌局数\">\n        {formatPercent(stats.自摸率 || 0)}\n      </StatItem>\n      <StatItem label=\"默胡率\" description=\"门清默听和牌局数 / 和牌局数\">\n        {formatPercent(stats.默听率 || 0)}\n      </StatItem>\n      <StatItem label=\"流局率\" description=\"流局局数 / 总局数\">\n        {formatPercent(stats.流局率 || 0)}\n      </StatItem>\n      <StatItem label=\"流听率\" description=\"流局听牌局数 / 流局局数\">\n        {formatPercent(stats.流听率 || 0)}\n      </StatItem>\n      <StatItem label=\"副露率\" description=\"副露局数 / 总局数\">\n        {formatPercent(stats.副露率 || 0)}\n      </StatItem>\n      <StatItem label=\"立直率\" description=\"立直局数 / 总局数\">\n        {formatPercent(stats.立直率 || 0)}\n      </StatItem>\n      <StatItem label=\"和了巡数\">{(stats.和了巡数 || 0).toFixed(3)}</StatItem>\n      <StatItem label=\"平均打点\">{stats.平均打点 || 0}</StatItem>\n      <StatItem label=\"平均铳点\">{stats.平均铳点 || 0}</StatItem>\n      <StatItem label=\"最大连庄\">{stats.最大连庄 || 0}</StatItem>\n    </>\n  );\n}\n\nfunction EstimatedStableLevel({ metadata }: { metadata: PlayerMetadata }) {\n  const [model] = useModel();\n  const level = LevelWithDelta.getAdjustedLevel(metadata.level);\n  const mode = model.selectedMode\n    ? (parseInt(model.selectedMode) as GameMode)\n    : LevelWithDelta.getTag(metadata.level) === \"魂\"\n    ? GameMode.王座\n    : GameMode.玉;\n  const notEnoughData = metadata.count < 100;\n  const expectedGamePoint = PlayerMetadata.calculateExpectedGamePoint(metadata, mode);\n  let estimatedNumGamesToChangeLevel = null as number | null;\n  if (level.getMaxPoint() && level.isAllowedMode(mode)) {\n    const curPoint = level.isSame(new Level(metadata.level.id))\n      ? metadata.level.score + metadata.level.delta\n      : level.getStartingPoint();\n    estimatedNumGamesToChangeLevel =\n      expectedGamePoint > 0 ? (level.getMaxPoint() - curPoint) / expectedGamePoint : curPoint / expectedGamePoint;\n  }\n  const changeLevelMsg = estimatedNumGamesToChangeLevel\n    ? `，括号内为预计${estimatedNumGamesToChangeLevel > 0 ? \"升\" : \"降\"}段场数`\n    : \"\";\n  return (\n    <>\n      <StatItem\n        label=\"安定段位\"\n        description={`在${GameMode[mode]}之间一直进行对局，预测最终能达到的段位`}\n        className={notEnoughData ? \"font-italic font-lighter text-muted\" : \"\"}\n      >\n        <span>\n          {PlayerMetadata.estimateStableLevel(metadata, mode)}\n          {notEnoughData && \"?\"}\n        </span>\n      </StatItem>\n      <StatItem\n        label=\"分数期望\"\n        description={`在${GameMode[mode]}之间每局获得点数的数学期望值${changeLevelMsg}${\n          notEnoughData ? \"（数据量不足，计算结果可能有较大偏差）\" : \"\"\n        }`}\n        className={notEnoughData ? \"font-italic font-lighter text-muted\" : \"\"}\n      >\n        <span>\n          {expectedGamePoint.toFixed(1)}\n          {estimatedNumGamesToChangeLevel ? ` (${Math.abs(estimatedNumGamesToChangeLevel).toFixed(0)})` : \"\"}\n          {notEnoughData && \"?\"}\n        </span>\n      </StatItem>\n    </>\n  );\n}\n\nexport default function PlayerDetails() {\n  const dataAdapter = useDataAdapter();\n  const metadata = dataAdapter.getMetadata<PlayerMetadata>();\n  useEffect(() => {\n    ReactTooltipPromise.then(x => x.rebuild());\n  });\n  useEffect(triggerRelayout, [!!metadata]);\n  if (!metadata || !metadata.nickname) {\n    return <Loading />;\n  }\n  return (\n    <div>\n      <Helmet>\n        <title>\n          {TITLE_PREFIX} - {metadata.nickname}\n        </title>\n      </Helmet>\n      <h2 className=\"text-center\">玩家：{metadata.nickname}</h2>\n      <div className=\"row mt-4\">\n        <div className=\"col-md-8\">\n          <h3 className=\"text-center mb-4\">最近走势</h3>\n          <RecentRankChart dataAdapter={dataAdapter} playerId={metadata.id} aspect={6} />\n          <h3 className=\"text-center mt-4 mb-4\">相关数据</h3>\n          <dl className=\"row\">\n            <StatItem label=\"记录场数\">{metadata.count}</StatItem>\n            <StatItem label=\"当前等级\">{LevelWithDelta.getTag(metadata.level)}</StatItem>\n            <StatItem label=\"当前分数\">{LevelWithDelta.formatAdjustedScore(metadata.level)}</StatItem>\n            {metadata.extended_stats && <PlayerExtendedStatsView maybeStats={metadata.extended_stats} />}\n            <StatItem label=\"平均顺位\">{metadata.avg_rank.toFixed(3)}</StatItem>\n            <EstimatedStableLevel metadata={metadata} />\n            <StatItem label=\"被飞率\">{formatPercent(metadata.negative_rate)}</StatItem>\n          </dl>\n        </div>\n        <div className=\"col-md-4\">\n          <h3 className=\"text-center mb-4\">累计战绩</h3>\n          <RankRateChart metadata={metadata} />\n        </div>\n      </div>\n      <PlayerDetailsSettings showLevel={true} />\n      <ReactTooltip effect=\"solid\" multiline={true} place=\"top\" />\n    </div>\n  );\n}\n"],"sourceRoot":""}