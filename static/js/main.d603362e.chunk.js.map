{"version":3,"sources":["utils/dataSource.ts","components/layout/container.tsx","components/misc/alert.tsx","components/app/appHeader.tsx","components/app/index.tsx","index.tsx","utils/gameMode.ts","utils/constants.ts","utils/index.ts","components/misc/loading.tsx","utils/dataTypes.ts","components/gameRecords/routeSync.tsx","components/form/checkboxGroup.tsx","components/form/datePicker.tsx","components/form/formRow.tsx","components/gameRecords/filterPanel.tsx","components/gameRecords/playerSearch.tsx","components/gameRecords/routes.tsx","components/gameRecords/dataAdapterProvider.tsx","components/misc/scroller.tsx","components/gameRecords/model.tsx"],"names":["apiGet","_callee8","path","resp","_home_travis_build_SAPikachu_amae_koromo_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context8","prev","next","fetch","API_ROOT","sent","ok","json","abrupt","stop","searchPlayer","_x2","_searchPlayer","apply","this","arguments","_callee9","prefix","limit","_args9","_context9","length","undefined","trim","concat","encodeURIComponent","ListingDataLoader","date","Object","_home_travis_build_SAPikachu_amae_koromo_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_date","dayjs","startOf","valueOf","skip","cacheTag","PlayerDataLoader","playerId","_playerId","ListingDataProvider","freeze","create","_DataProvider","PlayerDataProvider","loader","itemsPerChunk","_loader","_metadata","_countPromise","_chunks","_itemsPerChunk","_filterPredicate","_filteredIndices","_filterResultCache","predicate","updateFilteredIndices","metadata","getMetadataSync","count","numShownItems","numLoadedItems","indices","i","chunk","Math","floor","Promise","push","game","result","uuid","_triggerFullLoad","getCount","getCountMaybeSync","getMetadata","then","_this","resolve","index","mappedIndex","_mapItemIndex","chunkNumber","_this2","skipPreload","getItem","innerIndex","_getChunk","preload","requestedIndex","reversed","chunkIndex","_loadChunk","numChunks","ceil","console","warn","getRecords","toString","Container","_ref","_ref$title","title","_ref$children","children","_ref$fluid","fluid","react_default","createElement","className","Alert","_ref$className","_ref$type","type","_ref$container","container","React","Fragment","_ref$stateName","stateName","stateKey","_useState","useState","localStorage","_useState2","slicedToArray","closed","setClosed","useEffect","setItem","Cont","role","data-dismiss","aria-label","onClick","event","preventDefault","triggerRelayout","aria-hidden","AppHeader","container_Container","react_router_dom","to","TITLE_PREFIX","href","Helmet","Loadable","__webpack_require__","e","t","bind","loading","App","scroller","routes","rootElement","document","getElementById","render","react","app","GameMode","NUMBER_OF_GAME_MODE","keys","filter","x","d","__webpack_exports__","requestAnimationFrame","window","dispatchEvent","UIEvent","setTimeout","scrollToTop","scrollTo","formatPercent","toFixed","Loading","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_ref$size","size","LEVEL_MAX_POINTS","RANK_LABELS","RANK_COLORS","GameRecord","getRankIndexByPlayer","rec","player","accountId","sortedPlayers","players","map","sort","b","score","getPlayerRankLabel","getPlayerRankColor","encodeAccountId","formatFullStartTime","startTime","format","getRecordLink","trailer","parseInt","Level","levelId","_home_travis_build_SAPikachu_amae_koromo_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_majorRank","_minorRank","realId","label","getMaxPoint","majorRank","minorRank","maxPoints","level","getNextLevel","getStartingPoint","getPreviousLevel","getTag","getLevelTag","LevelWithDelta","obj","id","formatWithAdjustedScore","delta","ModelBuilders","params","version","listing","isValid","modes","Set","split","selectedModes","searchText","search","RouteSync","view","useParams","_useModel","useModel","_useModel2","model","updateModel","location","useLocation","state","pendingRouteUpdate","pathname","react_router","modelResult","newModel","objectSpread","Model","toPlain","newPath","generatePath","fromPlain","CheckboxGroup","_ref$items","items","_ref$selectedItemKeys","selectedItemKeys","_ref$groupKey","groupKey","_ref$onChange","onChange","setSelected","key","isSelected","has","newSet","add","delete","item","value","checked","currentTarget","htmlFor","DatePicker","_ref$date","_","_ref$min","min","_ref$max","max","handleChange","useCallback","FormRow","MODE_CHECKBOXES","String","DEFAULT_DATE","FilterPanel","updateSearchTextFromEvent","setSelectedItems","setDate","formRow_FormRow","playerSearchCache","NUM_RESULTS_SHOWN","NUM_FETCH","normalizeName","s","toLowerCase","PlayerSearchResult","setVersion","_useMemo","useMemo","cachedResult","normalizedPrefix","isExactMatch","slice","findRawResultFromCache","mayHaveMore","filteredPlayers","forEach","nickname","startsWith","_useMemo2","isLoading","cancelled","debounceToken","Date","getTime","clearTimeout","misc_loading","PlayerSearch","_ref2","_ref2$className","PlayerDetails","all","GameRecordTable","PLAYER_PATH","PATH","genPath","Array","from","join","Routes","gameRecords_model","dataAdapterProvider","exact","showFullTime","showStartEnd","loadingPlaceholder","DUMMY_DATA_ADAPTER","noop","DataAdapter","provider","onDataUpdate","_provider","_onDataUpdate","_triggeredRequest","promise","_callHook","maybeCount","_installHook","getUnfilteredCountSync","isItemLoaded","hook","DataAdapterContext","createContext","useDataAdapter","useContext","Consumer","DataAdapterProvider","_home_travis_build_SAPikachu_amae_koromo_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","dataProviders","searchPredicate","needPredicate","modeId","some","indexOf","usePredicate","dataProvider","Error","getProviderKey","createProvider","_useState3","_useState4","dataAdapter","setDataAdapter","refreshDataAdapter","setFilterPredicate","adapter","cancelUpdateHook","setUpdateHook","react__WEBPACK_IMPORTED_MODULE_3___default","Provider","useScrollerProps","react_virtualized_dist_es_WindowScroller__WEBPACK_IMPORTED_MODULE_1__","ScrollerContext","Scroller","scrollerProps","_home_travis_build_SAPikachu_amae_koromo_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","DEFAULT_MODEL","ModelContext","isChanged","oldModel","newProps","isSame","newSelectedModes","set","other","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","elem","err","return","isSameSet","ModelProvider","_useReducer","useReducer","normalizeUpdate","_useReducer2"],"mappings":"gbAQeA,+EAAf,SAAAC,EAAyBC,GAAzB,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACqBC,MAAMC,IAAWT,GADtC,WACQC,EADRI,EAAAK,MAEYC,GAFZ,CAAAN,EAAAE,KAAA,cAGUN,EAHV,cAAAI,EAAAE,KAAA,EAKgBN,EAAKW,OALrB,cAAAP,EAAAQ,OAAA,SAAAR,EAAAK,MAAA,wBAAAL,EAAAS,SAAAf,6BAQO,SAAegB,EAAtBC,GAAA,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,EAA4BC,GAA5B,IAAAC,EAAAC,EAAAJ,UAAA,OAAAlB,EAAAC,EAAAC,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,UAA4CgB,EAA5CC,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAoD,GACzDF,EAASA,EAAOM,OADX,CAAAH,EAAAlB,KAAA,eAAAkB,EAAAZ,OAAA,SAGI,IAHJ,cAAAY,EAAAZ,OAAA,SAKEf,EAAM,iBAAA+B,OAAwCC,mBAAmBR,GAA3D,WAAAO,OAA4EN,KALpF,wBAAAE,EAAAX,SAAAO,yKAaDU,aAEJ,SAAAA,EAAYC,GAAyBC,OAAAC,EAAA,EAAAD,CAAAd,KAAAY,GAAAZ,KADrCgB,WACoC,EAClChB,KAAKgB,MAAQC,IAAMJ,GAAMK,QAAQ,yLAGpBvC,EAAM,SAAA+B,OAAoBV,KAAKgB,MAAMG,iOAEnCC,EAAchB,4FAAeiB,iCAAW,YAC1C1C,EAAM,SAAA+B,OAAwBV,KAAKgB,MAAMG,UAAnC,UAAAT,OAAqDU,EAArD,WAAAV,OAAmEN,EAAnE,SAAAM,OAAgFW,0JAIjGC,aAEJ,SAAAA,EAAYC,GAAmBT,OAAAC,EAAA,EAAAD,CAAAd,KAAAsB,GAAAtB,KAD/BwB,eAC8B,EAC5BxB,KAAKwB,UAAYD,oLAGJ5C,EAAM,gBAAA+B,OAAiCV,KAAKwB,iOAE1CJ,EAAchB,4FAAeiB,iCAAW,YAC1C1C,EAAM,kBAAA+B,OAAiCV,KAAKwB,UAAtC,UAAAd,OAAwDU,EAAxD,WAAAV,OAAsEN,EAAtE,SAAAM,OAAmFW,0JAM7FI,EAAsBX,OAAOY,OAAO,CAC/CC,OAD+C,SACxCd,GACL,OAAO,IAAIe,EAAiC,IAAIhB,EAAkBC,OAIzDgB,EAAqBf,OAAOY,OAAO,CAC9CC,OAD8C,SACvCJ,GACL,OAAO,IAAIK,EAAgC,IAAIN,EAAiBC,OAI9DK,aAaJ,SAAAA,EAAYE,GAAsC,IAArBC,EAAqB9B,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAL,IAAKa,OAAAC,EAAA,EAAAD,CAAAd,KAAA4B,GAAA5B,KATlDgC,aASkD,EAAAhC,KARlDiC,eAQkD,EAAAjC,KAPlDkC,mBAOkD,EAAAlC,KANlDmC,aAMkD,EAAAnC,KALlDoC,oBAKkD,EAAApC,KAJlDqC,sBAIkD,EAAArC,KAHlDsC,sBAGkD,EAAAtC,KAFlDuC,wBAEkD,EAChDvC,KAAKgC,QAAUF,EACf9B,KAAKiC,UAAY,KACjBjC,KAAKkC,cAAgB,KACrBlC,KAAKmC,QAAU,GACfnC,KAAKoC,eAAiBL,EACtB/B,KAAKqC,iBAAmB,KACxBrC,KAAKsC,iBAAmB,KACxBtC,KAAKuC,mBAAqB,kEAETC,GACbxC,KAAKqC,mBAAqBG,IAG9BxC,KAAKqC,iBAAmBG,EACxBxC,KAAKuC,mBAAqB,GAC1BvC,KAAKyC,yEAIL,GADAzC,KAAKsC,iBAAmB,KACnBtC,KAAKqC,iBAAV,CAGA,IAAMK,EAAW1C,KAAK2C,kBACtB,GAAKD,EAAL,CAOA,IAJA,IAAME,EAAQF,EAASE,MACnBC,EAAgB,EAChBC,EAAiB,EACfC,EAAU,GACPC,EAAI,EAAGA,EAAIJ,EAAOI,IAAK,CAC9B,IAAMC,EAAQjD,KAAKmC,QAAQe,KAAKC,MAAMH,EAAIhD,KAAKoC,iBAC/C,IAAKa,GAASA,aAAiBG,QAC7BL,EAAQM,KAAKL,OADf,CAIAF,IACA,IAAMQ,EAAOL,EAAMD,EAAIhD,KAAKoC,gBACxBmB,EAASvD,KAAKuC,mBAAmBe,EAAKE,WAC3BhD,IAAX+C,IACFvD,KAAKuC,mBAAmBe,EAAKE,MAAQD,EAASvD,KAAKqC,iBAAiBiB,IAElEC,IACFR,EAAQM,KAAKL,GACbH,MAGJ7C,KAAKsC,iBAAmBS,EACpBF,EAAgB,IAAMC,GAAkB9C,KAAKoC,gBAC/CpC,KAAKyD,+DAIP,OAAOzD,KAAKiC,WAAejC,KAAKiC,qBAAqBmB,QAA4B,KAAjBpD,KAAKiC,sDAGrE,IAAIS,EAAW1C,KAAK2C,kBACpB,OAAID,EACK1C,KAAKsC,iBAAmBtC,KAAKsC,iBAAiB/B,OAASmC,EAASE,MAElE5C,KAAK0D,qKAGG1D,KAAK2C,2DAEX3C,KAAK2D,gCAEV3D,KAAKkC,uDACAlC,KAAKkC,6BAETlC,KAAKiC,YACRjC,KAAKiC,UAAYjC,KAAKgC,QAAQ4B,cAAcC,KAAK,SAAAnB,GAI/C,OAHAoB,EAAK7B,UAAYS,EACjBoB,EAAKrB,wBACLqB,EAAK5B,cAAgB,KACdQ,KAGX1C,KAAKkC,cAAgBkB,QAAQW,QAAQ/D,KAAKiC,WAAW4B,KAAK,kBAAMC,EAAKH,wCAC9D3D,KAAKkC,kKAGZ,IAAMQ,EAAW1C,KAAK2C,kBACtB,OAAKD,EAGEA,EAASE,MAFP,0CAIEoB,GACX,IAAMC,EAAcjE,KAAKkE,cAAcF,GACvC,GAAoB,OAAhBC,EACF,OAAO,EAET,IAAME,EAAcjB,KAAKC,MAAMc,EAAcjE,KAAKoC,gBAClD,QAASpC,KAAKmC,QAAQgC,MAAkBnE,KAAKmC,QAAQgC,aAAwBf,yCAEvEY,GAAsE,IAAAI,EAAApE,KAAvDqE,EAAuDpE,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,GACtEgE,EAAcjE,KAAKkE,cAAcF,GACvC,GAAoB,OAAhBC,EACF,OAAOjE,KAAK0D,WAAWG,KAAK,kBAAMO,EAAKE,QAAQN,KAEjD,IAAMG,EAAcjB,KAAKC,MAAMc,EAAcjE,KAAKoC,gBAC5CmC,EAAaN,EAAcjE,KAAKoC,eAChCa,EAAQjD,KAAKmC,QAAQgC,GAC3B,OAAKlB,GAASA,aAAiBG,QACtBpD,KAAKwE,UAAUL,GAAaN,KAAK,SAAAZ,GAAK,OAAIA,EAAMsB,MAEpDF,GAAgBrE,KAAKsC,kBACxBtC,KAAKyE,QAAQT,EAAQhE,KAAKoC,gBAErBa,EAAMsB,oCAEPP,GACN,IAAMpB,EAAQ5C,KAAK2D,oBACff,aAAiBQ,SAGjBY,GAASpB,GAGb5C,KAAKsE,QAAQN,GAAO,yCAERU,GACZ,IAAM9B,EAAQ5C,KAAK2D,oBACnB,GAAIf,aAAiBQ,QACnB,OAAO,KAET,GAAIsB,EAAiB,EACnB,OAAO,KAGT,IAAMC,EAAW/B,EAAQ8B,EAAiB,EAC1C,OAAIC,EAAW,EACN,KAEF3E,KAAKsC,iBAAmBtC,KAAKsC,iBAAiBqC,GAAYA,4EAEnDC,0EACT5E,KAAKmC,QAAQyC,KAChB5E,KAAKmC,QAAQyC,GAAc5E,KAAK6E,WAAWD,sBAEtC5E,KAAKmC,QAAQyC,kJAGpB,IAAMhC,EAAQ5C,KAAK2D,oBACnB,GAAqB,kBAAVf,EAIX,IADA,IAAMkC,EAAY5B,KAAK6B,KAAKnC,EAAQ5C,KAAKoC,gBAChCY,EAAI,EAAGA,EAAI8B,EAAW9B,IACzBhD,KAAKmC,QAAQa,IAGjBhD,KAAKwE,UAAUxB,8EAGF4B,6FACK5E,KAAK0D,qBAAnBd,SACAkC,EAAY5B,KAAK6B,KAAKnC,EAAQ5C,KAAKoC,yDAEhC,gBAELwC,GAAcE,0BAChBE,QAAQC,KAAR,+BAAAvE,OAA4CkE,EAA5C,uBAAAlE,OAA4EkC,sBACrE,4BAEW5C,KAAKgC,QAAQkD,WAC/BlF,KAAKoC,eAAiBwC,EACtB5E,KAAKoC,eACLwC,IAAeE,EAAY,EAAIlC,EAAMuC,WAAa,mBAH9ClC,UAKI1C,OAASP,KAAKoC,gBAAkBwC,EAAaE,EAAY,GACjEE,QAAQC,KAAK,uCAAwChC,EAAM1C,QAE7DP,KAAKmC,QAAQyC,GAAc3B,EAC3BjD,KAAKyC,0CACEQ,sOCjQEmC,EAAY,SAAAC,GAAA,IAAAC,EAAAD,EAAGE,aAAH,IAAAD,OAAW9E,EAAX8E,EAAAE,EAAAH,EAAsBI,gBAAtB,IAAAD,OAAiChF,EAAjCgF,EAAAE,EAAAL,EAAyDM,aAAzD,IAAAD,KAAA,OACvBE,EAAA5G,EAAA6G,cAAA,OAAKC,UAAS,iBAAApF,OAAmBiF,EAAQ,SAAW,KAClDC,EAAA5G,EAAA6G,cAAA,OAAKC,UAAU,OACbF,EAAA5G,EAAA6G,cAAA,OAAKC,UAAU,aACZP,GAASK,EAAA5G,EAAA6G,cAAA,MAAIC,UAAU,QAAQP,GAC/BE,qBCFF,SAASM,EAATV,GAMJ,IAAAW,EAAAX,EALDS,iBAKC,IAAAE,EALW,GAKXA,EAAAC,EAAAZ,EAJDa,YAIC,IAAAD,EAJM,OAINA,EAAAE,EAAAd,EAHDe,iBAGC,IAAAD,EAHWE,IAAMC,SAGjBH,EAAAI,EAAAlB,EAFDmB,iBAEC,IAAAD,EAFW,GAEXA,EAAAf,EAAAH,EADDI,gBACC,IAAAD,OADUhF,EACVgF,EACKiB,EAAQ,cAAA/F,OAAiB8F,GAD9BE,EAE2BC,mBAC1B,kBAAMH,KAAeI,aAAatC,QAAQmC,KAH3CI,EAAA/F,OAAAgG,EAAA,EAAAhG,CAAA4F,EAAA,GAEMK,EAFNF,EAAA,GAEcG,EAFdH,EAAA,GAUD,GALAI,oBAAU,WACJT,GAAaO,GACfH,aAAaM,QAAQT,EAAU,SAEhC,CAACM,EAAQP,EAAWC,IACnBM,EACF,OAAO,KAET,IAAMI,EAAOf,EACb,OACER,EAAA5G,EAAA6G,cAACsB,EAAD,KACEvB,EAAA5G,EAAA6G,cAAA,OACEC,UAAS,eAAApF,OAAiBwF,EAAjB,iCAAAxF,OAAqDoF,GAC9DsB,KAAK,SAEJ3B,EACDG,EAAA5G,EAAA6G,cAAA,UACEK,KAAK,SACLJ,UAAU,QACVuB,eAAa,QACbC,aAAW,QACXC,QAAS,SAAAC,GACPA,EAAMC,iBACNT,GAAU,GACVU,gBAGF9B,EAAA5G,EAAA6G,cAAA,QAAM8B,cAAY,QAAlB,uBCpCH,SAASC,IACd,OACEhC,EAAA5G,EAAA6G,cAACD,EAAA5G,EAAMsH,SAAP,KACEV,EAAA5G,EAAA6G,cAACgC,EAAD,KACEjC,EAAA5G,EAAA6G,cAAA,UACED,EAAA5G,EAAA6G,cAACiC,EAAA,EAAD,CAAMC,GAAG,KAAKC,OAGlBpC,EAAA5G,EAAA6G,cAACE,EAAD,CAAOK,UAAWhB,EAAWoB,UAAU,WACrCZ,EAAA5G,EAAA6G,cAAA,0BACAD,EAAA5G,EAAA6G,cAAA,UACED,EAAA5G,EAAA6G,cAAA,sLACAD,EAAA5G,EAAA6G,cAAA,gLACAD,EAAA5G,EAAA6G,cAAA,2aAIAD,EAAA5G,EAAA6G,cAAA,4LACAD,EAAA5G,EAAA6G,cAAA,0EACaD,EAAA5G,EAAA6G,cAAA,KAAGoC,KAAK,sBAAR,2BADb,UACwE,IACtErC,EAAA5G,EAAA6G,cAAA,KAAGoC,KAAK,6CAAR,sBAFF,YAMJrC,EAAA5G,EAAA6G,cAACE,EAAD,CAAOK,UAAWhB,EAAWoB,UAAU,qBACrCZ,EAAA5G,EAAA6G,cAAA,4DACAD,EAAA5G,EAAA6G,cAAA,MAAIC,UAAU,aACZF,EAAA5G,EAAA6G,cAAA,mFC9BJqC,EAASC,IAAS,CACtBrG,OAAQ,kBAAMsG,EAAAC,EAAA,GAAAxE,KAAAuE,EAAAE,EAAAC,KAAA,cACdC,QAAS,kBAAM5C,EAAA5G,EAAA6G,cAAAD,EAAA5G,EAAAsH,SAAA,SAyBFmC,MAff,WACE,OACE7C,EAAA5G,EAAA6G,cAACiC,EAAA,EAAD,KACElC,EAAA5G,EAAA6G,cAACqC,EAAD,KACEtC,EAAA5G,EAAA6G,cAAA,aAAQmC,MAEVpC,EAAA5G,EAAA6G,cAAC6C,EAAA,EAAD,KACE9C,EAAA5G,EAAA6G,cAAC+B,EAAD,MACAhC,EAAA5G,EAAA6G,cAACgC,EAAD,KACEjC,EAAA5G,EAAA6G,cAAC8C,EAAA,EAAD,UCjBJC,EAAcC,SAASC,eAAe,QAC5CC,iBAAOC,EAAA,cAACC,EAAD,MAASL,wCCTXM,4HAIUA,MACR,IAAMC,EAAsBrI,OAAOsI,KAAKF,GAAUG,OACvD,SAAAC,GAAC,MAAoD,kBAAzCJ,EAASI,KACrB/I,wCCPF6H,EAAAmB,EAAAC,EAAA,sBAAAlK,IAAA8I,EAAAmB,EAAAC,EAAA,sBAAAxB,IAAO,IACM1I,EAAQ,GAAAoB,OADI,yCACJ,QACRsH,EAAe,kECFrB,SAASN,IACd+B,sBAAsB,kBAAMC,OAAOC,cAAc,IAAIC,QAAQ,aAC7DC,WAAW,WACTH,OAAOC,cAAc,IAAIC,QAAQ,YAChC,KAEE,SAASE,IACdJ,OAAOK,SAAS,EAAG,GACnBN,sBAAsB,kBAAMC,OAAOK,SAAS,EAAG,KARjD3B,EAAAmB,EAAAC,EAAA,sBAAA9B,IAAAU,EAAAmB,EAAAC,EAAA,sBAAAM,IAAA1B,EAAAmB,EAAAC,EAAA,sBAAAQ,IAUO,IAAMA,EAAgB,SAACV,GAAD,OAAaA,EAAI,EAAJ,GAAA5I,QAAgB,IAAJ4I,GAASW,QAAQ,GAA7B,KAAqC,qCCV/E7B,EAAAmB,EAAAC,EAAA,sBAAAU,IAAA,IAAAC,EAAA/B,EAAA,GAAAgC,EAAAhC,EAAAiC,EAAAF,GAEe,SAASD,EAAT7E,GAAqE,IAAAiF,EAAAjF,EAAlDkF,YAAkD,IAAAD,EAA3C,SAA2CA,EAClF,OACEF,EAAApL,EAAA6G,cAAA,OAAKC,UAAS,mCAAApF,OAA8C,WAAT6J,EAAoB,EAAI,IACzEH,EAAApL,EAAA6G,cAAA,OAAKC,UAAS,kBAAApF,OAA6B,WAAT6J,EAAoB,GAAK,qBAAuBnD,KAAK,UACrFgD,EAAApL,EAAA6G,cAAA,QAAMC,UAAU,WAAhB,sPCDK0E,EAAmB,CAAC,GAAI,GAAI,IAAK,IAAK,IAAK,IAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,IAAM,IAAM,KACjGC,EAAc,CAAC,eAAM,eAAM,eAAM,gBACjCC,EAAc,CAAC,UAAW,UAAW,UAAW,WAehDC,EAAa7J,OAAOY,OAAO,CACtCkJ,qBAAsB,SAASC,EAAiBC,GAC9C,IAAMvJ,GAA8B,kBAAXuJ,EAAsBA,EAAOC,UAAYD,GAAQ3F,WACpE6F,EAAgBH,EAAII,QAAQC,IAAI,SAACJ,EAAQ9G,GAAT,MAAoB,CAAE8G,SAAQ9G,WACpEgH,EAAcG,KAAK,SAACnM,EAAGoM,GAAJ,OAAU,EAAIA,EAAEpH,MAAQoH,EAAEN,OAAOO,OAAS,EAAIrM,EAAEgF,MAAQhF,EAAE8L,OAAOO,SACpF,IAAK,IAAIrI,EAAI,EAAGA,EAAIgI,EAAczK,OAAQyC,IACxC,GAAIgI,EAAchI,GAAG8H,OAAOC,UAAU5F,aAAe5D,EACnD,OAAOyB,EAGX,OAAQ,GAEVsI,mBAAoB,SAAST,EAAiBC,GAC5C,OAAOL,EAAYE,EAAWC,qBAAqBC,EAAKC,KAAY,IAEtES,mBAAoB,SAASV,EAAiBC,GAC5C,OAAOJ,EAAYC,EAAWC,qBAAqBC,EAAKC,KAE1DU,gBAAiB,SAAClD,GAAD,OAAe,SAAY,EAAIA,EAAI,QAAW,WAC/DmD,oBAAqB,SAACZ,GAAD,OAAqB5J,IAAsB,IAAhB4J,EAAIa,WAAkBC,OAAO,mBAC7EC,cAAe,SAASf,EAAiBC,GACvC,IAAMvJ,EAA6B,kBAAXuJ,EAAsBA,EAAOC,UAAYD,EAC3De,EAAUtK,EAAQ,KAAAb,OACfiK,EAAWa,gBAAoC,kBAAbjK,EAAwBA,EAAWuK,SAASvK,KACnF,GACJ,0CAAAb,OAA2CmK,EAAIrH,MAA/C9C,OAAsDmL,MAIpDE,aAGJ,SAAAA,EAAYC,GAAkBlL,OAAAmL,EAAA,EAAAnL,CAAAd,KAAA+L,GAAA/L,KAF9BkM,gBAE6B,EAAAlM,KAD7BmM,gBAC6B,EAC3B,IAAMC,EAASJ,EAAU,IACzBhM,KAAKkM,WAAahJ,KAAKC,MAAMiJ,EAAS,KACtCpM,KAAKmM,WAAaC,EAAS,yDAG3B,IAAMC,EAxDkB,uCAwDGrM,KAAKkM,WAAa,GAC7C,OAAIlM,KAAKkM,aAzDe,uCAyDa3L,OAC5B8L,EAEFA,EAAQrM,KAAKmM,iDAGpB,OAAO3B,EAAyC,GAAvBxK,KAAKkM,WAAa,GAASlM,KAAKmM,WAAa,8CAGtE,OAAwB,IAApBnM,KAAKkM,WACA,EAEFlM,KAAKsM,cAAgB,yCAG5B,GAAItM,KAAKkM,aAxEe,uCAwEa3L,OACnC,OAAOP,KAET,IAAIuM,EAAYvM,KAAKkM,WACjBM,EAAYxM,KAAKmM,WAAa,EAKlC,OAJIK,EAAY,IACdD,IACAC,EAAY,GAEP,IAAIT,EAAkB,IAAZQ,EAAkBC,8CAGnC,GAAwB,IAApBxM,KAAKkM,YAAwC,IAApBlM,KAAKmM,WAChC,OAAOnM,KAET,IAAIuM,EAAYvM,KAAKkM,WACjBM,EAAYxM,KAAKmM,WAAa,EAKlC,OAJIK,EAAY,IACdD,IACAC,EAAY,GAEP,IAAIT,EAAkB,IAAZQ,EAAkBC,mDAEbnB,GACtB,IAAIoB,EAAYzM,KAAKsM,cACjBI,EAAe1M,KAcnB,OAbIyM,GAAapB,GAASoB,GAExBA,GADAC,EAAQ1M,KAAK2M,gBACKL,cAClBjB,EAAQqB,EAAME,oBACLvB,EAAQ,KACZoB,GAAkC,IAArBC,EAAMR,YAA0C,IAArBQ,EAAMR,YAAyC,IAArBQ,EAAMP,WAC3Ed,EAAQ,GAGRoB,GADAC,EAAQ1M,KAAK6M,oBACKP,cAClBjB,EAAQqB,EAAME,qBAGlB,GAAAlM,OAAUgM,EAAMI,SAAhB,OAAApM,OAA8B2K,GAA9B3K,OAAsC+L,EAAY,IAAMA,EAAY,aAGjE,SAASM,EAAYf,GAC1B,OAAO,IAAID,EAAMC,GAASc,SAOrB,IAAME,EAAiBlM,OAAOY,OAAO,CAC1CiK,OAD0C,SACnCsB,GACL,OAAO,IAAIlB,EAAMkB,EAAIC,IAAIC,wBAAwBF,EAAI5B,MAAQ4B,EAAIG,oHC5G/DC,EAAgB,CACpBvC,OAAQ,SAASwC,GACf,MAAO,CACLpH,KAAM,SACN3E,SAAU+L,EAAOJ,GACjBK,QAAS,IAGbC,QAAS,SAASF,GAChB,IAAMzM,EAAOyM,EAAOzM,KAAOI,IAAMqM,EAAOzM,KAAM,cAAgB,KAC9D,GAAIA,IAASA,EAAK4M,UAChB,MAAO,IAET,IAAMC,EAAQJ,EAAOI,MACjB,IAAIC,IACFL,EAAOI,MACJE,MAAM,KACN1C,IAAI,SAAA5B,GAAC,OAAIA,EAAE7I,SACX4I,OAAO,SAAAC,GAAC,QAAMA,KAEnB,KACJ,MAAO,CACLzI,KAAMA,EAAOA,EAAKK,QAAQ,OAAOC,UAAY,KAC7C0M,cAAeH,EACfI,WAAYR,EAAOS,QAAU,GAC7BR,QAAS,KAKR,SAASS,EAAT3I,GAAwG,IAAnF4I,EAAmF5I,EAAnF4I,KACpBX,EAASY,cAD8FC,EAEhFC,cAFgFC,EAAAvN,OAAAgG,EAAA,EAAAhG,CAAAqN,EAAA,GAEtGG,EAFsGD,EAAA,GAE/FE,EAF+FF,EAAA,GAGvGG,EAAWC,cACjBxH,oBAAUS,IAAiB,CAAC4G,EAAMpI,OAClC,IAAMwI,EAAQF,EAASE,MAEvB,GAAIA,GAASA,EAAMJ,MAAMf,UAAYe,EAAMf,QAEzC,cADQe,EAAgBK,mBACpBH,EAASI,WAAaF,EAAME,SACvBhJ,EAAA5G,EAAA6G,cAACgJ,EAAA,EAAD,CAAU9G,GAAI,CAAE6G,SAAUF,EAAME,SAAUF,WAE5C9I,EAAA5G,EAAA6G,cAAAD,EAAA5G,EAAAsH,SAAA,MAET,IAAKoI,EAAO,CAEV,IAAMI,EAAczB,EAAcY,GAAMX,GACxC,GAA2B,kBAAhBwB,EACT,OAAOlJ,EAAA5G,EAAA6G,cAACgJ,EAAA,EAAD,CAAU9G,GAAI+G,IAEvB,IAAMC,EAAejO,OAAAkO,EAAA,EAAAlO,CAAA,GAChBgO,EADgB,CAEnBvB,QAASe,EAAMf,UAIjB,OAFAgB,EAAYQ,GACZjF,cAEElE,EAAA5G,EAAA6G,cAACgJ,EAAA,EAAD,CACE9G,GAAI,CAAE6G,SAAUJ,EAASI,SAAUF,MAAO,CAAEE,SAAUJ,EAASI,SAAUN,MAAOW,IAAMC,QAAQH,OAIpG,GAAIT,EAAMK,mBAAoB,CAE5B,IAAMQ,EAAUC,EAAad,GAE7B,cADQA,EAAgBK,mBACjB/I,EAAA5G,EAAA6G,cAACgJ,EAAA,EAAD,CAAU9G,GAAI,CAAE6G,SAAUO,EAAST,MAAO,CAAEE,SAAUO,EAASb,MAAOW,IAAMC,QAAQZ,OAI3F,OADAC,EADsBU,IAAMI,UAAUX,EAAMJ,QAErC1I,EAAA5G,EAAA6G,cAAAD,EAAA5G,EAAAsH,SAAA,kBCnFJ,SAASgJ,EAATjK,GAKJ,IAAAkK,EAAAlK,EAJDmK,aAIC,IAAAD,EAJO,GAIPA,EAAAE,EAAApK,EAHDqK,wBAGC,IAAAD,EAHkB,KAGlBA,EAAAE,EAAAtK,EAFDuK,gBAEC,IAAAD,EAFU,UAEVA,EAAAE,EAAAxK,EADDyK,gBACC,IAAAD,EADU,SAACH,KACXG,EACKE,EAAc,SAASC,EAAaC,GACxC,KAAIA,GAAgBP,IAAoBA,EAAiBQ,IAAIF,MAGxDC,IAAcP,GAAqBA,EAAiBQ,IAAIF,IAA7D,CAGA,IAAMG,EAAS,IAAIxC,IAAI+B,GAAoBF,EAAMtE,IAAI,SAAA5B,GAAC,OAAIA,EAAE0G,OACxDC,EACFE,EAAOC,IAAIJ,GAEXG,EAAOE,OAAOL,GAEhBF,EAASK,KAEX,OACEvK,EAAA5G,EAAA6G,cAACD,EAAA5G,EAAMsH,SAAP,KACGkJ,EAAMtE,IAAI,SAAAoF,GAAI,OACb1K,EAAA5G,EAAA6G,cAAA,OAAKC,UAAU,+BAA+BkK,IAAKM,EAAKN,KACtDpK,EAAA5G,EAAA6G,cAAA,SACEC,UAAU,mBACVI,KAAK,WACLgH,GAAE,MAAAxM,OAAQkP,EAAR,KAAAlP,OAAoB4P,EAAKN,KAC3BO,MAAOD,EAAKN,IACZQ,SAAUd,GAAoBA,EAAiBQ,IAAII,EAAKN,KACxDF,SAAU,SAAAtI,GAAK,OAAIuI,EAAYO,EAAKN,IAAKxI,EAAMiJ,cAAcD,YAE/D5K,EAAA5G,EAAA6G,cAAA,SAAOC,UAAU,mBAAmB4K,QAAO,MAAAhQ,OAAQkP,EAAR,KAAAlP,OAAoB4P,EAAKN,MACjEM,EAAKjE,WCpCX,SAASsE,EAATtL,GAMJ,IAAAuL,EAAAvL,EALDxE,YAKC,IAAA+P,EALM3P,MAKN2P,EAAAf,EAAAxK,EAJDyK,gBAIC,IAAAD,EAJU,SAACgB,KAIXhB,EAAA7J,EAAAX,EAHDS,iBAGC,IAAAE,EAHW,GAGXA,EAAA8K,EAAAzL,EAFD0L,WAEC,IAAAD,EAFK,EAELA,EAAAE,EAAA3L,EADD4L,WACC,IAAAD,EADK/P,MACL+P,EACKE,EAAeC,sBACnB,SAAC9I,GAAD,OAA4CyH,EAAS7O,IAAMoH,EAAEoI,cAAcF,MAAO,gBAClF,CAACT,IAEH,OACElK,EAAA5G,EAAA6G,cAAA,SACEC,UAAWA,EACXI,KAAK,OACLqK,MAAOtP,IAAMJ,GAAM8K,OAAO,cAC1BoF,IAAKA,EAAM9P,IAAM8P,GAAKpF,OAAO,mBAAgBnL,EAC7CyQ,IAAKA,EAAMhQ,IAAMgQ,GAAKtF,OAAO,mBAAgBnL,EAC7CsP,SAAUoB,ICrBT,IAAME,EAAU,SAAA/L,GAAA,IAAAC,EAAAD,EAAGE,aAAH,IAAAD,EAAW,GAAXA,EAAAE,EAAAH,EAAeI,gBAAf,IAAAD,OAA0BhF,EAA1BgF,EAAA,OACrBI,EAAA5G,EAAA6G,cAAA,OAAKC,UAAU,kBACbF,EAAA5G,EAAA6G,cAAA,SAAOC,UAAU,2BAA2BP,GAC5CK,EAAA5G,EAAA6G,cAAA,OAAKC,UAAU,aAAaL,aCGnB4L,EAAkBvQ,OAAOsI,KAAKF,KACxCG,OAAO,SAAAC,GAAC,MAAoD,kBAAzCJ,IAASI,KAC5B4B,IAAI,SAAA5B,GAAC,MAAK,CACT0G,IAAKsB,OAAOpI,IAASI,IACrB+C,MAAO/C,KAGLiI,EAAetQ,MAAQC,QAAQ,OAE9B,SAASsQ,EAATnM,GAAyC,IAAAW,EAAAX,EAAlBS,iBAAkB,IAAAE,EAAN,GAAMA,EAAAmI,EACjBC,cADiBC,EAAAvN,OAAAgG,EAAA,EAAAhG,CAAAqN,EAAA,GACvCG,EADuCD,EAAA,GAChCE,EADgCF,EAAA,GAExCoD,EAA4BN,sBAChC,SAAC9I,GAAD,OAA4CkG,EAAY,CAAET,WAAYzF,EAAEoI,cAAcF,SACtF,CAAChC,IAEGmD,EAAmBP,sBACvB,SAACzB,GAAD,OAAmCnB,EAAY,CAAEV,cAAe6B,KAChE,CAACnB,IAEGoD,EAAUR,sBAAY,SAACtQ,GAAD,OAA4B0N,EAAY,CAAE1N,UAAS,CAAC0N,IAChF,YAAmB/N,IAAf8N,EAAMpI,KACD,KAGPN,EAAA5G,EAAA6G,cAAA,OAAKC,UAAWA,GACdF,EAAA5G,EAAA6G,cAAC+L,EAAD,CAASrM,MAAM,gBACbK,EAAA5G,EAAA6G,cAAC8K,EAAD,CAAYI,IAAI,aAAalQ,KAAMyN,EAAMzN,MAAQ0Q,EAAczB,SAAU6B,EAAS7L,UAAU,kBAE9FF,EAAA5G,EAAA6G,cAAC+L,EAAD,CAASrM,MAAM,4BACbK,EAAA5G,EAAA6G,cAAA,SAAOK,KAAK,OAAOJ,UAAU,eAAeyK,MAAOjC,EAAMR,WAAYgC,SAAU2B,KAEjF7L,EAAA5G,EAAA6G,cAAC+L,EAAD,KACEhM,EAAA5G,EAAA6G,cAACyJ,EAAD,CAAeE,MAAO6B,EAAiB3B,iBAAkBpB,EAAMT,cAAeiC,SAAU4B,mDC9B1FG,EAAoB,GACpBC,EAAoB,EACpBC,EAAY,GAEZC,EAAgB,SAACC,GAAD,OAAeA,EAAEC,cAAczR,QAmBrD,SAAS0R,EAAT9M,GAAoE,IAAtCyI,EAAsCzI,EAAtCyI,WAAsCpH,EACpCC,mBAAS,GAD2BE,EAAA/F,OAAAgG,EAAA,EAAAhG,CAAA4F,EAAA,GAC3D6G,EAD2D1G,EAAA,GAClDuL,EADkDvL,EAAA,GAAAwL,EAExBC,kBAAQ,WAChD,IAAMC,EApBV,SAAgCpS,GAC9B,IAAMqS,EAAmBR,EAAc7R,GAEvC,IADAA,EAASqS,EACFrS,GAAQ,CACb,IAAM8K,EAAU4G,EAAkB1R,GAClC,GAAK8K,KAAWA,aAAmB7H,SAInC,MAAO,CACLqP,aAActS,IAAWqS,EACzBjP,OAAQ0H,GALR9K,EAASA,EAAOuS,MAAM,EAAGvS,EAAOI,OAAS,GAQ7C,OAAO,KAMgBoS,CAAuB7E,GAC5C,IAAKyE,EACH,MAAO,CAAC,IAAI,GAEd,GAAIA,EAAaE,aACf,MAAO,CAACF,EAAahP,QAAQ,GAE/B,IAAMiP,EAAmBR,EAAclE,GACnC8E,EAAcL,EAAahP,OAAOhD,QAAUwR,EAC1Cc,EAAkB,GASxB,OARAN,EAAahP,OAAOuP,QAAQ,SAAAhI,GACtBkH,EAAclH,EAAOiI,UAAUC,WAAWR,GAC5CK,EAAgBxP,KAAKyH,GACZ+H,EAAgBtS,SAEzBqS,GAAc,KAGX,CAACC,EAAiBD,GAAeC,EAAgBtS,OAASuR,EAAmBc,IACnF,CAAC9E,EAAYP,IAtBkD0F,EAAAnS,OAAAgG,EAAA,EAAAhG,CAAAuR,EAAA,GAE3DpH,EAF2DgI,EAAA,GAElDC,EAFkDD,EAAA,GAEvCL,EAFuCK,EAAA,GAuDlE,OAhCAhM,oBAAU,WACR,IAAM9G,EAAS6R,EAAclE,GAC7B,IAAI+D,EAAkB1R,IAGjB+S,EAAL,CAGA,IAAIC,GAAY,EACZC,EAA4CvJ,WAAW,WACzDuJ,OAAgB5S,EACZ2S,GAGAtB,EAAkB1R,KAGtB0R,EAAkB1R,GAAUP,YAAaO,GAAQ0D,KAAK,SAASoH,GAK7D,OAJA4G,EAAkB1R,GAAU8K,EACvBkI,GACHf,GAAW,IAAIiB,MAAOC,WAEjBrI,MAER,KACH,OAAO,WACLkI,GAAY,EACRC,GACFG,aAAaH,MAGhB,CAACtF,EAAYoF,IAEdtN,EAAA5G,EAAA6G,cAAAD,EAAA5G,EAAAsH,SAAA,KACEV,EAAA5G,EAAA6G,cAAA,MAAIC,UAAU,oBAAd,wCACAF,EAAA5G,EAAA6G,cAAA,MAAIC,UAAU,0BACXmF,EAAQyH,MAAM,EAAGZ,GAAmB5G,IAAI,SAAA5B,GAAC,OACxC1D,EAAA5G,EAAA6G,cAAA,MAAImK,IAAK1G,EAAE4D,GAAIpH,UAAU,SACvBF,EAAA5G,EAAA6G,cAACiC,EAAA,EAAD,CAAMC,GAAIqH,EAAa,CAAElJ,KAAM,SAAU3E,SAAU+H,EAAE4D,GAAG/H,WAAYoI,QAAS,KAC3E3H,EAAA5G,EAAA6G,cAAA,gBACIkH,YAAYzD,EAAEoD,MAAMQ,IADxB,KAC+B5D,EAAEyJ,eAMvCG,GAAatN,EAAA5G,EAAA6G,cAAC2N,EAAA,EAAD,CAASjJ,KAAK,YACzBU,EAAQ1K,OAASuR,GAAqBc,IACtChN,EAAA5G,EAAA6G,cAAA,SAAOC,UAAU,kCAAjB,yFAMH,SAAS2N,EAATC,GAA0C,IAAAC,EAAAD,EAAlB5N,iBAAkB,IAAA6N,EAAN,GAAMA,EAAAxF,EAC/BC,cAATE,EADwCxN,OAAAgG,EAAA,EAAAhG,CAAAqN,EAAA,MAE/C,MAAI,aAAcG,IAAUA,EAAMR,WACzBlI,EAAA5G,EAAA6G,cAAAD,EAAA5G,EAAAsH,SAAA,MAGPV,EAAA5G,EAAA6G,cAAA,OAAKC,UAAWA,GACdF,EAAA5G,EAAA6G,cAACsM,EAAD,CAAoBrE,WAAYQ,EAAMR,cCrH5C1F,EAAAmB,EAAAC,EAAA,sBAAA4F,IAYA,IAAMwE,EAAgBzL,IAAS,CAC7BrG,OAAQ,kBAAMsB,QAAAyQ,IAAA,CAAAzL,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAxE,KAAAuE,EAAAG,KAAA,YACdC,QAAS,kBAAM5C,EAAA5G,EAAA6G,cAAC2N,EAAA,EAAD,SAEXM,EAAkB3L,IAAS,CAC/BrG,OAAQ,kBAAMsB,QAAAyQ,IAAA,CAAAzL,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAxE,KAAAuE,EAAAG,KAAA,YACdC,QAAS,kBAAM5C,EAAA5G,EAAA6G,cAAC2N,EAAA,EAAD,SAGXO,EAAc,cACdC,EAAO,yDAEN,SAAS5E,EAAad,GAC3B,MAAmB,WAAfA,EAAMpI,KACD+N,YAAQF,EAAa,CAAE7G,GAAIoB,EAAM/M,WAEpC+M,EAAMT,eAAkBS,EAAMT,cAActD,MAAU+D,EAAMR,YAAeQ,EAAMzN,KAGhFoT,YAAQD,EAAM,CACnBnT,KAAMI,IAAMqN,EAAMzN,MAAQ,IAAIwS,MAAQ1H,OAAO,cAC7C+B,MAAOY,EAAMT,eAAiBS,EAAMT,cAActD,KAAO2J,MAAMC,KAAK7F,EAAMT,eAAeuG,KAAK,UAAO5T,EACrGuN,OAAQO,EAAMR,iBAActN,IALrB,IAmCI6T,IA1Bf,WACE,OACEzO,EAAA5G,EAAA6G,cAACyO,EAAA,EAAD,KACE1O,EAAA5G,EAAA6G,cAAC0O,EAAA,EAAD,KACE3O,EAAA5G,EAAA6G,cAACgJ,EAAA,EAAD,KACEjJ,EAAA5G,EAAA6G,cAACgJ,EAAA,EAAD,CAAO2F,OAAK,EAAC3V,KAAMkV,GACjBnO,EAAA5G,EAAA6G,cAACmI,EAAD,CAAWC,KAAK,WAChBrI,EAAA5G,EAAA6G,cAAC+N,EAAD,MACAhO,EAAA5G,EAAA6G,cAACiO,EAAD,CAAiBW,cAAY,EAACC,cAAc,KAE9C9O,EAAA5G,EAAA6G,cAACgJ,EAAA,EAAD,CAAO2F,OAAK,EAAC3V,KAAM,CAAC,IAAKmV,IACvBpO,EAAA5G,EAAA6G,cAACmI,EAAD,CAAWC,KAAK,YAChBrI,EAAA5G,EAAA6G,cAAA,OAAKC,UAAU,OACbF,EAAA5G,EAAA6G,cAAC2L,EAAD,CAAa1L,UAAU,QACvBF,EAAA5G,EAAA6G,cAAC4N,EAAD,CAAc3N,UAAU,8BAE1BF,EAAA5G,EAAA6G,cAACiO,EAAD,OAEFlO,EAAA5G,EAAA6G,cAACgJ,EAAA,EAAD,KACEjJ,EAAA5G,EAAA6G,cAACgJ,EAAA,EAAD,CAAU9G,GAAG,sLCtCnB4M,EAAqB,CAAEnM,SAAS,GA4BzBoM,EAAqB,uGAhB9B,OAAO,+CAGP,OAAO,wCAGP,OAAO,qCAED5Q,GACN,OAAO2Q,uCAEI3Q,GACX,OAAO,YAML6Q,EAAO,aAEPC,aAKJ,SAAAA,EAAYC,GAA6C,IAArBC,EAAqB/U,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAN4U,EAAM/T,OAAAC,EAAA,EAAAD,CAAAd,KAAA8U,GAAA9U,KAJzDiV,eAIyD,EAAAjV,KAHzDkV,mBAGyD,EAAAlV,KAFzDmV,uBAEyD,EACvDnV,KAAKiV,UAAYF,EACjB/U,KAAKkV,cAAgBF,EACrBhV,KAAKmV,mBAAoB,2DAEdC,GACPpV,KAAKmV,oBAGTnV,KAAKmV,mBAAoB,EACzBC,EAAQvR,KAAK7D,KAAKqV,UAAU9M,KAAKvI,4CAGjCA,KAAKkV,mDAGL,IAAMI,EAAatV,KAAKiV,UAAUtR,oBAClC,OAAI2R,aAAsBlS,SACxBpD,KAAKuV,aAAaD,GACX,GAEFA,+CAGP,OAAOtV,KAAKiV,UAAUO,0BAA4B,wCAGlD,OAAOxV,KAAKiV,UAAUtS,kDAEhBqB,GACN,OAAIhE,KAAKiV,UAAUQ,aAAazR,GACvBhE,KAAKiV,UAAU3Q,QAAQN,IAE3BhE,KAAKmV,mBACRnV,KAAKuV,aAAavV,KAAKiV,UAAU3Q,QAAQN,IAEpC2Q,wCAEI3Q,GACX,QAAIA,EAAQ,IAGLhE,KAAKiV,UAAUQ,aAAazR,yCAEvB0R,GACZ1V,KAAKkV,cAAgBQ,6CAGrB1V,KAAKkV,cAAgBL,WAInBc,EAAqBtP,IAAMuP,cAAchB,GAElCiB,EAAiB,kBAAMC,qBAAWH,IACZA,EAAmBI,SA+C/C,SAASC,EAAT3Q,GAAoF,IAArDI,EAAqDJ,EAArDI,SAAqD0I,EACzEC,cAATE,EADkFxN,OAAAmV,EAAA,EAAAnV,CAAAqN,EAAA,MAAAzH,EAEjEC,mBAAS,iBAAO,KAAjCuP,EAFkFpV,OAAAmV,EAAA,EAAAnV,CAAA4F,EAAA,MAGnFyP,EA1BR,SAAsB7H,GACpB,QAAmB9N,IAAf8N,EAAMpI,KACR,OAAOoM,kBAAQ,kBAAM,MAAM,CAAC,KAAM,KAEpC,IAAMxE,GAAcQ,EAAMR,YAAc,IAAIrN,QAAU,GAChD2V,EAAgBtI,GAAeQ,EAAMT,eAAiBS,EAAMT,cAActD,KAAOpB,IACvF,OAAOmJ,kBACL,kBACE8D,EACI,SAAA9S,GACE,QAAIgL,EAAMT,gBAAkBS,EAAMT,cAAcqC,IAAI5M,EAAK+S,OAAOlR,gBAG3D7B,EAAK2H,QAAQqL,KAAK,SAAAxL,GAAM,OAAIA,EAAOiI,SAASb,cAAcqE,QAAQzI,IAAe,KAKxF,MACN,MAAiBtN,IAAf8N,EAAMpI,MAAsBoI,EAAMT,eAAkB,KAAMC,IAOtC0I,CAAalI,GAC/BmI,EAAenE,kBAAQ,WAC3B,IAAMtC,EAlDV,SAAwB1B,GACtB,QAAmB9N,IAAf8N,EAAMpI,KACR,OAAOjF,IAAMqN,EAAMzN,MAAQI,OACxBC,QAAQ,OACRC,UACAgE,WACE,GAAmB,WAAfmJ,EAAMpI,KACf,gBAAAxF,OAAiB4N,EAAM/M,UAEzB,MAAM,IAAImV,MAAM,sBAyCFC,CAAerI,GAI3B,OAHK4H,EAAclG,KACjBkG,EAAclG,GAxCpB,SAAwB1B,GACtB,QAAmB9N,IAAf8N,EAAMpI,KACR,OAAOzE,IAAoBE,OAAO2M,EAAMzN,MAAQI,MAAQC,QAAQ,QAElE,GAAmB,WAAfoN,EAAMpI,KACR,OAAOrE,IAAmBF,OAAO2M,EAAM/M,UAEzC,MAAM,IAAImV,MAAM,mBAiCSE,CAAetI,IAE/B4H,EAAclG,IACpB,CAAC1B,EAAO4H,IAV8EW,EAWnDlQ,mBAAS,kBAAMiO,IAXoCkC,EAAAhW,OAAAmV,EAAA,EAAAnV,CAAA+V,EAAA,GAWlFE,EAXkFD,EAAA,GAWrEE,EAXqEF,EAAA,GAYnFG,EAAqB9F,sBAAY,WACrCsF,EAAaS,mBAAmBf,GAChC,IAAMgB,EAAU,IAAIrC,EAAY2B,GAChCO,EAAeG,IACd,CAACV,EAAcN,IAiBlB,OAhBAlP,oBAAUgQ,EAAoB,CAACA,IAC/BhQ,oBAAU,WACR,IAAMkQ,EAAUJ,EAChB,GAAII,aAAmBrC,EACrB,OAAO,kBAAMqC,EAAQC,qBAEtB,CAACL,IACJ9P,oBAAU,WACQ8P,aACOjC,GADPiC,EAENM,cAAcJ,IAEvB,CAACF,EAAaE,IACjBhQ,oBAAU,WACRwP,EAAa9S,qBACZ,CAAC8S,IACGa,EAAAtY,EAAA6G,cAAC8P,EAAmB4B,SAApB,CAA6BhH,MAAOwG,GAActR,qCC/L3D2C,EAAAmB,EAAAC,EAAA,sBAAAgO,IAAA,IAAArN,EAAA/B,EAAA,GAAAgC,EAAAhC,EAAAiC,EAAAF,GAAAsN,EAAArP,EAAA,IAKMsP,EAAkBrR,IAAMuP,cAAwC,IAEzD4B,EAAmB,kBAAM1B,qBAAW4B,IASlCC,IAPf,SAAAtS,GAAyE,IAArDI,EAAqDJ,EAArDI,SAClB,OACE2E,EAAApL,EAAA6G,cAAC4R,EAAA,EAAD,KACG,SAAAG,GAAa,OAAIxN,EAAApL,EAAA6G,cAAC6R,EAAgBH,SAAjB,CAA0BhH,MAAOqH,GAAgBnS,wMCgB5DwJ,EAAQnO,OAAOY,OAAO,CACjCwN,QAAS,SAASZ,GAChB,MAAmB,WAAfA,EAAMpI,KACDoI,EAEFxN,OAAA+W,EAAA,EAAA/W,CAAA,GACFwN,EADL,CAEEzN,KAAMyN,EAAMzN,KAAOI,IAAMqN,EAAMzN,MAAMM,UAAY,KACjD0M,cAAeS,EAAMT,cAAgBqG,MAAMC,KAAK7F,EAAMT,eAAiB,QAG3EwB,UAAW,SAASf,GAClB,MAAmB,WAAfA,EAAMpI,KACDoI,OAEU9N,IAAf8N,EAAMpI,KACD,CACLrF,KAAMyN,EAAMzN,MAAQ,KACpBiN,WAAYQ,EAAMR,YAAc,GAChCD,cAAeS,EAAMT,cAAgB,IAAIF,IAAIW,EAAMT,eAAiB,OAGxE7I,QAAQC,KAAK,0CAA2CqJ,GACjDwJ,MAMLA,EAA8B,CAAEjX,KAAM,KAAMgN,cAAe,KAAMC,WAAY,IAC7EiK,EAAe1R,IAAMuP,cAAsD,CAAC9U,OAAA+W,EAAA,EAAA/W,CAAA,GAC3EgX,EAD0E,CAC3DvK,QAAS,IAC7B,eAEWa,EAAW,kBAAM0H,qBAAWiC,IAyBzC,SAASC,EAAUC,EAAiBC,GAClC,GAAID,EAAS/R,OAASgS,EAAShS,KAC7B,OAAO,EAET,QAAsB1F,IAAlByX,EAAS/R,MAAsBgS,EAAShS,OAAS+R,EAAS/R,KAAM,CAClE,QACoB1F,IAAlB0X,EAASrX,MACTqX,EAASrX,OAASoX,EAASpX,QACzBqX,EAASrX,OAASoX,EAASpX,OAASI,IAAMiX,EAASrX,MAAMsX,OAAOF,EAASpX,KAAM,QAEjF,OAAO,EAET,QAA4BL,IAAxB0X,EAASpK,YAA4BoK,EAASpK,aAAemK,EAASnK,WACxE,OAAO,EAET,IAAIsK,EAAmBF,EAASrK,cAIhC,GAHIuK,GAAoBA,EAAiB7N,MAAQpB,MAC/CiP,EAAmB,WAEI5X,IAArB4X,GAAkCA,IAAqBH,EAASpK,cAAe,CACjF,IAAKuK,IAAqBH,EAASpK,cACjC,OAAO,EAET,GA9CN,SAAsBwK,EAAaC,GACjC,GAAID,EAAI9N,OAAS+N,EAAM/N,KACrB,OAAO,EAFuC,IAAAgO,GAAA,EAAAC,GAAA,EAAAC,OAAAjY,EAAA,IAIhD,QAAAkY,EAAAC,EAAmBL,EAAnBM,OAAAC,cAAAN,GAAAG,EAAAC,EAAAvZ,QAAA0Z,MAAAP,GAAA,EAA0B,KAAfQ,EAAeL,EAAAnI,MACxB,IAAK8H,EAAInI,IAAI6I,GACX,OAAO,GANqC,MAAAC,GAAAR,GAAA,EAAAC,EAAAO,EAAA,YAAAT,GAAA,MAAAI,EAAAM,QAAAN,EAAAM,SAAA,WAAAT,EAAA,MAAAC,GAShD,OAAO,EAqCCS,CAAUjB,EAASpK,cAAeuK,GACpC,OAAO,GAIb,MAAsB,WAAlBH,EAAS/R,MAAqBgS,EAAShS,OAAS+R,EAAS/R,WACjC1F,IAAtB0X,EAAS3W,UAA0B2W,EAAS3W,WAAa0W,EAAS1W,SAOnE,SAAS4X,EAAT9T,GAA8E,IAArDI,EAAqDJ,EAArDI,SACxB+I,EAAWC,cADkE2K,EAEtDC,qBAC3B,SAACpB,EAAiBC,GAAlB,OACEF,EAAUC,EAAUC,GAApBpX,OAAA+W,EAAA,EAAA/W,CAAA,GAEWmX,EAAS/R,OAASgS,EAAShS,KAAO+R,EAAW,GArD9D,SAAyBC,GASvB,YARsB1X,IAAlB0X,EAAShS,OACPgS,EAASrX,OACXqX,EAASrX,KAAOI,IAAMiX,EAASrX,MAAMM,WAEnC+W,EAASrK,eAAiBqK,EAASrK,cAActD,MAAQpB,MAC3D+O,EAASrK,cAAgB,OAGtBqK,EA6CMoB,CAAgBpB,GAHzB,CAIM3K,QAAS0K,EAAS1K,QAAU,EAC5BoB,oBAAoB,IAEtBsJ,GACN,KACA,kBAAAnX,OAAA+W,EAAA,EAAA/W,CAAA,GACKgX,EACA7I,EAAMI,WAAWb,EAASE,OAAS,IAAIJ,OAAS,IAFrD,CAGEf,SAAS,IAAI8F,MAAOC,cAhB2DiG,EAAAzY,OAAAmV,EAAA,EAAAnV,CAAAsY,EAAA,GAE5E9K,EAF4EiL,EAAA,GAErEhL,EAFqEgL,EAAA,GAmB7EhJ,EAAsC+B,kBAAQ,iBAAM,CAAChE,EAAOC,IAAc,CAACD,EAAOC,IACxF,OAAO+I,EAAAtY,EAAA6G,cAACkS,EAAaR,SAAd,CAAuBhH,MAAOA,GAAQ9K","file":"static/js/main.d603362e.chunk.js","sourcesContent":["import dayjs from \"dayjs\";\r\n\r\nimport { API_ROOT } from \"./constants\";\r\nimport { GameRecord, Metadata, PlayerMetadata, PlayerMetadataLite } from \"./dataTypes\";\r\n\r\nexport { default as GameMode, NUMBER_OF_GAME_MODE } from \"./gameMode\";\r\nexport * from \"./dataTypes\";\r\n\r\nasync function apiGet<T>(path: string) {\r\n  const resp = await fetch(API_ROOT + path);\r\n  if (!resp.ok) {\r\n    throw resp;\r\n  }\r\n  return (await resp.json()) as T;\r\n}\r\n\r\nexport async function searchPlayer(prefix: string, limit = 20): Promise<PlayerMetadataLite[]> {\r\n  prefix = prefix.trim();\r\n  if (!prefix) {\r\n    return [];\r\n  }\r\n  return apiGet<PlayerMetadataLite[]>(`search_player/${encodeURIComponent(prefix)}?limit=${limit}`);\r\n}\r\n\r\ninterface DataLoader<T extends Metadata> {\r\n  getMetadata(): Promise<T>;\r\n  getRecords(skip: number, limit: number, cacheTag?: string): Promise<GameRecord[]>;\r\n}\r\n\r\nclass ListingDataLoader implements DataLoader<Metadata> {\r\n  _date: dayjs.Dayjs;\r\n  constructor(date: dayjs.ConfigType) {\r\n    this._date = dayjs(date).startOf(\"day\");\r\n  }\r\n  async getMetadata(): Promise<Metadata> {\r\n    return await apiGet<Metadata>(`count/${this._date.valueOf()}`);\r\n  }\r\n  async getRecords(skip: number, limit: number, cacheTag = \"\"): Promise<GameRecord[]> {\r\n    return await apiGet<GameRecord[]>(`games/${this._date.valueOf()}?skip=${skip}&limit=${limit}&tag=${cacheTag}`);\r\n  }\r\n}\r\n\r\nclass PlayerDataLoader implements DataLoader<PlayerMetadata> {\r\n  _playerId: string;\r\n  constructor(playerId: string) {\r\n    this._playerId = playerId;\r\n  }\r\n  async getMetadata(): Promise<PlayerMetadata> {\r\n    return await apiGet<PlayerMetadata>(`player_stats/${this._playerId}`);\r\n  }\r\n  async getRecords(skip: number, limit: number, cacheTag = \"\"): Promise<GameRecord[]> {\r\n    return await apiGet<GameRecord[]>(`player_records/${this._playerId}?skip=${skip}&limit=${limit}&tag=${cacheTag}`);\r\n  }\r\n}\r\n\r\nexport type FilterPredicate = ((record: GameRecord) => boolean) | null;\r\nexport type ListingDataProvider = _DataProvider<ListingDataLoader>;\r\nexport const ListingDataProvider = Object.freeze({\r\n  create(date: dayjs.ConfigType): ListingDataProvider {\r\n    return new _DataProvider<ListingDataLoader>(new ListingDataLoader(date));\r\n  }\r\n});\r\nexport type PlayerDataProvider = _DataProvider<PlayerDataLoader>;\r\nexport const PlayerDataProvider = Object.freeze({\r\n  create(playerId: string): PlayerDataProvider {\r\n    return new _DataProvider<PlayerDataLoader>(new PlayerDataLoader(playerId));\r\n  }\r\n});\r\nexport type DataProvider = ListingDataProvider | PlayerDataProvider;\r\nclass _DataProvider<\r\n  TLoader extends DataLoader<TMetadata>,\r\n  TMetadata extends Metadata = TLoader extends DataLoader<infer T> ? T : Metadata\r\n> {\r\n  _loader: TLoader;\r\n  _metadata: TMetadata | Promise<TMetadata> | null;\r\n  _countPromise: Promise<number> | null;\r\n  _chunks: (GameRecord[] | Promise<GameRecord[]>)[];\r\n  _itemsPerChunk: number;\r\n  _filterPredicate: FilterPredicate;\r\n  _filteredIndices: number[] | null;\r\n  _filterResultCache: { [uuid: string]: boolean };\r\n\r\n  constructor(loader: TLoader, itemsPerChunk = 100) {\r\n    this._loader = loader;\r\n    this._metadata = null;\r\n    this._countPromise = null;\r\n    this._chunks = [];\r\n    this._itemsPerChunk = itemsPerChunk;\r\n    this._filterPredicate = null;\r\n    this._filteredIndices = null;\r\n    this._filterResultCache = {};\r\n  }\r\n  setFilterPredicate(predicate: FilterPredicate) {\r\n    if (this._filterPredicate === predicate) {\r\n      return;\r\n    }\r\n    this._filterPredicate = predicate;\r\n    this._filterResultCache = {};\r\n    this.updateFilteredIndices();\r\n  }\r\n  updateFilteredIndices() {\r\n    this._filteredIndices = null;\r\n    if (!this._filterPredicate) {\r\n      return;\r\n    }\r\n    const metadata = this.getMetadataSync();\r\n    if (!metadata) {\r\n      return;\r\n    }\r\n    const count = metadata.count;\r\n    let numShownItems = 0;\r\n    let numLoadedItems = 0;\r\n    const indices = [];\r\n    for (let i = 0; i < count; i++) {\r\n      const chunk = this._chunks[Math.floor(i / this._itemsPerChunk)];\r\n      if (!chunk || chunk instanceof Promise) {\r\n        indices.push(i);\r\n        continue;\r\n      }\r\n      numLoadedItems++;\r\n      const game = chunk[i % this._itemsPerChunk];\r\n      let result = this._filterResultCache[game.uuid];\r\n      if (result === undefined) {\r\n        this._filterResultCache[game.uuid] = result = this._filterPredicate(game);\r\n      }\r\n      if (result) {\r\n        indices.push(i);\r\n        numShownItems++;\r\n      }\r\n    }\r\n    this._filteredIndices = indices;\r\n    if (numShownItems < 10 && numLoadedItems >= this._itemsPerChunk) {\r\n      this._triggerFullLoad();\r\n    }\r\n  }\r\n  getMetadataSync(): TMetadata | null {\r\n    return this._metadata && !(this._metadata instanceof Promise) ? this._metadata : null;\r\n  }\r\n  getCountMaybeSync(): number | Promise<number> {\r\n    let metadata = this.getMetadataSync();\r\n    if (metadata) {\r\n      return this._filteredIndices ? this._filteredIndices.length : metadata.count;\r\n    }\r\n    return this.getCount();\r\n  }\r\n  async getCount(): Promise<number> {\r\n    let metadata = this.getMetadataSync();\r\n    if (metadata) {\r\n      return this.getCountMaybeSync();\r\n    }\r\n    if (this._countPromise) {\r\n      return this._countPromise;\r\n    }\r\n    if (!this._metadata) {\r\n      this._metadata = this._loader.getMetadata().then(metadata => {\r\n        this._metadata = metadata;\r\n        this.updateFilteredIndices();\r\n        this._countPromise = null;\r\n        return metadata;\r\n      });\r\n    }\r\n    this._countPromise = Promise.resolve(this._metadata).then(() => this.getCountMaybeSync());\r\n    return this._countPromise;\r\n  }\r\n  getUnfilteredCountSync(): number | null {\r\n    const metadata = this.getMetadataSync();\r\n    if (!metadata) {\r\n      return null;\r\n    }\r\n    return metadata.count;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    const mappedIndex = this._mapItemIndex(index);\r\n    if (mappedIndex === null) {\r\n      return false;\r\n    }\r\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\r\n    return !!this._chunks[chunkNumber] && !(this._chunks[chunkNumber] instanceof Promise);\r\n  }\r\n  getItem(index: number, skipPreload = false): GameRecord | Promise<GameRecord> {\r\n    const mappedIndex = this._mapItemIndex(index);\r\n    if (mappedIndex === null) {\r\n      return this.getCount().then(() => this.getItem(index));\r\n    }\r\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\r\n    const innerIndex = mappedIndex % this._itemsPerChunk;\r\n    const chunk = this._chunks[chunkNumber];\r\n    if (!chunk || chunk instanceof Promise) {\r\n      return this._getChunk(chunkNumber).then(chunk => chunk[innerIndex]);\r\n    }\r\n    if (!skipPreload && !this._filteredIndices) {\r\n      this.preload(index + this._itemsPerChunk);\r\n    }\r\n    return chunk[innerIndex];\r\n  }\r\n  preload(index: number) {\r\n    const count = this.getCountMaybeSync();\r\n    if (count instanceof Promise) {\r\n      return;\r\n    }\r\n    if (index >= count) {\r\n      return;\r\n    }\r\n    this.getItem(index, true);\r\n  }\r\n  _mapItemIndex(requestedIndex: number): number | null {\r\n    const count = this.getCountMaybeSync();\r\n    if (count instanceof Promise) {\r\n      return null;\r\n    }\r\n    if (requestedIndex < 0) {\r\n      return null;\r\n    }\r\n    // Descending order\r\n    const reversed = count - requestedIndex - 1;\r\n    if (reversed < 0) {\r\n      return null;\r\n    }\r\n    return this._filteredIndices ? this._filteredIndices[reversed] : reversed;\r\n  }\r\n  async _getChunk(chunkIndex: number): Promise<GameRecord[]> {\r\n    if (!this._chunks[chunkIndex]) {\r\n      this._chunks[chunkIndex] = this._loadChunk(chunkIndex);\r\n    }\r\n    return this._chunks[chunkIndex];\r\n  }\r\n  _triggerFullLoad() {\r\n    const count = this.getCountMaybeSync();\r\n    if (typeof count !== \"number\") {\r\n      return;\r\n    }\r\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\r\n    for (let i = 0; i < numChunks; i++) {\r\n      if (this._chunks[i]) {\r\n        continue;\r\n      }\r\n      this._getChunk(i);\r\n    }\r\n  }\r\n  async _loadChunk(chunkIndex: number): Promise<GameRecord[]> {\r\n    const count = await this.getCount();\r\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\r\n    if (!numChunks) {\r\n      return [];\r\n    }\r\n    if (chunkIndex >= numChunks) {\r\n      console.warn(`Loading out-of-index chunk: ${chunkIndex}, number of items: ${count}`);\r\n      return [];\r\n    }\r\n    const chunk = await this._loader.getRecords(\r\n      this._itemsPerChunk * chunkIndex,\r\n      this._itemsPerChunk,\r\n      chunkIndex === numChunks - 1 ? count.toString() : \"\"\r\n    );\r\n    if (chunk.length < this._itemsPerChunk && chunkIndex < numChunks - 1) {\r\n      console.warn(\"Unexpected number of items in chunk:\", chunk.length);\r\n    }\r\n    this._chunks[chunkIndex] = chunk;\r\n    this.updateFilteredIndices();\r\n    return chunk;\r\n  }\r\n}\r\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const Container = ({ title = undefined, children = undefined as ReactNode, fluid = false }) => (\r\n  <div className={`my-5 container${fluid ? \"-fluid\" : \"\"}`}>\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-12\">\r\n        {title && <h2 className=\"mb-4\">{title}</h2>}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import { useState, useEffect, ReactNode } from \"react\";\r\nimport React from \"react\";\r\nimport { ReactComponentLike } from \"prop-types\";\r\nimport { triggerRelayout } from '../../utils/index';\r\n\r\nexport function Alert({\r\n  className = \"\",\r\n  type = \"info\",\r\n  container = React.Fragment as ReactComponentLike,\r\n  stateName = \"\",\r\n  children = undefined as ReactNode\r\n}) {\r\n  const stateKey = `alertState_${stateName}`;\r\n  const [closed, setClosed] = useState(\r\n    () => stateName && !!localStorage.getItem(stateKey)\r\n  );\r\n  useEffect(() => {\r\n    if (stateName && closed) {\r\n      localStorage.setItem(stateKey, \"true\");\r\n    }\r\n  }, [closed, stateName, stateKey]);\r\n  if (closed) {\r\n    return null;\r\n  }\r\n  const Cont = container;\r\n  return (\r\n    <Cont>\r\n      <div\r\n        className={`alert alert-${type} alert-dismissible fade show ${className}`}\r\n        role=\"alert\"\r\n      >\r\n        {children}\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n          onClick={event => {\r\n            event.preventDefault();\r\n            setClosed(true);\r\n            triggerRelayout();\r\n          }}\r\n        >\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n      </div>\r\n    </Cont>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { Alert } from \"../misc/alert\";\r\nimport { TITLE_PREFIX } from \"../../utils/constants\";\r\n\r\nexport function AppHeader() {\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <h1>\r\n          <Link to=\"/\">{TITLE_PREFIX}</Link>\r\n        </h1>\r\n      </Container>\r\n      <Alert container={Container} stateName=\"topNote\">\r\n        <h4>说明</h4>\r\n        <ul>\r\n          <li>本页面数据由第三方维护，信息仅供参考，请勿用于不良用途。</li>\r\n          <li>记录包含雀魂国服四人半庄段位战玉之间及王座之间的牌谱。</li>\r\n          <li>\r\n            正常情况下全部对局都会被记录，但不排除因网络问题遗漏部分对局的情况。另 2019 年 10 月 10 日前因程序 Bug\r\n            每天晚间可能遗漏掉 10% ~ 20% 的对局，此 Bug 目前已经修复。\r\n          </li>\r\n          <li>页面不是实时更新，对局一般会在结束后数分钟至数小时内出现。</li>\r\n          <li>\r\n            如有问题或建议，请戳 <a href=\"mailto:i@sapika.ch\">SAPikachu (i@sapika.ch)</a> 或{\" \"}\r\n            <a href=\"https://github.com/SAPikachu/amae-koromo/\">提交 Issue</a>。\r\n          </li>\r\n        </ul>\r\n      </Alert>\r\n      <Alert container={Container} stateName=\"changeLog20191029\">\r\n        <h4>最近更新（2019-10-29）</h4>\r\n        <ul className=\"mt-3 mb-2\">\r\n          <li>支持按前缀搜索玩家</li>\r\n        </ul>\r\n      </Alert>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Loadable from \"react-loadable\";\r\nconst Helmet = Loadable({\r\n  loader: () => import(\"react-helmet\"),\r\n  loading: () => <></>\r\n});\r\n\r\nimport Scroller from \"../misc/scroller\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { AppHeader } from \"./appHeader\";\r\nimport GameRecords from \"../gameRecords\";\r\nimport { TITLE_PREFIX } from '../../utils/constants';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Helmet>\r\n        <title>{TITLE_PREFIX}</title>\r\n      </Helmet>\r\n      <Scroller>\r\n        <AppHeader />\r\n        <Container>\r\n          <GameRecords />\r\n        </Container>\r\n      </Scroller>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"./styles/bootstrap-custom.scss\";\nimport \"./styles/styles.scss\";\n\nimport App from \"./components/app\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n","enum GameMode {\r\n  王座 = 16,\r\n  玉 = 12\r\n}\r\nexport default GameMode;\r\nexport const NUMBER_OF_GAME_MODE = Object.keys(GameMode).filter(\r\n  x => typeof GameMode[x as keyof typeof GameMode] === \"number\"\r\n).length;\r\n","export const DATA_ROOT = \"https://d2ek5tscv4zquv.cloudfront.net/\";\r\nexport const API_ROOT = `${DATA_ROOT}api/`;\r\nexport const TITLE_PREFIX = \"雀魂牌谱屋\";","export function triggerRelayout() {\r\n  requestAnimationFrame(() => window.dispatchEvent(new UIEvent(\"resize\")));\r\n  setTimeout(function() {\r\n    window.dispatchEvent(new UIEvent(\"resize\"));\r\n  }, 200);\r\n}\r\nexport function scrollToTop() {\r\n  window.scrollTo(0, 0);\r\n  requestAnimationFrame(() => window.scrollTo(0, 0));\r\n}\r\nexport const formatPercent = (x: any) => (x > 0 ? `${(x * 100).toFixed(2)}%` : \"\");\r\n","import React from \"react\";\n\nexport default function Loading({ size = \"normal\" }: { size?: \"normal\" | \"small\" }) {\n  return (\n    <div className={`d-flex justify-content-center m-${size === \"normal\" ? 5 : 1}`}>\n      <div className={`spinner-border ${size === \"normal\" ? \"\" : \"spinner-border-sm\"}`} role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n}\n","import dayjs from \"dayjs\";\n\nimport GameMode from \"./gameMode\";\n\nexport const PLAYER_RANKS = \"初士杰豪圣魂\";\nexport const LEVEL_MAX_POINTS = [20, 80, 200, 600, 800, 1000, 1200, 1400, 2000, 2800, 3200, 3600, 4000, 6000, 9000];\nexport const RANK_LABELS = [\"一位\", \"二位\", \"三位\", \"四位\"];\nexport const RANK_COLORS = [\"#28a745\", \"#17a2b8\", \"#6c757d\", \"#dc3545\"];\n\nexport interface PlayerRecord {\n  accountId: number;\n  nickname: string;\n  level: number;\n  score: number;\n}\nexport interface GameRecord {\n  modeId: GameMode;\n  uuid: string;\n  startTime: number;\n  endTime: number;\n  players: PlayerRecord[];\n}\nexport const GameRecord = Object.freeze({\n  getRankIndexByPlayer: function(rec: GameRecord, player: number | string | PlayerRecord): number {\n    const playerId = (typeof player === \"object\" ? player.accountId : player).toString();\n    const sortedPlayers = rec.players.map((player, index) => ({ player, index }));\n    sortedPlayers.sort((a, b) => 5 - b.index + b.player.score - (5 - a.index + a.player.score));\n    for (let i = 0; i < sortedPlayers.length; i++) {\n      if (sortedPlayers[i].player.accountId.toString() === playerId) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  getPlayerRankLabel: function(rec: GameRecord, player: number | string | PlayerRecord): string {\n    return RANK_LABELS[GameRecord.getRankIndexByPlayer(rec, player)] || \"\";\n  },\n  getPlayerRankColor: function(rec: GameRecord, player: number | string | PlayerRecord): string {\n    return RANK_COLORS[GameRecord.getRankIndexByPlayer(rec, player)];\n  },\n  encodeAccountId: (t: number) => 1358437 + ((7 * t + 1117113) ^ 86216345),\n  formatFullStartTime: (rec: GameRecord) => dayjs(rec.startTime * 1000).format(\"YYYY/M/D HH:mm\"),\n  getRecordLink: function(rec: GameRecord, player?: PlayerRecord | number | string) {\n    const playerId = typeof player === \"object\" ? player.accountId : player;\n    const trailer = playerId\n      ? `_a${GameRecord.encodeAccountId(typeof playerId === \"number\" ? playerId : parseInt(playerId))}`\n      : \"\";\n    return `https://www.majsoul.com/1/?paipu=${rec.uuid}${trailer}`;\n  }\n});\n\nclass Level {\n  _majorRank: number;\n  _minorRank: number;\n  constructor(levelId: number) {\n    const realId = levelId % 10000;\n    this._majorRank = Math.floor(realId / 100);\n    this._minorRank = realId % 100;\n  }\n  getTag(): string {\n    const label = PLAYER_RANKS[this._majorRank - 1];\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return label;\n    }\n    return label + this._minorRank;\n  }\n  getMaxPoint(): number {\n    return LEVEL_MAX_POINTS[(this._majorRank - 1) * 3 + this._minorRank - 1];\n  }\n  getStartingPoint(): number {\n    if (this._majorRank === 1) {\n      return 0;\n    }\n    return this.getMaxPoint() / 2;\n  }\n  getNextLevel(): Level {\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return this;\n    }\n    let majorRank = this._majorRank;\n    let minorRank = this._minorRank + 1;\n    if (minorRank > 3) {\n      majorRank++;\n      minorRank = 1;\n    }\n    return new Level(majorRank * 100 + minorRank);\n  }\n  getPreviousLevel(): Level {\n    if (this._majorRank === 1 && this._minorRank === 1) {\n      return this;\n    }\n    let majorRank = this._majorRank;\n    let minorRank = this._minorRank - 1;\n    if (minorRank < 1) {\n      majorRank--;\n      minorRank = 3;\n    }\n    return new Level(majorRank * 100 + minorRank);\n  }\n  formatWithAdjustedScore(score: number) {\n    let maxPoints = this.getMaxPoint();\n    let level: Level = this;\n    if (maxPoints && score >= maxPoints) {\n      level = this.getNextLevel();\n      maxPoints = level.getMaxPoint();\n      score = level.getStartingPoint();\n    } else if (score < 0) {\n      if (!maxPoints || level._majorRank === 1 || (level._majorRank === 2 && level._minorRank === 1)) {\n        score = 0;\n      } else {\n        level = this.getPreviousLevel();\n        maxPoints = level.getMaxPoint();\n        score = level.getStartingPoint();\n      }\n    }\n    return `${level.getTag()} - ${score}${maxPoints ? \"/\" + maxPoints : \"\"}`;\n  }\n}\nexport function getLevelTag(levelId: number) {\n  return new Level(levelId).getTag();\n}\nexport type LevelWithDelta = {\n  id: number;\n  score: number;\n  delta: number;\n};\nexport const LevelWithDelta = Object.freeze({\n  format(obj: LevelWithDelta): string {\n    return new Level(obj.id).formatWithAdjustedScore(obj.score + obj.delta);\n  }\n});\n\nexport interface Metadata {\n  count: number;\n}\nexport interface PlayerMetadataLite extends Metadata {\n  id: number;\n  nickname: string;\n  level: LevelWithDelta;\n}\nexport interface PlayerMetadata extends PlayerMetadataLite {\n  rank_rates: [number, number, number, number];\n  avg_rank: number;\n  negative_rate: number;\n}\n","import React from \"react\";\nimport dayjs from \"dayjs\";\n\nimport { useParams, useLocation, Redirect } from \"react-router\";\nimport { useModel, Model, ModelPlain } from \"./model\";\nimport { generatePath } from \"./routes\";\nimport { useEffect } from \"react\";\nimport { scrollToTop, triggerRelayout } from \"../../utils/index\";\n\ntype ListingRouteParams = {\n  date?: string;\n  modes?: string;\n  search?: string;\n};\n\ntype HistoryState = {\n  model: ModelPlain;\n  pathname: string;\n};\n\nconst ModelBuilders = {\n  player: function(params: { id: string }): Model | string {\n    return {\n      type: \"player\",\n      playerId: params.id,\n      version: 0\n    };\n  },\n  listing: function(params: ListingRouteParams): Model | string {\n    const date = params.date ? dayjs(params.date, \"YYYY-MM-DD\") : null;\n    if (date && !date.isValid()) {\n      return \"/\";\n    }\n    const modes = params.modes\n      ? new Set(\n          params.modes\n            .split(\".\")\n            .map(x => x.trim())\n            .filter(x => !!x)\n        )\n      : null;\n    return {\n      date: date ? date.startOf(\"day\").valueOf() : null,\n      selectedModes: modes,\n      searchText: params.search || \"\",\n      version: 0\n    };\n  }\n};\n\nexport function RouteSync({ view }: { view: keyof typeof ModelBuilders }): React.FunctionComponentElement<any> {\n  const params = useParams();\n  const [model, updateModel] = useModel();\n  const location = useLocation<HistoryState>();\n  useEffect(triggerRelayout, [model.type]);\n  const state = location.state;\n  // console.log(params, model, location, state);\n  if (state && state.model.version === model.version) {\n    delete (model as Model).pendingRouteUpdate;\n    if (location.pathname !== state.pathname) {\n      return <Redirect to={{ pathname: state.pathname, state }} />;\n    }\n    return <></>;\n  }\n  if (!state) {\n    // Navigation\n    const modelResult = ModelBuilders[view](params as any);\n    if (typeof modelResult === \"string\") {\n      return <Redirect to={modelResult} />;\n    }\n    const newModel: Model = {\n      ...modelResult,\n      version: model.version\n    };\n    updateModel(newModel);\n    scrollToTop();\n    return (\n      <Redirect\n        to={{ pathname: location.pathname, state: { pathname: location.pathname, model: Model.toPlain(newModel) } }}\n      />\n    );\n  }\n  if (model.pendingRouteUpdate) {\n    // Model updated\n    const newPath = generatePath(model);\n    delete (model as Model).pendingRouteUpdate; // Do not trigger update\n    return <Redirect to={{ pathname: newPath, state: { pathname: newPath, model: Model.toPlain(model) } }} />;\n  } else {\n    const restoredModel = Model.fromPlain(state.model);\n    updateModel(restoredModel);\n    return <></>;\n  }\n}\n","import React from \"react\";\r\n\r\nexport interface CheckboxItem {\r\n  key: string;\r\n  label: string;\r\n}\r\n\r\nexport function CheckboxGroup({\r\n  items = [] as CheckboxItem[],\r\n  selectedItemKeys = null as Set<string> | null,\r\n  groupKey = \"default\",\r\n  onChange = (selectedItemKeys: Set<string>) => {}\r\n}) {\r\n  const setSelected = function(key: string, isSelected: boolean) {\r\n    if (isSelected && (!selectedItemKeys || selectedItemKeys.has(key))) {\r\n      return;\r\n    }\r\n    if (!isSelected && selectedItemKeys && !selectedItemKeys.has(key)) {\r\n      return;\r\n    }\r\n    const newSet = new Set(selectedItemKeys || items.map(x => x.key));\r\n    if (isSelected) {\r\n      newSet.add(key);\r\n    } else {\r\n      newSet.delete(key);\r\n    }\r\n    onChange(newSet);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {items.map(item => (\r\n        <div className=\"form-check form-check-inline\" key={item.key}>\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            id={`CG_${groupKey}_${item.key}`}\r\n            value={item.key}\r\n            checked={!selectedItemKeys || selectedItemKeys.has(item.key)}\r\n            onChange={event => setSelected(item.key, event.currentTarget.checked)}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor={`CG_${groupKey}_${item.key}`}>\r\n            {item.label}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport dayjs from \"dayjs\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport function DatePicker({\r\n  date = dayjs() as dayjs.ConfigType,\r\n  onChange = (_: dayjs.ConfigType) => {},\r\n  className = \"\",\r\n  min = 0 as dayjs.ConfigType,\r\n  max = dayjs() as dayjs.ConfigType\r\n}) {\r\n  const handleChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => onChange(dayjs(e.currentTarget.value, \"YYYY-MM-DD\")),\r\n    [onChange]\r\n  );\r\n  return (\r\n    <input\r\n      className={className}\r\n      type=\"date\"\r\n      value={dayjs(date).format(\"YYYY-MM-DD\")}\r\n      min={min ? dayjs(min).format(\"YYYY-MM-DD\") : undefined}\r\n      max={max ? dayjs(max).format(\"YYYY-MM-DD\") : undefined}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const FormRow = ({ title = \"\", children = undefined as ReactNode }) => (\r\n  <div className=\"form-group row\">\r\n    <label className=\"col-sm-2 col-form-label\">{title}</label>\r\n    <div className=\"col-sm-10\">{children}</div>\r\n  </div>\r\n);\r\n","import { useCallback } from \"react\";\r\nimport React from \"react\";\r\n\r\nimport { FormRow, DatePicker, CheckboxGroup } from \"../form\";\r\nimport { GameMode } from \"../../utils/dataSource\";\r\nimport { useModel } from \"./model\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport const MODE_CHECKBOXES = Object.keys(GameMode)\r\n  .filter(x => typeof GameMode[x as keyof typeof GameMode] !== \"string\")\r\n  .map(x => ({\r\n    key: String(GameMode[x as keyof typeof GameMode]),\r\n    label: x\r\n  }));\r\n\r\nconst DEFAULT_DATE = dayjs().startOf(\"day\");\r\n\r\nexport function FilterPanel({ className = \"\" }) {\r\n  const [model, updateModel] = useModel();\r\n  const updateSearchTextFromEvent = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => updateModel({ searchText: e.currentTarget.value }),\r\n    [updateModel]\r\n  );\r\n  const setSelectedItems = useCallback(\r\n    (selectedItemKeys: Set<string>) => updateModel({ selectedModes: selectedItemKeys }),\r\n    [updateModel]\r\n  );\r\n  const setDate = useCallback((date: dayjs.ConfigType) => updateModel({ date }), [updateModel]);\r\n  if (model.type !== undefined) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={className}>\r\n      <FormRow title=\"日期\">\r\n        <DatePicker min=\"2019-08-23\" date={model.date || DEFAULT_DATE} onChange={setDate} className=\"form-control\" />\r\n      </FormRow>\r\n      <FormRow title=\"查找玩家\">\r\n        <input type=\"text\" className=\"form-control\" value={model.searchText} onChange={updateSearchTextFromEvent} />\r\n      </FormRow>\r\n      <FormRow>\r\n        <CheckboxGroup items={MODE_CHECKBOXES} selectedItemKeys={model.selectedModes} onChange={setSelectedItems} />\r\n      </FormRow>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { useEffect, useState, useMemo } from \"react\";\n\nimport { useModel } from \"./model\";\nimport Loading from \"../misc/loading\";\nimport { PlayerMetadataLite, LevelWithDelta, getLevelTag } from \"../../utils/dataTypes\";\nimport { searchPlayer } from \"../../utils/dataSource\";\nimport { Link } from \"react-router-dom\";\nimport { generatePath } from \"./routes\";\n\nconst playerSearchCache = {} as { [prefix: string]: PlayerMetadataLite[] | Promise<PlayerMetadataLite[]> };\nconst NUM_RESULTS_SHOWN = 6;\nconst NUM_FETCH = 20;\n\nconst normalizeName = (s: string) => s.toLowerCase().trim();\n\nfunction findRawResultFromCache(prefix: string): { result: PlayerMetadataLite[]; isExactMatch: boolean } | null {\n  const normalizedPrefix = normalizeName(prefix);\n  prefix = normalizedPrefix;\n  while (prefix) {\n    const players = playerSearchCache[prefix];\n    if (!players || players instanceof Promise) {\n      prefix = prefix.slice(0, prefix.length - 1);\n      continue;\n    }\n    return {\n      isExactMatch: prefix === normalizedPrefix,\n      result: players\n    };\n  }\n  return null;\n}\n\nfunction PlayerSearchResult({ searchText }: { searchText: string }) {\n  const [version, setVersion] = useState(0);\n  const [players, isLoading, mayHaveMore] = useMemo(() => {\n    const cachedResult = findRawResultFromCache(searchText);\n    if (!cachedResult) {\n      return [[], true];\n    }\n    if (cachedResult.isExactMatch) {\n      return [cachedResult.result, false];\n    }\n    const normalizedPrefix = normalizeName(searchText);\n    let mayHaveMore = cachedResult.result.length >= NUM_FETCH;\n    const filteredPlayers = [] as PlayerMetadataLite[];\n    cachedResult.result.forEach(player => {\n      if (normalizeName(player.nickname).startsWith(normalizedPrefix)) {\n        filteredPlayers.push(player);\n      } else if (filteredPlayers.length) {\n        // Result covers all players who have the specified prefix\n        mayHaveMore = false;\n      }\n    });\n    return [filteredPlayers, mayHaveMore && filteredPlayers.length < NUM_RESULTS_SHOWN, mayHaveMore];\n  }, [searchText, version]);\n  useEffect(() => {\n    const prefix = normalizeName(searchText);\n    if (playerSearchCache[prefix]) {\n      return;\n    }\n    if (!isLoading) {\n      return;\n    }\n    let cancelled = false;\n    let debounceToken: NodeJS.Timeout | undefined = setTimeout(() => {\n      debounceToken = undefined;\n      if (cancelled) {\n        return;\n      }\n      if (playerSearchCache[prefix]) {\n        return;\n      }\n      playerSearchCache[prefix] = searchPlayer(prefix).then(function(players) {\n        playerSearchCache[prefix] = players;\n        if (!cancelled) {\n          setVersion(new Date().getTime());\n        }\n        return players;\n      });\n    }, 500);\n    return () => {\n      cancelled = true;\n      if (debounceToken) {\n        clearTimeout(debounceToken);\n      }\n    };\n  }, [searchText, isLoading]);\n  return (\n    <>\n      <h6 className=\"text-center mb-2\">玩家前缀搜索</h6>\n      <ul className=\"list-unstyled row mb-2\">\n        {players.slice(0, NUM_RESULTS_SHOWN).map(x => (\n          <li key={x.id} className=\"col-6\">\n            <Link to={generatePath({ type: \"player\", playerId: x.id.toString(), version: 0 })}>\n              <span>\n                [{getLevelTag(x.level.id)}] {x.nickname}\n              </span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      {(isLoading && <Loading size=\"small\" />) ||\n        ((players.length > NUM_RESULTS_SHOWN || mayHaveMore) && (\n          <small className=\"d-block text-center text-muted\">（输入更长名字显示其它结果）</small>\n        ))}\n    </>\n  );\n}\n\nexport function PlayerSearch({ className = \"\" }) {\n  const [model] = useModel();\n  if (\"playerId\" in model || !model.searchText) {\n    return <></>;\n  }\n  return (\n    <div className={className}>\n      <PlayerSearchResult searchText={model.searchText} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Switch, Route, Redirect, generatePath as genPath } from \"react-router-dom\";\n\nimport { Model, ModelProvider } from \"./model\";\nimport dayjs from \"dayjs\";\nimport { RouteSync } from \"./routeSync\";\nimport { DataAdapterProvider } from \"./dataAdapterProvider\";\nimport { FilterPanel } from \"./filterPanel\";\nimport Loadable from \"react-loadable\";\nimport Loading from \"../misc/loading\";\nimport { PlayerSearch } from \"./playerSearch\";\nconst PlayerDetails = Loadable({\n  loader: () => import(\"./playerDetails\"),\n  loading: () => <Loading />\n});\nconst GameRecordTable = Loadable({\n  loader: () => import(\"./table\"),\n  loading: () => <Loading />\n});\n\nconst PLAYER_PATH = \"/player/:id\";\nconst PATH = \"/:date(\\\\d{4}-\\\\d{2}-\\\\d{2})/:modes([0-9.]+)?/:search?\";\n\nexport function generatePath(model: Model): string {\n  if (model.type === \"player\") {\n    return genPath(PLAYER_PATH, { id: model.playerId });\n  }\n  if ((!model.selectedModes || !model.selectedModes.size) && !model.searchText && !model.date) {\n    return \"/\";\n  }\n  return genPath(PATH, {\n    date: dayjs(model.date || new Date()).format(\"YYYY-MM-DD\"),\n    modes: model.selectedModes && model.selectedModes.size ? Array.from(model.selectedModes).join(\".\") : undefined,\n    search: model.searchText || undefined\n  });\n}\n\nfunction Routes() {\n  return (\n    <ModelProvider>\n      <DataAdapterProvider>\n        <Switch>\n          <Route exact path={PLAYER_PATH}>\n            <RouteSync view=\"player\" />\n            <PlayerDetails />\n            <GameRecordTable showFullTime showStartEnd={false} />\n          </Route>\n          <Route exact path={[\"/\", PATH]}>\n            <RouteSync view=\"listing\" />\n            <div className=\"row\">\n              <FilterPanel className=\"col\" />\n              <PlayerSearch className=\"col-12 col-sm-6 col-md-4\" />\n            </div>\n            <GameRecordTable />\n          </Route>\n          <Route>\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </DataAdapterProvider>\n    </ModelProvider>\n  );\n}\nexport default Routes;\n","import { useState, useEffect, useMemo, useCallback, useContext } from \"react\";\r\nimport React, { ReactChild } from \"react\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport {\r\n  DataProvider,\r\n  GameRecord,\r\n  NUMBER_OF_GAME_MODE,\r\n  FilterPredicate,\r\n  ListingDataProvider,\r\n  PlayerDataProvider\r\n} from \"../../utils/dataSource\";\r\nimport { useModel, Model } from \"./model\";\r\nimport { Metadata } from \"../../utils/dataSource\";\r\n\r\ninterface ItemLoadingPlaceholder {\r\n  loading: boolean;\r\n}\r\n\r\nconst loadingPlaceholder = { loading: true };\r\n\r\nexport interface IDataAdapter {\r\n  getCount(): number;\r\n  getUnfilteredCount(): number;\r\n  getMetadata<T extends Metadata>(): T | null;\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder;\r\n  isItemLoaded(index: number): boolean;\r\n}\r\n\r\nclass _DummyDataAdapter implements IDataAdapter {\r\n  getCount(): number {\r\n    return 0;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return 0;\r\n  }\r\n  getMetadata<T extends Metadata>(): T | null {\r\n    return null;\r\n  }\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder {\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const DUMMY_DATA_ADAPTER = new _DummyDataAdapter() as IDataAdapter;\r\n\r\nconst noop = () => {};\r\n\r\nclass DataAdapter implements IDataAdapter {\r\n  _provider: DataProvider;\r\n  _onDataUpdate: () => void;\r\n  _triggeredRequest: boolean;\r\n\r\n  constructor(provider: DataProvider, onDataUpdate = noop) {\r\n    this._provider = provider;\r\n    this._onDataUpdate = onDataUpdate;\r\n    this._triggeredRequest = false;\r\n  }\r\n  _installHook(promise: Promise<any>) {\r\n    if (this._triggeredRequest) {\r\n      return;\r\n    }\r\n    this._triggeredRequest = true;\r\n    promise.then(this._callHook.bind(this));\r\n  }\r\n  _callHook() {\r\n    this._onDataUpdate();\r\n  }\r\n  getCount(): number {\r\n    const maybeCount = this._provider.getCountMaybeSync();\r\n    if (maybeCount instanceof Promise) {\r\n      this._installHook(maybeCount);\r\n      return 0;\r\n    }\r\n    return maybeCount;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return this._provider.getUnfilteredCountSync() || 0;\r\n  }\r\n  getMetadata<T extends Metadata>(): T | null {\r\n    return this._provider.getMetadataSync() as T | null;\r\n  }\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder {\r\n    if (this._provider.isItemLoaded(index)) {\r\n      return this._provider.getItem(index) as GameRecord;\r\n    }\r\n    if (!this._triggeredRequest) {\r\n      this._installHook(this._provider.getItem(index) as Promise<GameRecord>);\r\n    }\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    if (index < 0) {\r\n      return false;\r\n    }\r\n    return this._provider.isItemLoaded(index);\r\n  }\r\n  setUpdateHook(hook: () => void) {\r\n    this._onDataUpdate = hook;\r\n  }\r\n  cancelUpdateHook() {\r\n    this._onDataUpdate = noop;\r\n  }\r\n}\r\n\r\nconst DataAdapterContext = React.createContext(DUMMY_DATA_ADAPTER);\r\n\r\nexport const useDataAdapter = () => useContext(DataAdapterContext);\r\nexport const DataAdapterConsumer = DataAdapterContext.Consumer;\r\n\r\nfunction getProviderKey(model: Model): string {\r\n  if (model.type === undefined) {\r\n    return dayjs(model.date || dayjs())\r\n      .startOf(\"day\")\r\n      .valueOf()\r\n      .toString();\r\n  } else if (model.type === \"player\") {\r\n    return `player-${model.playerId}`;\r\n  }\r\n  throw new Error(\"Unknown model type\");\r\n}\r\n\r\nfunction createProvider(model: Model): DataProvider {\r\n  if (model.type === undefined) {\r\n    return ListingDataProvider.create(model.date || dayjs().startOf(\"day\"));\r\n  }\r\n  if (model.type === \"player\") {\r\n    return PlayerDataProvider.create(model.playerId);\r\n  }\r\n  throw new Error(\"Not implemented\");\r\n}\r\n\r\nfunction usePredicate(model: Model): FilterPredicate {\r\n  if (model.type !== undefined) {\r\n    return useMemo(() => null, [null, \"\"]);\r\n  }\r\n  const searchText = (model.searchText || \"\").trim() || \"\";\r\n  const needPredicate = searchText || (model.selectedModes && model.selectedModes.size < NUMBER_OF_GAME_MODE);\r\n  return useMemo(\r\n    () =>\r\n      needPredicate\r\n        ? game => {\r\n            if (model.selectedModes && !model.selectedModes.has(game.modeId.toString())) {\r\n              return false;\r\n            }\r\n            if (!game.players.some(player => player.nickname.toLowerCase().indexOf(searchText) > -1)) {\r\n              return false;\r\n            }\r\n            return true;\r\n          }\r\n        : null,\r\n    [(model.type === undefined && model.selectedModes) || null, searchText]\r\n  );\r\n}\r\n\r\nexport function DataAdapterProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const [model] = useModel();\r\n  const [dataProviders] = useState(() => ({} as { [key: string]: DataProvider }));\r\n  const searchPredicate = usePredicate(model);\r\n  const dataProvider = useMemo(() => {\r\n    const key = getProviderKey(model);\r\n    if (!dataProviders[key]) {\r\n      dataProviders[key] = createProvider(model);\r\n    }\r\n    return dataProviders[key];\r\n  }, [model, dataProviders]);\r\n  const [dataAdapter, setDataAdapter] = useState(() => DUMMY_DATA_ADAPTER);\r\n  const refreshDataAdapter = useCallback(() => {\r\n    dataProvider.setFilterPredicate(searchPredicate);\r\n    const adapter = new DataAdapter(dataProvider);\r\n    setDataAdapter(adapter);\r\n  }, [dataProvider, searchPredicate]);\r\n  useEffect(refreshDataAdapter, [refreshDataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      return () => adapter.cancelUpdateHook();\r\n    }\r\n  }, [dataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      adapter.setUpdateHook(refreshDataAdapter);\r\n    }\r\n  }, [dataAdapter, refreshDataAdapter]);\r\n  useEffect(() => {\r\n    dataProvider.getCountMaybeSync(); // Preload metadata\r\n  }, [dataProvider]);\r\n  return <DataAdapterContext.Provider value={dataAdapter}>{children}</DataAdapterContext.Provider>;\r\n}\r\n","import React, { ReactChild, useContext } from \"react\";\r\n\r\nimport { WindowScrollerChildProps } from \"react-virtualized\";\r\nimport { WindowScroller } from \"react-virtualized/dist/es/WindowScroller\";\r\n\r\nconst ScrollerContext = React.createContext<WindowScrollerChildProps>({} as any);\r\n\r\nexport const useScrollerProps = () => useContext(ScrollerContext);\r\n\r\nfunction Scroller({ children }: { children: ReactChild | ReactChild[] }) {\r\n  return (\r\n    <WindowScroller>\r\n      {scrollerProps => <ScrollerContext.Provider value={scrollerProps}>{children}</ScrollerContext.Provider>}\r\n    </WindowScroller>\r\n  );\r\n}\r\nexport default Scroller;\r\n","import dayjs from \"dayjs\";\r\nimport React, { useReducer, useContext, ReactChild } from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport { NUMBER_OF_GAME_MODE } from \"../../utils/gameMode\";\r\nimport { useLocation } from \"react-router\";\r\n\r\ninterface WithRuntimeInfo {\r\n  version: number;\r\n  pendingRouteUpdate?: boolean;\r\n}\r\nexport interface ListingModel {\r\n  type?: undefined;\r\n  date: dayjs.ConfigType | null;\r\n  selectedModes: Set<string> | null;\r\n  searchText: string;\r\n}\r\nexport interface PlayerModel {\r\n  type: \"player\";\r\n  playerId: string;\r\n}\r\nexport type Model = (ListingModel | PlayerModel) & WithRuntimeInfo;\r\ninterface ListingModelPlain {\r\n  type?: undefined;\r\n  date: number | null;\r\n  selectedModes: string[] | null;\r\n  searchText: string;\r\n}\r\nexport type ModelPlain = (ListingModelPlain | PlayerModel) & WithRuntimeInfo;\r\nexport const Model = Object.freeze({\r\n  toPlain: function(model: Model): ModelPlain {\r\n    if (model.type === \"player\") {\r\n      return model;\r\n    }\r\n    return {\r\n      ...model,\r\n      date: model.date ? dayjs(model.date).valueOf() : null,\r\n      selectedModes: model.selectedModes ? Array.from(model.selectedModes) : null\r\n    };\r\n  },\r\n  fromPlain: function(model: ModelPlain): ListingModel | PlayerModel {\r\n    if (model.type === \"player\") {\r\n      return model;\r\n    }\r\n    if (model.type === undefined) {\r\n      return {\r\n        date: model.date || null,\r\n        searchText: model.searchText || \"\",\r\n        selectedModes: model.selectedModes ? new Set(model.selectedModes) : null\r\n      };\r\n    }\r\n    console.warn(\"Unknown model data from location state:\", model);\r\n    return DEFAULT_MODEL;\r\n  }\r\n});\r\ntype ModelUpdate = Partial<ListingModel> | PlayerModel;\r\ntype DispatchModelUpdate = (props: ModelUpdate) => void;\r\n\r\nconst DEFAULT_MODEL: ListingModel = { date: null, selectedModes: null, searchText: \"\" };\r\nconst ModelContext = React.createContext<[Readonly<Model>, DispatchModelUpdate]>([\r\n  { ...DEFAULT_MODEL, version: 0 },\r\n  () => {}\r\n]);\r\nexport const useModel = () => useContext(ModelContext);\r\n\r\nfunction isSameSet<T>(set: Set<T>, other: Set<T>) {\r\n  if (set.size !== other.size) {\r\n    return false;\r\n  }\r\n  for (const elem of other) {\r\n    if (!set.has(elem)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction normalizeUpdate(newProps: ModelUpdate): ModelUpdate {\r\n  if (newProps.type === undefined) {\r\n    if (newProps.date) {\r\n      newProps.date = dayjs(newProps.date).valueOf();\r\n    }\r\n    if (newProps.selectedModes && newProps.selectedModes.size >= NUMBER_OF_GAME_MODE) {\r\n      newProps.selectedModes = null;\r\n    }\r\n  }\r\n  return newProps;\r\n}\r\nfunction isChanged(oldModel: Model, newProps: ModelUpdate): boolean {\r\n  if (oldModel.type !== newProps.type) {\r\n    return true;\r\n  }\r\n  if (oldModel.type === undefined && newProps.type === oldModel.type) {\r\n    if (\r\n      newProps.date !== undefined &&\r\n      newProps.date !== oldModel.date &&\r\n      (!newProps.date || !oldModel.date || !dayjs(newProps.date).isSame(oldModel.date, \"day\"))\r\n    ) {\r\n      return true;\r\n    }\r\n    if (newProps.searchText !== undefined && newProps.searchText !== oldModel.searchText) {\r\n      return true;\r\n    }\r\n    let newSelectedModes = newProps.selectedModes;\r\n    if (newSelectedModes && newSelectedModes.size >= NUMBER_OF_GAME_MODE) {\r\n      newSelectedModes = null;\r\n    }\r\n    if (newSelectedModes !== undefined && newSelectedModes !== oldModel.selectedModes) {\r\n      if (!newSelectedModes || !oldModel.selectedModes) {\r\n        return true;\r\n      }\r\n      if (isSameSet(oldModel.selectedModes, newSelectedModes)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  if (oldModel.type === \"player\" && newProps.type === oldModel.type) {\r\n    if (newProps.playerId !== undefined && newProps.playerId !== oldModel.playerId) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function ModelProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const location = useLocation();\r\n  const [model, updateModel] = useReducer(\r\n    (oldModel: Model, newProps: ModelUpdate): Model =>\r\n      isChanged(oldModel, newProps)\r\n        ? {\r\n            ...((oldModel.type === newProps.type ? oldModel : {}) as Model),\r\n            ...normalizeUpdate(newProps),\r\n            version: oldModel.version + 1,\r\n            pendingRouteUpdate: true\r\n          }\r\n        : oldModel,\r\n    null,\r\n    (): Model => ({\r\n      ...DEFAULT_MODEL,\r\n      ...Model.fromPlain((location.state || {}).model || {}),\r\n      version: new Date().getTime()\r\n    })\r\n  );\r\n  const value: [Model, DispatchModelUpdate] = useMemo(() => [model, updateModel], [model, updateModel]);\r\n  return <ModelContext.Provider value={value}>{children}</ModelContext.Provider>;\r\n}\r\n"],"sourceRoot":""}