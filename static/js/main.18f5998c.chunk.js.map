{"version":3,"sources":["components/gameRecords/model.tsx","components/layout/container.tsx","components/misc/alert.tsx","components/app/appHeader.tsx","components/app/index.tsx","index.tsx","utils/dataSource.ts","utils/gameMode.ts","utils/constants.ts","utils/index.ts","components/gameRecords/routeSync.tsx","components/form/checkboxGroup.tsx","components/form/datePicker.tsx","components/form/formRow.tsx","components/gameRecords/filterPanel.tsx","components/gameRecords/routes.tsx","components/gameRecords/dataAdapterProvider.tsx","utils/dataTypes.ts","components/misc/scroller.tsx"],"names":["Model","Object","freeze","toPlain","model","type","_home_travis_build_SAPikachu_amae_koromo_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","date","dayjs","valueOf","selectedModes","Array","from","fromPlain","undefined","searchText","Set","console","warn","DEFAULT_MODEL","ModelContext","React","createContext","version","useModel","useContext","isChanged","oldModel","newProps","isSame","newSelectedModes","size","NUMBER_OF_GAME_MODE","set","other","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","elem","value","has","err","return","isSameSet","playerId","ModelProvider","_ref","children","location","useLocation","_useReducer","useReducer","normalizeUpdate","pendingRouteUpdate","state","Date","getTime","_useReducer2","_home_travis_build_SAPikachu_amae_koromo_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","updateModel","useMemo","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","Provider","Container","_ref$title","title","_ref$children","_ref$fluid","fluid","react_default","className","concat","Alert","_ref$className","_ref$type","_ref$container","container","Fragment","_ref$stateName","stateName","stateKey","_useState","useState","localStorage","getItem","_useState2","slicedToArray","closed","setClosed","useEffect","setItem","Cont","role","data-dismiss","aria-label","onClick","event","preventDefault","triggerRelayout","aria-hidden","AppHeader","container_Container","react_router_dom","to","TITLE_PREFIX","href","Helmet","Loadable","loader","__webpack_require__","e","then","t","bind","loading","App","scroller","routes","rootElement","document","getElementById","render","react","app","ApiGet","_callee8","path","resp","_home_travis_build_SAPikachu_amae_koromo_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context8","prev","fetch","API_ROOT","sent","ok","json","abrupt","stop","ListingDataLoader","_home_travis_build_SAPikachu_amae_koromo_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_date","startOf","skip","limit","cacheTag","PlayerDataLoader","_playerId","ListingDataProvider","create","_DataProvider","PlayerDataProvider","itemsPerChunk","arguments","length","_loader","_metadata","_countPromise","_chunks","_itemsPerChunk","_filterPredicate","_filteredIndices","_filterResultCache","predicate","updateFilteredIndices","metadata","getMetadataSync","count","numShownItems","numLoadedItems","indices","i","chunk","Math","floor","Promise","push","game","result","uuid","_triggerFullLoad","getCount","getCountMaybeSync","getMetadata","_this","resolve","index","mappedIndex","_mapItemIndex","chunkNumber","_this2","skipPreload","innerIndex","_getChunk","preload","requestedIndex","reversed","chunkIndex","_loadChunk","numChunks","ceil","getRecords","toString","GameMode","keys","filter","x","d","__webpack_exports__","requestAnimationFrame","window","dispatchEvent","UIEvent","setTimeout","scrollToTop","scrollTo","formatPercent","toFixed","ModelBuilders","player","params","id","listing","isValid","modes","split","map","trim","search","RouteSync","view","useParams","_useModel","_useModel2","pathname","react_router","modelResult","newModel","objectSpread","newPath","generatePath","CheckboxGroup","_ref$items","items","_ref$selectedItemKeys","selectedItemKeys","_ref$groupKey","groupKey","_ref$onChange","onChange","setSelected","key","isSelected","newSet","add","delete","item","checked","currentTarget","htmlFor","label","DatePicker","_ref$date","_","_ref$min","min","_ref$max","max","handleChange","useCallback","format","FormRow","MODE_CHECKBOXES","String","DEFAULT_DATE","FilterPanel","updateSearchTextFromEvent","setSelectedItems","setDate","formRow_FormRow","PlayerDetails","all","GameRecordTable","PLAYER_PATH","PATH","genPath","join","Routes","gameRecords_model","dataAdapterProvider","exact","showFullTime","showStartEnd","loadingPlaceholder","DUMMY_DATA_ADAPTER","noop","DataAdapter","provider","onDataUpdate","_provider","_onDataUpdate","_triggeredRequest","promise","_callHook","maybeCount","_installHook","getUnfilteredCountSync","isItemLoaded","hook","DataAdapterContext","useDataAdapter","Consumer","DataAdapterProvider","dataProviders","searchPredicate","needPredicate","modeId","players","some","nickname","toLowerCase","indexOf","usePredicate","dataProvider","Error","getProviderKey","createProvider","_useState3","_useState4","dataAdapter","setDataAdapter","refreshDataAdapter","setFilterPredicate","adapter","cancelUpdateHook","setUpdateHook","LEVEL_MAX_POINTS","RANK_LABELS","RANK_COLORS","GameRecord","getRankIndexByPlayer","rec","accountId","sortedPlayers","sort","b","score","getPlayerRankLabel","getPlayerRankColor","encodeAccountId","formatFullStartTime","startTime","getRecordLink","trailer","parseInt","Level","levelId","_home_travis_build_SAPikachu_amae_koromo_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_majorRank","_minorRank","realId","getMaxPoint","majorRank","minorRank","maxPoints","level","getNextLevel","getStartingPoint","getPreviousLevel","getTag","getLevelTag","LevelWithDelta","obj","formatWithAdjustedScore","delta","useScrollerProps","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_virtualized_dist_es_WindowScroller__WEBPACK_IMPORTED_MODULE_1__","ScrollerContext","Scroller","scrollerProps"],"mappings":"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","file":"static/js/main.18f5998c.chunk.js","sourcesContent":["import dayjs from \"dayjs\";\r\nimport React, { useReducer, useContext, ReactChild } from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport { NUMBER_OF_GAME_MODE } from \"../../utils/gameMode\";\r\nimport { useLocation } from \"react-router\";\r\n\r\ninterface WithRuntimeInfo {\r\n  version: number;\r\n  pendingRouteUpdate?: boolean;\r\n}\r\nexport interface ListingModel {\r\n  type?: undefined;\r\n  date: dayjs.ConfigType | null;\r\n  selectedModes: Set<string> | null;\r\n  searchText: string;\r\n}\r\nexport interface PlayerModel {\r\n  type: \"player\";\r\n  playerId: string;\r\n}\r\nexport type Model = (ListingModel | PlayerModel) & WithRuntimeInfo;\r\ninterface ListingModelPlain {\r\n  type?: undefined;\r\n  date: number | null;\r\n  selectedModes: string[] | null;\r\n  searchText: string;\r\n}\r\nexport type ModelPlain = (ListingModelPlain | PlayerModel) & WithRuntimeInfo;\r\nexport const Model = Object.freeze({\r\n  toPlain: function(model: Model): ModelPlain {\r\n    if (model.type === \"player\") {\r\n      return model;\r\n    }\r\n    return {\r\n      ...model,\r\n      date: model.date ? dayjs(model.date).valueOf() : null,\r\n      selectedModes: model.selectedModes ? Array.from(model.selectedModes) : null\r\n    };\r\n  },\r\n  fromPlain: function(model: ModelPlain): ListingModel | PlayerModel {\r\n    if (model.type === \"player\") {\r\n      return model;\r\n    }\r\n    if (model.type === undefined) {\r\n      return {\r\n        date: model.date || null,\r\n        searchText: model.searchText || \"\",\r\n        selectedModes: model.selectedModes ? new Set(model.selectedModes) : null\r\n      };\r\n    }\r\n    console.warn(\"Unknown model data from location state:\", model);\r\n    return DEFAULT_MODEL;\r\n  }\r\n});\r\ntype ModelUpdate = Partial<ListingModel> | PlayerModel;\r\ntype DispatchModelUpdate = (props: ModelUpdate) => void;\r\n\r\nconst DEFAULT_MODEL: ListingModel = { date: null, selectedModes: null, searchText: \"\" };\r\nconst ModelContext = React.createContext<[Readonly<Model>, DispatchModelUpdate]>([\r\n  { ...DEFAULT_MODEL, version: 0 },\r\n  () => {}\r\n]);\r\nexport const useModel = () => useContext(ModelContext);\r\n\r\nfunction isSameSet<T>(set: Set<T>, other: Set<T>) {\r\n  if (set.size !== other.size) {\r\n    return false;\r\n  }\r\n  for (const elem of other) {\r\n    if (!set.has(elem)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction normalizeUpdate(newProps: ModelUpdate): ModelUpdate {\r\n  if (newProps.type === undefined) {\r\n    if (newProps.date) {\r\n      newProps.date = dayjs(newProps.date).valueOf();\r\n    }\r\n    if (newProps.selectedModes && newProps.selectedModes.size >= NUMBER_OF_GAME_MODE) {\r\n      newProps.selectedModes = null;\r\n    }\r\n  }\r\n  return newProps;\r\n}\r\nfunction isChanged(oldModel: Model, newProps: ModelUpdate): boolean {\r\n  if (oldModel.type !== newProps.type) {\r\n    return true;\r\n  }\r\n  if (oldModel.type === undefined && newProps.type === oldModel.type) {\r\n    if (\r\n      newProps.date !== undefined &&\r\n      newProps.date !== oldModel.date &&\r\n      (!newProps.date || !oldModel.date || !dayjs(newProps.date).isSame(oldModel.date, \"day\"))\r\n    ) {\r\n      return true;\r\n    }\r\n    if (newProps.searchText !== undefined && newProps.searchText !== oldModel.searchText) {\r\n      return true;\r\n    }\r\n    let newSelectedModes = newProps.selectedModes;\r\n    if (newSelectedModes && newSelectedModes.size >= NUMBER_OF_GAME_MODE) {\r\n      newSelectedModes = null;\r\n    }\r\n    if (newSelectedModes !== undefined && newSelectedModes !== oldModel.selectedModes) {\r\n      if (!newSelectedModes || !oldModel.selectedModes) {\r\n        return true;\r\n      }\r\n      if (isSameSet(oldModel.selectedModes, newSelectedModes)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  if (oldModel.type === \"player\" && newProps.type === oldModel.type) {\r\n    if (newProps.playerId !== undefined && newProps.playerId !== oldModel.playerId) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function ModelProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const location = useLocation();\r\n  const [model, updateModel] = useReducer(\r\n    (oldModel: Model, newProps: ModelUpdate): Model =>\r\n      isChanged(oldModel, newProps)\r\n        ? {\r\n            ...((oldModel.type === newProps.type ? oldModel : {}) as Model),\r\n            ...normalizeUpdate(newProps),\r\n            version: oldModel.version + 1,\r\n            pendingRouteUpdate: true\r\n          }\r\n        : oldModel,\r\n    null,\r\n    (): Model => ({\r\n      ...DEFAULT_MODEL,\r\n      ...Model.fromPlain((location.state || {}).model || {}),\r\n      version: new Date().getTime()\r\n    })\r\n  );\r\n  const value: [Model, DispatchModelUpdate] = useMemo(() => [model, updateModel], [model, updateModel]);\r\n  return <ModelContext.Provider value={value}>{children}</ModelContext.Provider>;\r\n}\r\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const Container = ({ title = undefined, children = undefined as ReactNode, fluid = false }) => (\r\n  <div className={`my-5 container${fluid ? \"-fluid\" : \"\"}`}>\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-12\">\r\n        {title && <h2 className=\"mb-4\">{title}</h2>}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import { useState, useEffect, ReactNode } from \"react\";\r\nimport React from \"react\";\r\nimport { ReactComponentLike } from \"prop-types\";\r\nimport { triggerRelayout } from '../../utils/index';\r\n\r\nexport function Alert({\r\n  className = \"\",\r\n  type = \"info\",\r\n  container = React.Fragment as ReactComponentLike,\r\n  stateName = \"\",\r\n  children = undefined as ReactNode\r\n}) {\r\n  const stateKey = `alertState_${stateName}`;\r\n  const [closed, setClosed] = useState(\r\n    () => stateName && !!localStorage.getItem(stateKey)\r\n  );\r\n  useEffect(() => {\r\n    if (stateName && closed) {\r\n      localStorage.setItem(stateKey, \"true\");\r\n    }\r\n  }, [closed, stateName, stateKey]);\r\n  if (closed) {\r\n    return null;\r\n  }\r\n  const Cont = container;\r\n  return (\r\n    <Cont>\r\n      <div\r\n        className={`alert alert-${type} alert-dismissible fade show ${className}`}\r\n        role=\"alert\"\r\n      >\r\n        {children}\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n          onClick={event => {\r\n            event.preventDefault();\r\n            setClosed(true);\r\n            triggerRelayout();\r\n          }}\r\n        >\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n      </div>\r\n    </Cont>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { Alert } from \"../misc/alert\";\r\nimport { TITLE_PREFIX } from \"../../utils/constants\";\r\n\r\nexport function AppHeader() {\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <h1>\r\n          <Link to=\"/\">{TITLE_PREFIX}</Link>\r\n        </h1>\r\n      </Container>\r\n      <Alert container={Container} stateName=\"topNote\">\r\n        <h4>说明</h4>\r\n        <ul>\r\n          <li>本页面由第三方维护，与雀魂官方无关。</li>\r\n          <li>记录包含雀魂国服四人半庄段位战玉之间及王座之间的牌谱。</li>\r\n          <li>\r\n            正常情况下全部对局都会被记录，但不排除因网络问题遗漏部分对局的情况。另 2019 年 10 月 10 日前因程序 Bug\r\n            每天晚间可能遗漏掉 10% ~ 20% 的对局，此 Bug 目前已经修复。\r\n          </li>\r\n          <li>页面不是实时更新，对局一般会在结束后二十分钟内出现。</li>\r\n          <li>\r\n            如有问题或建议，请戳 <a href=\"mailto:i@sapika.ch\">SAPikachu (i@sapika.ch)</a> 或{\" \"}\r\n            <a href=\"https://github.com/SAPikachu/amae-koromo/\">提交 Issue</a>。\r\n          </li>\r\n        </ul>\r\n      </Alert>\r\n      <Alert container={Container} stateName=\"changeLog20191025\">\r\n        <h4>最近更新（2019-10-25）</h4>\r\n        <ul>\r\n          <li>新增玩家信息页面</li>\r\n        </ul>\r\n      </Alert>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Loadable from \"react-loadable\";\r\nconst Helmet = Loadable({\r\n  loader: () => import(\"react-helmet\"),\r\n  loading: () => <></>\r\n});\r\n\r\nimport Scroller from \"../misc/scroller\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { AppHeader } from \"./appHeader\";\r\nimport GameRecords from \"../gameRecords\";\r\nimport { TITLE_PREFIX } from '../../utils/constants';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Helmet>\r\n        <title>{TITLE_PREFIX}</title>\r\n      </Helmet>\r\n      <Scroller>\r\n        <AppHeader />\r\n        <Container>\r\n          <GameRecords />\r\n        </Container>\r\n      </Scroller>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-virtualized/styles.css\";\nimport \"./styles.css\";\n\nimport App from \"./components/app\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n","import dayjs from \"dayjs\";\r\n\r\nimport { API_ROOT } from \"./constants\";\r\nimport { GameRecord, Metadata, PlayerMetadata } from \"./dataTypes\";\r\n\r\nexport { default as GameMode, NUMBER_OF_GAME_MODE } from \"./gameMode\";\r\nexport * from \"./dataTypes\";\r\n\r\nasync function ApiGet<T>(path: string) {\r\n  const resp = await fetch(API_ROOT + path);\r\n  if (!resp.ok) {\r\n    throw resp;\r\n  }\r\n  return (await resp.json()) as T;\r\n}\r\n\r\ninterface DataLoader<T extends Metadata> {\r\n  getMetadata(): Promise<T>;\r\n  getRecords(skip: number, limit: number, cacheTag?: string): Promise<GameRecord[]>;\r\n}\r\n\r\nclass ListingDataLoader implements DataLoader<Metadata> {\r\n  _date: dayjs.Dayjs;\r\n  constructor(date: dayjs.ConfigType) {\r\n    this._date = dayjs(date).startOf(\"day\");\r\n  }\r\n  async getMetadata(): Promise<Metadata> {\r\n    return await ApiGet<Metadata>(`count/${this._date.valueOf()}`);\r\n  }\r\n  async getRecords(skip: number, limit: number, cacheTag = \"\"): Promise<GameRecord[]> {\r\n    return await ApiGet<GameRecord[]>(`games/${this._date.valueOf()}?skip=${skip}&limit=${limit}&tag=${cacheTag}`);\r\n  }\r\n}\r\n\r\nclass PlayerDataLoader implements DataLoader<PlayerMetadata> {\r\n  _playerId: string;\r\n  constructor(playerId: string) {\r\n    this._playerId = playerId;\r\n  }\r\n  async getMetadata(): Promise<PlayerMetadata> {\r\n    return await ApiGet<PlayerMetadata>(`player_stats/${this._playerId}`);\r\n  }\r\n  async getRecords(skip: number, limit: number, cacheTag = \"\"): Promise<GameRecord[]> {\r\n    return await ApiGet<GameRecord[]>(`player_records/${this._playerId}?skip=${skip}&limit=${limit}&tag=${cacheTag}`);\r\n  }\r\n}\r\n\r\nexport type FilterPredicate = ((record: GameRecord) => boolean) | null;\r\nexport type ListingDataProvider = _DataProvider<ListingDataLoader>;\r\nexport const ListingDataProvider = Object.freeze({\r\n  create(date: dayjs.ConfigType): ListingDataProvider {\r\n    return new _DataProvider<ListingDataLoader>(new ListingDataLoader(date));\r\n  }\r\n});\r\nexport type PlayerDataProvider = _DataProvider<PlayerDataLoader>;\r\nexport const PlayerDataProvider = Object.freeze({\r\n  create(playerId: string): PlayerDataProvider {\r\n    return new _DataProvider<PlayerDataLoader>(new PlayerDataLoader(playerId));\r\n  }\r\n});\r\nexport type DataProvider = ListingDataProvider | PlayerDataProvider;\r\nclass _DataProvider<\r\n  TLoader extends DataLoader<TMetadata>,\r\n  TMetadata extends Metadata = TLoader extends DataLoader<infer T> ? T : Metadata\r\n> {\r\n  _loader: TLoader;\r\n  _metadata: TMetadata | Promise<TMetadata> | null;\r\n  _countPromise: Promise<number> | null;\r\n  _chunks: (GameRecord[] | Promise<GameRecord[]>)[];\r\n  _itemsPerChunk: number;\r\n  _filterPredicate: FilterPredicate;\r\n  _filteredIndices: number[] | null;\r\n  _filterResultCache: { [uuid: string]: boolean };\r\n\r\n  constructor(loader: TLoader, itemsPerChunk = 100) {\r\n    this._loader = loader;\r\n    this._metadata = null;\r\n    this._countPromise = null;\r\n    this._chunks = [];\r\n    this._itemsPerChunk = itemsPerChunk;\r\n    this._filterPredicate = null;\r\n    this._filteredIndices = null;\r\n    this._filterResultCache = {};\r\n  }\r\n  setFilterPredicate(predicate: FilterPredicate) {\r\n    if (this._filterPredicate === predicate) {\r\n      return;\r\n    }\r\n    this._filterPredicate = predicate;\r\n    this._filterResultCache = {};\r\n    this.updateFilteredIndices();\r\n  }\r\n  updateFilteredIndices() {\r\n    this._filteredIndices = null;\r\n    if (!this._filterPredicate) {\r\n      return;\r\n    }\r\n    const metadata = this.getMetadataSync();\r\n    if (!metadata) {\r\n      return;\r\n    }\r\n    const count = metadata.count;\r\n    let numShownItems = 0;\r\n    let numLoadedItems = 0;\r\n    const indices = [];\r\n    for (let i = 0; i < count; i++) {\r\n      const chunk = this._chunks[Math.floor(i / this._itemsPerChunk)];\r\n      if (!chunk || chunk instanceof Promise) {\r\n        indices.push(i);\r\n        continue;\r\n      }\r\n      numLoadedItems++;\r\n      const game = chunk[i % this._itemsPerChunk];\r\n      let result = this._filterResultCache[game.uuid];\r\n      if (result === undefined) {\r\n        this._filterResultCache[game.uuid] = result = this._filterPredicate(game);\r\n      }\r\n      if (result) {\r\n        indices.push(i);\r\n        numShownItems++;\r\n      }\r\n    }\r\n    this._filteredIndices = indices;\r\n    if (numShownItems < 10 && numLoadedItems >= this._itemsPerChunk) {\r\n      this._triggerFullLoad();\r\n    }\r\n  }\r\n  getMetadataSync(): TMetadata | null {\r\n    return this._metadata && !(this._metadata instanceof Promise) ? this._metadata : null;\r\n  }\r\n  getCountMaybeSync(): number | Promise<number> {\r\n    let metadata = this.getMetadataSync();\r\n    if (metadata) {\r\n      return this._filteredIndices ? this._filteredIndices.length : metadata.count;\r\n    }\r\n    return this.getCount();\r\n  }\r\n  async getCount(): Promise<number> {\r\n    let metadata = this.getMetadataSync();\r\n    if (metadata) {\r\n      return this.getCountMaybeSync();\r\n    }\r\n    if (this._countPromise) {\r\n      return this._countPromise;\r\n    }\r\n    if (!this._metadata) {\r\n      this._metadata = this._loader.getMetadata().then(metadata => {\r\n        this._metadata = metadata;\r\n        this.updateFilteredIndices();\r\n        this._countPromise = null;\r\n        return metadata;\r\n      });\r\n    }\r\n    this._countPromise = Promise.resolve(this._metadata).then(() => this.getCountMaybeSync());\r\n    return this._countPromise;\r\n  }\r\n  getUnfilteredCountSync(): number | null {\r\n    const metadata = this.getMetadataSync();\r\n    if (!metadata) {\r\n      return null;\r\n    }\r\n    return metadata.count;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    const mappedIndex = this._mapItemIndex(index);\r\n    if (mappedIndex === null) {\r\n      return false;\r\n    }\r\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\r\n    return !!this._chunks[chunkNumber] && !(this._chunks[chunkNumber] instanceof Promise);\r\n  }\r\n  getItem(index: number, skipPreload = false): GameRecord | Promise<GameRecord> {\r\n    const mappedIndex = this._mapItemIndex(index);\r\n    if (mappedIndex === null) {\r\n      return this.getCount().then(() => this.getItem(index));\r\n    }\r\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\r\n    const innerIndex = mappedIndex % this._itemsPerChunk;\r\n    const chunk = this._chunks[chunkNumber];\r\n    if (!chunk || chunk instanceof Promise) {\r\n      return this._getChunk(chunkNumber).then(chunk => chunk[innerIndex]);\r\n    }\r\n    if (!skipPreload && !this._filteredIndices) {\r\n      this.preload(index + this._itemsPerChunk);\r\n    }\r\n    return chunk[innerIndex];\r\n  }\r\n  preload(index: number) {\r\n    const count = this.getCountMaybeSync();\r\n    if (count instanceof Promise) {\r\n      return;\r\n    }\r\n    if (index >= count) {\r\n      return;\r\n    }\r\n    this.getItem(index, true);\r\n  }\r\n  _mapItemIndex(requestedIndex: number): number | null {\r\n    const count = this.getCountMaybeSync();\r\n    if (count instanceof Promise) {\r\n      return null;\r\n    }\r\n    if (requestedIndex < 0) {\r\n      return null;\r\n    }\r\n    // Descending order\r\n    const reversed = count - requestedIndex - 1;\r\n    if (reversed < 0) {\r\n      return null;\r\n    }\r\n    return this._filteredIndices ? this._filteredIndices[reversed] : reversed;\r\n  }\r\n  async _getChunk(chunkIndex: number): Promise<GameRecord[]> {\r\n    if (!this._chunks[chunkIndex]) {\r\n      this._chunks[chunkIndex] = this._loadChunk(chunkIndex);\r\n    }\r\n    return this._chunks[chunkIndex];\r\n  }\r\n  _triggerFullLoad() {\r\n    const count = this.getCountMaybeSync();\r\n    if (typeof count !== \"number\") {\r\n      return;\r\n    }\r\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\r\n    for (let i = 0; i < numChunks; i++) {\r\n      if (this._chunks[i]) {\r\n        continue;\r\n      }\r\n      this._getChunk(i);\r\n    }\r\n  }\r\n  async _loadChunk(chunkIndex: number): Promise<GameRecord[]> {\r\n    const count = await this.getCount();\r\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\r\n    if (!numChunks) {\r\n      return [];\r\n    }\r\n    if (chunkIndex >= numChunks) {\r\n      console.warn(`Loading out-of-index chunk: ${chunkIndex}, number of items: ${count}`);\r\n      return [];\r\n    }\r\n    const chunk = await this._loader.getRecords(\r\n      this._itemsPerChunk * chunkIndex,\r\n      this._itemsPerChunk,\r\n      chunkIndex === numChunks - 1 ? count.toString() : \"\"\r\n    );\r\n    if (chunk.length < this._itemsPerChunk && chunkIndex < numChunks - 1) {\r\n      console.warn(\"Unexpected number of items in chunk:\", chunk.length);\r\n    }\r\n    this._chunks[chunkIndex] = chunk;\r\n    this.updateFilteredIndices();\r\n    return chunk;\r\n  }\r\n}\r\n","enum GameMode {\r\n  王座 = 16,\r\n  玉 = 12\r\n}\r\nexport default GameMode;\r\nexport const NUMBER_OF_GAME_MODE = Object.keys(GameMode).filter(\r\n  x => typeof GameMode[x as keyof typeof GameMode] === \"number\"\r\n).length;\r\n","export const DATA_ROOT = \"https://d2ek5tscv4zquv.cloudfront.net/\";\r\nexport const API_ROOT = `${DATA_ROOT}api/`;\r\nexport const TITLE_PREFIX = \"雀魂牌谱屋\";","export function triggerRelayout() {\r\n  requestAnimationFrame(() => window.dispatchEvent(new UIEvent(\"resize\")));\r\n  setTimeout(function() {\r\n    window.dispatchEvent(new UIEvent(\"resize\"));\r\n  }, 200);\r\n}\r\nexport function scrollToTop() {\r\n  window.scrollTo(0, 0);\r\n  requestAnimationFrame(() => window.scrollTo(0, 0));\r\n}\r\nexport const formatPercent = (x: any) => (x > 0 ? `${(x * 100).toFixed(2)}%` : \"\");\r\n","import React from \"react\";\nimport dayjs from \"dayjs\";\n\nimport { useParams, useLocation, Redirect } from \"react-router\";\nimport { useModel, Model, ModelPlain } from \"./model\";\nimport { generatePath } from \"./routes\";\nimport { useEffect } from \"react\";\nimport { scrollToTop, triggerRelayout } from \"../../utils/index\";\n\ntype ListingRouteParams = {\n  date?: string;\n  modes?: string;\n  search?: string;\n};\n\ntype HistoryState = {\n  model: ModelPlain;\n  pathname: string;\n};\n\nconst ModelBuilders = {\n  player: function(params: { id: string }): Model | string {\n    return {\n      type: \"player\",\n      playerId: params.id,\n      version: 0\n    };\n  },\n  listing: function(params: ListingRouteParams): Model | string {\n    const date = params.date ? dayjs(params.date, \"YYYY-MM-DD\") : null;\n    if (date && !date.isValid()) {\n      return \"/\";\n    }\n    const modes = params.modes\n      ? new Set(\n          params.modes\n            .split(\".\")\n            .map(x => x.trim())\n            .filter(x => !!x)\n        )\n      : null;\n    return {\n      date: date ? date.startOf(\"day\").valueOf() : null,\n      selectedModes: modes,\n      searchText: params.search || \"\",\n      version: 0\n    };\n  }\n};\n\nexport function RouteSync({ view }: { view: keyof typeof ModelBuilders }): React.FunctionComponentElement<any> {\n  const params = useParams();\n  const [model, updateModel] = useModel();\n  const location = useLocation<HistoryState>();\n  useEffect(triggerRelayout, [model.type]);\n  const state = location.state;\n  // console.log(params, model, location, state);\n  if (state && state.model.version === model.version) {\n    delete (model as Model).pendingRouteUpdate;\n    if (location.pathname !== state.pathname) {\n      return <Redirect to={{ pathname: state.pathname, state }} />;\n    }\n    return <></>;\n  }\n  if (!state) {\n    // Navigation\n    const modelResult = ModelBuilders[view](params as any);\n    if (typeof modelResult === \"string\") {\n      return <Redirect to={modelResult} />;\n    }\n    const newModel: Model = {\n      ...modelResult,\n      version: model.version\n    };\n    updateModel(newModel);\n    scrollToTop();\n    return (\n      <Redirect\n        to={{ pathname: location.pathname, state: { pathname: location.pathname, model: Model.toPlain(newModel) } }}\n      />\n    );\n  }\n  if (model.pendingRouteUpdate) {\n    // Model updated\n    const newPath = generatePath(model);\n    delete (model as Model).pendingRouteUpdate; // Do not trigger update\n    return <Redirect to={{ pathname: newPath, state: { pathname: newPath, model: Model.toPlain(model) } }} />;\n  } else {\n    const restoredModel = Model.fromPlain(state.model);\n    updateModel(restoredModel);\n    return <></>;\n  }\n}\n","import React from \"react\";\r\n\r\nexport interface CheckboxItem {\r\n  key: string;\r\n  label: string;\r\n}\r\n\r\nexport function CheckboxGroup({\r\n  items = [] as CheckboxItem[],\r\n  selectedItemKeys = null as Set<string> | null,\r\n  groupKey = \"default\",\r\n  onChange = (selectedItemKeys: Set<string>) => {}\r\n}) {\r\n  const setSelected = function(key: string, isSelected: boolean) {\r\n    if (isSelected && (!selectedItemKeys || selectedItemKeys.has(key))) {\r\n      return;\r\n    }\r\n    if (!isSelected && selectedItemKeys && !selectedItemKeys.has(key)) {\r\n      return;\r\n    }\r\n    const newSet = new Set(selectedItemKeys || items.map(x => x.key));\r\n    if (isSelected) {\r\n      newSet.add(key);\r\n    } else {\r\n      newSet.delete(key);\r\n    }\r\n    onChange(newSet);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {items.map(item => (\r\n        <div className=\"form-check form-check-inline\" key={item.key}>\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            id={`CG_${groupKey}_${item.key}`}\r\n            value={item.key}\r\n            checked={!selectedItemKeys || selectedItemKeys.has(item.key)}\r\n            onChange={event => setSelected(item.key, event.currentTarget.checked)}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor={`CG_${groupKey}_${item.key}`}>\r\n            {item.label}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport dayjs from \"dayjs\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport function DatePicker({\r\n  date = dayjs() as dayjs.ConfigType,\r\n  onChange = (_: dayjs.ConfigType) => {},\r\n  className = \"\",\r\n  min = 0 as dayjs.ConfigType,\r\n  max = dayjs() as dayjs.ConfigType\r\n}) {\r\n  const handleChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => onChange(dayjs(e.currentTarget.value, \"YYYY-MM-DD\")),\r\n    [onChange]\r\n  );\r\n  return (\r\n    <input\r\n      className={className}\r\n      type=\"date\"\r\n      value={dayjs(date).format(\"YYYY-MM-DD\")}\r\n      min={min ? dayjs(min).format(\"YYYY-MM-DD\") : undefined}\r\n      max={max ? dayjs(max).format(\"YYYY-MM-DD\") : undefined}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const FormRow = ({ title = \"\", children = undefined as ReactNode }) => (\r\n  <div className=\"form-group row\">\r\n    <label className=\"col-sm-2 col-form-label\">{title}</label>\r\n    <div className=\"col-sm-10\">{children}</div>\r\n  </div>\r\n);\r\n","import { useCallback } from \"react\";\r\nimport React from \"react\";\r\n\r\nimport { FormRow, DatePicker, CheckboxGroup } from \"../form\";\r\nimport { GameMode } from \"../../utils/dataSource\";\r\nimport { useModel } from \"./model\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport const MODE_CHECKBOXES = Object.keys(GameMode)\r\n  .filter(x => typeof GameMode[x as keyof typeof GameMode] !== \"string\")\r\n  .map(x => ({\r\n    key: String(GameMode[x as keyof typeof GameMode]),\r\n    label: x\r\n  }));\r\n\r\nconst DEFAULT_DATE = dayjs().startOf(\"day\");\r\n\r\nexport function FilterPanel() {\r\n  const [model, updateModel] = useModel();\r\n  const updateSearchTextFromEvent = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => updateModel({ searchText: e.currentTarget.value }),\r\n    [updateModel]\r\n  );\r\n  const setSelectedItems = useCallback(\r\n    (selectedItemKeys: Set<string>) => updateModel({ selectedModes: selectedItemKeys }),\r\n    [updateModel]\r\n  );\r\n  const setDate = useCallback((date: dayjs.ConfigType) => updateModel({ date }), [updateModel]);\r\n  if (model.type !== undefined) {\r\n    return null;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <FormRow title=\"日期\">\r\n        <DatePicker min=\"2019-08-23\" date={model.date || DEFAULT_DATE} onChange={setDate} className=\"form-control\" />\r\n      </FormRow>\r\n      <FormRow title=\"查找玩家\">\r\n        <input type=\"text\" className=\"form-control\" value={model.searchText} onChange={updateSearchTextFromEvent} />\r\n      </FormRow>\r\n      <FormRow>\r\n        <CheckboxGroup items={MODE_CHECKBOXES} selectedItemKeys={model.selectedModes} onChange={setSelectedItems} />\r\n      </FormRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\n\nimport { Switch, Route, Redirect, generatePath as genPath } from \"react-router-dom\";\n\nimport { Model, ModelProvider } from \"./model\";\nimport dayjs from \"dayjs\";\nimport { RouteSync } from \"./routeSync\";\nimport { DataAdapterProvider } from \"./dataAdapterProvider\";\nimport { FilterPanel } from \"./filterPanel\";\nimport Loadable from \"react-loadable\";\nconst PlayerDetails = Loadable({\n  loader: () => import(\"./playerDetails\"),\n  loading: () => <></>\n});\nconst GameRecordTable = Loadable({\n  loader: () => import(\"./table\"),\n  loading: () => <></>\n});\n\nconst PLAYER_PATH = \"/player/:id\";\nconst PATH = \"/:date(\\\\d{4}-\\\\d{2}-\\\\d{2})/:modes([0-9.]+)?/:search?\";\n\nexport function generatePath(model: Model): string {\n  if (model.type === \"player\") {\n    return genPath(PLAYER_PATH, { id: model.playerId });\n  }\n  if ((!model.selectedModes || !model.selectedModes.size) && !model.searchText && !model.date) {\n    return \"/\";\n  }\n  return genPath(PATH, {\n    date: dayjs(model.date || new Date()).format(\"YYYY-MM-DD\"),\n    modes: model.selectedModes && model.selectedModes.size ? Array.from(model.selectedModes).join(\".\") : undefined,\n    search: model.searchText || undefined\n  });\n}\n\nfunction Routes() {\n  return (\n    <ModelProvider>\n      <DataAdapterProvider>\n        <Switch>\n          <Route exact path={PLAYER_PATH}>\n            <RouteSync view=\"player\" />\n            <PlayerDetails />\n            <GameRecordTable showFullTime showStartEnd={false} />\n          </Route>\n          <Route exact path={[\"/\", PATH]}>\n            <RouteSync view=\"listing\" />\n            <FilterPanel />\n            <GameRecordTable />\n          </Route>\n          <Route>\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </DataAdapterProvider>\n    </ModelProvider>\n  );\n}\nexport default Routes;\n","import { useState, useEffect, useMemo, useCallback, useContext } from \"react\";\r\nimport React, { ReactChild } from \"react\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport {\r\n  DataProvider,\r\n  GameRecord,\r\n  NUMBER_OF_GAME_MODE,\r\n  FilterPredicate,\r\n  ListingDataProvider,\r\n  PlayerDataProvider\r\n} from \"../../utils/dataSource\";\r\nimport { useModel, Model } from \"./model\";\r\nimport { Metadata } from \"../../utils/dataSource\";\r\n\r\ninterface ItemLoadingPlaceholder {\r\n  loading: boolean;\r\n}\r\n\r\nconst loadingPlaceholder = { loading: true };\r\n\r\nexport interface IDataAdapter {\r\n  getCount(): number;\r\n  getUnfilteredCount(): number;\r\n  getMetadata<T extends Metadata>(): T | null;\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder;\r\n  isItemLoaded(index: number): boolean;\r\n}\r\n\r\nclass _DummyDataAdapter implements IDataAdapter {\r\n  getCount(): number {\r\n    return 0;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return 0;\r\n  }\r\n  getMetadata<T extends Metadata>(): T | null {\r\n    return null;\r\n  }\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder {\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const DUMMY_DATA_ADAPTER = new _DummyDataAdapter() as IDataAdapter;\r\n\r\nconst noop = () => {};\r\n\r\nclass DataAdapter implements IDataAdapter {\r\n  _provider: DataProvider;\r\n  _onDataUpdate: () => void;\r\n  _triggeredRequest: boolean;\r\n\r\n  constructor(provider: DataProvider, onDataUpdate = noop) {\r\n    this._provider = provider;\r\n    this._onDataUpdate = onDataUpdate;\r\n    this._triggeredRequest = false;\r\n  }\r\n  _installHook(promise: Promise<any>) {\r\n    if (this._triggeredRequest) {\r\n      return;\r\n    }\r\n    this._triggeredRequest = true;\r\n    promise.then(this._callHook.bind(this));\r\n  }\r\n  _callHook() {\r\n    this._onDataUpdate();\r\n  }\r\n  getCount(): number {\r\n    const maybeCount = this._provider.getCountMaybeSync();\r\n    if (maybeCount instanceof Promise) {\r\n      this._installHook(maybeCount);\r\n      return 0;\r\n    }\r\n    return maybeCount;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return this._provider.getUnfilteredCountSync() || 0;\r\n  }\r\n  getMetadata<T extends Metadata>(): T | null {\r\n    return this._provider.getMetadataSync() as T | null;\r\n  }\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder {\r\n    if (this._provider.isItemLoaded(index)) {\r\n      return this._provider.getItem(index) as GameRecord;\r\n    }\r\n    if (!this._triggeredRequest) {\r\n      this._installHook(this._provider.getItem(index) as Promise<GameRecord>);\r\n    }\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    if (index < 0) {\r\n      return false;\r\n    }\r\n    return this._provider.isItemLoaded(index);\r\n  }\r\n  setUpdateHook(hook: () => void) {\r\n    this._onDataUpdate = hook;\r\n  }\r\n  cancelUpdateHook() {\r\n    this._onDataUpdate = noop;\r\n  }\r\n}\r\n\r\nconst DataAdapterContext = React.createContext(DUMMY_DATA_ADAPTER);\r\n\r\nexport const useDataAdapter = () => useContext(DataAdapterContext);\r\nexport const DataAdapterConsumer = DataAdapterContext.Consumer;\r\n\r\nfunction getProviderKey(model: Model): string {\r\n  if (model.type === undefined) {\r\n    return dayjs(model.date || dayjs())\r\n      .startOf(\"day\")\r\n      .valueOf()\r\n      .toString();\r\n  } else if (model.type === \"player\") {\r\n    return `player-${model.playerId}`;\r\n  }\r\n  throw new Error(\"Unknown model type\");\r\n}\r\n\r\nfunction createProvider(model: Model): DataProvider {\r\n  if (model.type === undefined) {\r\n    return ListingDataProvider.create(model.date || dayjs().startOf(\"day\"));\r\n  }\r\n  if (model.type === \"player\") {\r\n    return PlayerDataProvider.create(model.playerId);\r\n  }\r\n  throw new Error(\"Not implemented\");\r\n}\r\n\r\nfunction usePredicate(model: Model): FilterPredicate {\r\n  if (model.type !== undefined) {\r\n    return useMemo(() => null, [null, \"\"]);\r\n  }\r\n  const searchText = (model.searchText || \"\").trim() || \"\";\r\n  const needPredicate = searchText || (model.selectedModes && model.selectedModes.size < NUMBER_OF_GAME_MODE);\r\n  return useMemo(\r\n    () =>\r\n      needPredicate\r\n        ? game => {\r\n            if (model.selectedModes && !model.selectedModes.has(game.modeId.toString())) {\r\n              return false;\r\n            }\r\n            if (!game.players.some(player => player.nickname.toLowerCase().indexOf(searchText) > -1)) {\r\n              return false;\r\n            }\r\n            return true;\r\n          }\r\n        : null,\r\n    [(model.type === undefined && model.selectedModes) || null, searchText]\r\n  );\r\n}\r\n\r\nexport function DataAdapterProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const [model] = useModel();\r\n  const [dataProviders] = useState(() => ({} as { [key: string]: DataProvider }));\r\n  const searchPredicate = usePredicate(model);\r\n  const dataProvider = useMemo(() => {\r\n    const key = getProviderKey(model);\r\n    if (!dataProviders[key]) {\r\n      dataProviders[key] = createProvider(model);\r\n    }\r\n    return dataProviders[key];\r\n  }, [model, dataProviders]);\r\n  const [dataAdapter, setDataAdapter] = useState(() => DUMMY_DATA_ADAPTER);\r\n  const refreshDataAdapter = useCallback(() => {\r\n    dataProvider.setFilterPredicate(searchPredicate);\r\n    const adapter = new DataAdapter(dataProvider);\r\n    setDataAdapter(adapter);\r\n  }, [dataProvider, searchPredicate]);\r\n  useEffect(refreshDataAdapter, [refreshDataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      return () => adapter.cancelUpdateHook();\r\n    }\r\n  }, [dataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      adapter.setUpdateHook(refreshDataAdapter);\r\n    }\r\n  }, [dataAdapter, refreshDataAdapter]);\r\n  useEffect(() => {\r\n    dataProvider.getCountMaybeSync(); // Preload metadata\r\n  }, [dataProvider]);\r\n  return <DataAdapterContext.Provider value={dataAdapter}>{children}</DataAdapterContext.Provider>;\r\n}\r\n","import dayjs from \"dayjs\";\n\nimport GameMode from \"./gameMode\";\n\nexport const PLAYER_RANKS = \"初士杰豪圣魂\";\nexport const LEVEL_MAX_POINTS = [20, 80, 200, 600, 800, 1000, 1200, 1400, 2000, 2800, 3200, 3600, 4000, 6000, 9000];\nexport const RANK_LABELS = [\"一位\", \"二位\", \"三位\", \"四位\"];\nexport const RANK_COLORS = [\"#28a745\", \"#17a2b8\", \"#6c757d\", \"#dc3545\"];\n\nexport interface PlayerRecord {\n  accountId: number;\n  nickname: string;\n  level: number;\n  score: number;\n}\nexport interface GameRecord {\n  modeId: GameMode;\n  uuid: string;\n  startTime: number;\n  endTime: number;\n  players: PlayerRecord[];\n}\nexport const GameRecord = Object.freeze({\n  getRankIndexByPlayer: function(rec: GameRecord, player: number | string | PlayerRecord): number {\n    const playerId = (typeof player === \"object\" ? player.accountId : player).toString();\n    const sortedPlayers = rec.players.map((player, index) => ({ player, index }));\n    sortedPlayers.sort((a, b) => 5 - b.index + b.player.score - (5 - a.index + a.player.score));\n    for (let i = 0; i < sortedPlayers.length; i++) {\n      if (sortedPlayers[i].player.accountId.toString() === playerId) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  getPlayerRankLabel: function(rec: GameRecord, player: number | string | PlayerRecord): string {\n    return RANK_LABELS[GameRecord.getRankIndexByPlayer(rec, player)] || \"\";\n  },\n  getPlayerRankColor: function(rec: GameRecord, player: number | string | PlayerRecord): string {\n    return RANK_COLORS[GameRecord.getRankIndexByPlayer(rec, player)];\n  },\n  encodeAccountId: (t: number) => 1358437 + ((7 * t + 1117113) ^ 86216345),\n  formatFullStartTime: (rec: GameRecord) => dayjs(rec.startTime * 1000).format(\"YYYY/M/D HH:mm\"),\n  getRecordLink: function(rec: GameRecord, player?: PlayerRecord | number | string) {\n    const playerId = typeof player === \"object\" ? player.accountId : player;\n    const trailer = playerId\n      ? `_a${GameRecord.encodeAccountId(typeof playerId === \"number\" ? playerId : parseInt(playerId))}`\n      : \"\";\n    return `https://www.majsoul.com/1/?paipu=${rec.uuid}${trailer}`;\n  }\n});\n\nclass Level {\n  _majorRank: number;\n  _minorRank: number;\n  constructor(levelId: number) {\n    const realId = levelId % 10000;\n    this._majorRank = Math.floor(realId / 100);\n    this._minorRank = realId % 100;\n  }\n  getTag(): string {\n    const label = PLAYER_RANKS[this._majorRank - 1];\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return label;\n    }\n    return label + this._minorRank;\n  }\n  getMaxPoint(): number {\n    return LEVEL_MAX_POINTS[(this._majorRank - 1) * 3 + this._minorRank - 1];\n  }\n  getStartingPoint(): number {\n    if (this._majorRank === 1) {\n      return 0;\n    }\n    return this.getMaxPoint() / 2;\n  }\n  getNextLevel(): Level {\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return this;\n    }\n    let majorRank = this._majorRank;\n    let minorRank = this._minorRank + 1;\n    if (minorRank > 3) {\n      majorRank++;\n      minorRank = 1;\n    }\n    return new Level(majorRank * 100 + minorRank);\n  }\n  getPreviousLevel(): Level {\n    if (this._majorRank === 1 && this._minorRank === 1) {\n      return this;\n    }\n    let majorRank = this._majorRank;\n    let minorRank = this._minorRank - 1;\n    if (minorRank < 1) {\n      majorRank--;\n      minorRank = 3;\n    }\n    return new Level(majorRank * 100 + minorRank);\n  }\n  formatWithAdjustedScore(score: number) {\n    let maxPoints = this.getMaxPoint();\n    let level: Level = this;\n    if (maxPoints && score >= maxPoints) {\n      level = this.getNextLevel();\n      maxPoints = level.getMaxPoint();\n      score = level.getStartingPoint();\n    } else if (score < 0) {\n      if (!maxPoints || level._majorRank === 1 || (level._majorRank === 2 && level._minorRank === 1)) {\n        score = 0;\n      } else {\n        level = this.getPreviousLevel();\n        maxPoints = level.getMaxPoint();\n        score = level.getStartingPoint();\n      }\n    }\n    return `${level.getTag()} - ${score}${maxPoints ? \"/\" + maxPoints : \"\"}`;\n  }\n}\nexport function getLevelTag(levelId: number) {\n  return new Level(levelId).getTag();\n}\nexport type LevelWithDelta = {\n  id: number;\n  score: number;\n  delta: number;\n};\nexport const LevelWithDelta = Object.freeze({\n  format(obj: LevelWithDelta): string {\n    return new Level(obj.id).formatWithAdjustedScore(obj.score + obj.delta);\n  }\n});\n\nexport interface Metadata {\n  count: number;\n}\nexport interface PlayerMetadata extends Metadata {\n  id: number;\n  nickname: string;\n  level: LevelWithDelta;\n  rank_rates: [number, number, number, number];\n  avg_rank: number;\n  negative_rate: number;\n}\n","import React, { ReactChild, useContext } from \"react\";\r\n\r\nimport { WindowScrollerChildProps } from \"react-virtualized\";\r\nimport { WindowScroller } from \"react-virtualized/dist/es/WindowScroller\";\r\n\r\nconst ScrollerContext = React.createContext<WindowScrollerChildProps>({} as any);\r\n\r\nexport const useScrollerProps = () => useContext(ScrollerContext);\r\n\r\nfunction Scroller({ children }: { children: ReactChild | ReactChild[] }) {\r\n  return (\r\n    <WindowScroller>\r\n      {scrollerProps => <ScrollerContext.Provider value={scrollerProps}>{children}</ScrollerContext.Provider>}\r\n    </WindowScroller>\r\n  );\r\n}\r\nexport default Scroller;\r\n"],"sourceRoot":""}