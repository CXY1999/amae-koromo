{"version":3,"sources":["components/modeModel/model.tsx","components/modeModel/modelModeSelector.tsx","components/modeModel/index.tsx","components/routing/index.tsx","components/statistics/rankBySeats.tsx","components/statistics/dataByRank.tsx","components/statistics/fanStats.tsx","components/statistics/index.tsx"],"names":["DEFAULT_MODEL","selectedMode","ModelContext","React","createContext","useModel","useContext","ModelModeProvider","children","useReducer","oldModel","newProps","model","updateModel","value","useMemo","Provider","ModelModeSelector","setModeId","useCallback","modeId","className","mode","onChange","RouteDef","Error","ViewRoutes","Context","NavButtons","routes","match","useRouteMatch","path","map","route","key","to","activeClassName","title","ViewSwitch","defaultPath","SimpleRoutedSubViews","props","x","slice","SEAT_LABELS","CELLS","color","index","fill","fillOpacity","formatLabel","rate","label","RADIAN","Math","PI","renderCustomizedLabel","toString","viewBox","cx","cy","outerRadius","startAngle","radius","angle","cos","y","sin","polarToCartesian","endAngle","sign","min","abs","getDeltaAngle","stroke","strokeWidth","textAnchor","dominantBaseline","split","Chart","rates","numGames","aspect","items","count","round","pieLabel","toFixed","width","height","isAnimationActive","data","nameKey","dataKey","position","content","HEADERS","SORTERS","undefined","a","b","ROUTES","useAsyncFactory","getRankRateBySeat","selectedData","getGlobalStatistics","modeData","Object","entries","sort","localeCompare","levelId","levelData","Level","parseInt","getTag","basic","rank_rates","i","formatPercent","negative_rate","formatFixed3","avg_rank","extended","和牌率","放铳率","副露率","立直率","自摸率","流局率","流听率","num_players","floor","reduce","getFanStats","useState","sorterIndex","setSorterIndex","sortedData","ret","keys","GameMode","onClick","length","Routes"],"mappings":"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","file":"static/js/6.8077c0b9.chunk.js","sourcesContent":["import React, { useReducer, useContext, ReactChild } from \"react\";\nimport { useMemo } from \"react\";\n\nexport interface Model {\n  selectedMode: string;\n}\n\ntype ModelUpdate = Partial<Model>;\ntype DispatchModelUpdate = (props: ModelUpdate) => void;\n\nconst DEFAULT_MODEL: Model = { selectedMode: \"\" };\nconst ModelContext = React.createContext<[Readonly<Model>, DispatchModelUpdate]>([{ ...DEFAULT_MODEL }, () => {}]);\nexport const useModel = () => useContext(ModelContext);\n\nexport function ModelModeProvider({ children }: { children: ReactChild | ReactChild[] }) {\n  const [model, updateModel] = useReducer(\n    (oldModel: Model, newProps: ModelUpdate): Model => ({\n      ...oldModel,\n      ...newProps\n    }),\n    null,\n    (): Model => ({\n      ...DEFAULT_MODEL\n    })\n  );\n  const value: [Model, DispatchModelUpdate] = useMemo(() => [model, updateModel], [model, updateModel]);\n  return <ModelContext.Provider value={value}>{children}</ModelContext.Provider>;\n}\n","import React from \"react\";\nimport { useCallback } from \"react\";\nimport { ModeSelector } from \"../gameRecords/modeSelector\";\nimport { useModel } from \"./model\";\n\nexport default function ModelModeSelector() {\n  const [model, updateModel] = useModel();\n  const setModeId = useCallback(modeId => updateModel({ selectedMode: modeId }), [updateModel]);\n  return (\n    <div className=\"row mb-3\">\n      <div className=\"col\">\n        <ModeSelector mode={model.selectedMode} onChange={setModeId} />\n      </div>\n    </div>\n  );\n}\n","export { ModelModeProvider, useModel } from \"./model\";\nexport { default as ModelModeSelector } from \"./modelModeSelector\";\n","import React from \"react\";\nimport { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useRouteMatch, Switch, Route, Redirect } from \"react-router\";\nimport { Helmet } from \"react-helmet\";\n\ntype RouteDefProps = { path: string; title: string; children: React.ReactChild | React.ReactChildren };\nexport const RouteDef: React.FunctionComponent<RouteDefProps> = () => {\n  throw new Error(\"Not intended for rendering\");\n};\n\ntype RoutesProps = { children: React.FunctionComponentElement<RouteDefProps>[] };\nexport const ViewRoutes: React.FunctionComponent<RoutesProps> = () => {\n  throw new Error(\"Not intended for rendering\");\n};\n\nconst Context = React.createContext<RouteDefProps[]>([]);\n\nexport function NavButtons() {\n  const routes = useContext(Context);\n  const match = useRouteMatch() || { path: \"\" };\n  return (\n    <nav className=\"nav nav-pills mb-3\">\n      {routes.map(route => (\n        <NavLink key={route.path} to={`${match.path}/${route.path}`} className=\"nav-link\" activeClassName=\"active\">\n          {route.title}\n        </NavLink>\n      ))}\n    </nav>\n  );\n}\n\nexport function ViewSwitch({\n  defaultPath,\n  children\n}: {\n  defaultPath?: string;\n  children?: React.ReactChild | React.ReactChildren;\n}) {\n  const routes = useContext(Context);\n  const match = useRouteMatch() || { path: \"\" };\n  return (\n    <Switch>\n      {routes.map(route => (\n        <Route key={route.path} path={`${match.path}/${route.path}`}>\n          <Helmet>\n            <title>{route.title}</title>\n          </Helmet>\n          {route.children}\n        </Route>\n      ))}\n      <Route>\n        <Redirect to={`${match.path}/${defaultPath || routes[0].path}`} />\n      </Route>\n      {children}\n    </Switch>\n  );\n}\n\nexport function SimpleRoutedSubViews({\n  children\n}: {\n  children: [React.FunctionComponentElement<RoutesProps>, ...(React.ReactChild | React.ReactChildren)[]];\n}) {\n  return <Context.Provider value={children[0].props.children.map(x => x.props)}>{children.slice(1)}</Context.Provider>;\n}\n","import React from \"react\";\nimport { ResponsiveContainer, PieChart, Pie, Cell, LabelList, LabelProps, PolarViewBox } from \"recharts\";\nimport { useAsyncFactory } from \"../../utils/index\";\nimport { getRankRateBySeat } from \"../../data/source/misc\";\nimport Loading from \"../misc/loading\";\nimport { useMemo } from \"react\";\nimport { useModel, ModelModeSelector } from \"../modeModel\";\n\nconst SEAT_LABELS = \"东南西北\";\nconst SEAT_COLORS = [\"#003f5c\", \"#7a5195\", \"#ef5675\", \"#ffa600\"];\n\nconst generateCells = (activeIndex: number) =>\n  SEAT_COLORS.map((color, index) => (\n    <Cell fill={color} fillOpacity={activeIndex === index ? 1 : 1} key={`cell-${index}`} />\n  ));\n\nconst CELLS = generateCells(-1);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst formatLabel = (x: any) => (x.rate > 0 ? x.label : null);\n\nconst getDeltaAngle = (startAngle: number, endAngle: number) => {\n  const sign = Math.sign(endAngle - startAngle);\n  const deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);\n\n  return sign * deltaAngle;\n};\n\nexport const RADIAN = Math.PI / 180;\n\nexport const polarToCartesian = (cx: number, cy: number, radius: number, angle: number) => ({\n  x: cx + Math.cos(-RADIAN * angle) * radius,\n  y: cy + Math.sin(-RADIAN * angle) * radius\n});\n\nconst renderCustomizedLabel = (props: LabelProps) => {\n  let { value } = props;\n  if (!value) {\n    return null;\n  }\n  value = value.toString();\n  const { cx, cy, outerRadius, startAngle, endAngle } = props.viewBox as Required<PolarViewBox>;\n  const labelAngle = startAngle + getDeltaAngle(startAngle, endAngle) / 2;\n  const { x, y } = polarToCartesian(cx, cy, outerRadius / 2, labelAngle);\n  return (\n    <g>\n      <text x={x} y={y - 12} stroke=\"#fff\" strokeWidth=\"0.5\" fill=\"#fff\" textAnchor=\"middle\" dominantBaseline=\"central\">\n        {value.split(\"\\n\")[0]}\n      </text>\n      <text x={x} y={y + 12} stroke=\"#fff\" strokeWidth=\"0.5\" fill=\"#fff\" textAnchor=\"middle\" dominantBaseline=\"central\">\n        {value.split(\"\\n\")[1]}\n      </text>\n    </g>\n  );\n};\n\nfunction Chart({\n  rates,\n  numGames,\n  aspect = 1\n}: {\n  rates: [number, number, number, number];\n  numGames: number;\n  aspect?: number;\n}) {\n  const items = useMemo(\n    () =>\n      rates.map((x, index) => ({\n        rate: x,\n        count: Math.round(x * numGames),\n        label: SEAT_LABELS[index],\n        pieLabel: `${(x * 100).toFixed(2)}%\\n[${Math.round(x * numGames)}]`\n      })),\n    [rates, numGames]\n  );\n  return (\n    <ResponsiveContainer width=\"100%\" aspect={aspect} height=\"auto\">\n      <PieChart>\n        <Pie isAnimationActive={false} data={items} nameKey=\"label\" dataKey=\"rate\" label={formatLabel}>\n          {CELLS}\n          <LabelList dataKey=\"pieLabel\" position=\"inside\" fill=\"#fff\" content={renderCustomizedLabel} />\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default function RankBySeats() {\n  const data = useAsyncFactory(getRankRateBySeat, [], \"getRankRateBySeat\");\n  const [model] = useModel();\n  if (!data) {\n    return <Loading />;\n  }\n  const selectedData = data[model.selectedMode || \"0\"];\n  return (\n    <>\n      <ModelModeSelector />\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <h3 className=\"text-center\">坐席吃一率</h3>\n          <Chart rates={selectedData[1]} numGames={selectedData.numGames} />\n        </div>\n        <div className=\"col-lg-6\">\n          <h3 className=\"text-center\">坐席吃四率</h3>\n          <Chart rates={selectedData[4]} numGames={selectedData.numGames} />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col text-right\">统计半庄数：{selectedData.numGames}</div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { useAsyncFactory, formatPercent, formatFixed3 } from \"../../utils/index\";\nimport { getGlobalStatistics } from \"../../data/source/misc\";\nimport Loading from \"../misc/loading\";\nimport { useModel } from \"../modeModel/model\";\nimport { Level } from \"../../data/types/level\";\nimport { ModelModeSelector } from \"../modeModel\";\n\nconst HEADERS = [\n  \"等级\",\n  \"一位率\",\n  \"二位率\",\n  \"三位率\",\n  \"四位率\",\n  \"被飞率\",\n  \"平均顺位\",\n  \"和牌率\",\n  \"放铳率\",\n  \"副露率\",\n  \"立直率\",\n  \"自摸率\",\n  \"流局率\",\n  \"流听率\",\n  \"对战数\",\n  \"在位记录\"\n];\n\nexport default function DataByRank() {\n  const data = useAsyncFactory(getGlobalStatistics, [], \"getGlobalStatistics\");\n  const [model] = useModel();\n  if (!data) {\n    return <Loading />;\n  }\n  const modeData = Object.entries(data[model.selectedMode || \"0\"]);\n  modeData.sort((a, b) => a[0].localeCompare(b[0]));\n\n  return (\n    <>\n      <ModelModeSelector />\n      <table className=\"table table-responsive-xl table-striped table-sm table-hover text-center\">\n        <thead className=\"vertical-table-header\">\n          <tr>\n            {HEADERS.map(x => (\n              <th key={x}>\n                <div>{x}</div>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {modeData.map(([levelId, levelData]) => (\n            <tr key={levelId}>\n              <td className=\"text-nowrap\">{new Level(parseInt(levelId)).getTag()}</td>\n              {levelData.basic.rank_rates.map((x, i) => (\n                <td key={i}>{formatPercent(x)}</td>\n              ))}\n              <td>{formatPercent(levelData.basic.negative_rate)}</td>\n              <td>{formatFixed3(levelData.basic.avg_rank)}</td>\n              <td>{formatPercent(levelData.extended.和牌率)}</td>\n              <td>{formatPercent(levelData.extended.放铳率)}</td>\n              <td>{formatPercent(levelData.extended.副露率)}</td>\n              <td>{formatPercent(levelData.extended.立直率)}</td>\n              <td>{formatPercent(levelData.extended.自摸率)}</td>\n              <td>{formatPercent(levelData.extended.流局率)}</td>\n              <td>{formatPercent(levelData.extended.流听率)}</td>\n              <td>{levelData.basic.count}</td>\n              <td>{levelData.num_players}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"row\">\n        <div className=\"col text-right\">\n          统计半庄数：\n          {Math.floor(modeData.map(([, levelData]) => levelData.basic.count).reduce((a, b) => a + b, 0) / 4)}\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { useAsyncFactory, formatPercent } from \"../../utils/index\";\nimport { getFanStats } from \"../../data/source/misc\";\nimport Loading from \"../misc/loading\";\nimport { GameMode, FanStatEntry, FanStats } from \"../../data/types\";\nimport { useState, useMemo } from \"react\";\n\nconst SORTERS: (undefined | ((a: FanStatEntry, b: FanStatEntry) => number))[] = [\n  undefined,\n  (a, b) => a.count - b.count,\n  (a, b) => b.count - a.count\n];\n\nexport default function FanStatsView() {\n  const data = useAsyncFactory(getFanStats, [], \"getFanStats\");\n  const [sorterIndex, setSorterIndex] = useState(0);\n  const sortedData = useMemo((): FanStats | undefined => {\n    if (!data) {\n      return undefined;\n    }\n    if (!SORTERS[sorterIndex]) {\n      return data;\n    }\n    const ret = { ...data };\n    for (const key of Object.keys(ret)) {\n      ret[key] = {\n        ...ret[key],\n        entries: [...ret[key].entries].sort(SORTERS[sorterIndex])\n      };\n    }\n    return ret;\n  }, [data, sorterIndex]);\n  if (!sortedData) {\n    return <Loading />;\n  }\n  return (\n    <>\n      <div className=\"row\">\n        {Object.entries(sortedData).map(([modeId, value]) => (\n          <div className=\"col-xl-4\" key={modeId}>\n            <h2 className=\"text-center\">{modeId === \"0\" ? \"全部\" : GameMode[parseInt(modeId)]}</h2>\n            <p className=\"text-center\">记录和出局数：{value.count}</p>\n            <table className=\"table table-striped\">\n              <thead onClick={() => setSorterIndex((sorterIndex + 1) % SORTERS.length)} className=\"cursor-pointer\">\n                <tr>\n                  <th>役</th>\n                  <th className=\"text-right\">记录数</th>\n                  <th className=\"text-right\">比率</th>\n                </tr>\n              </thead>\n              <tbody>\n                {value.entries.map(x => (\n                  <tr key={x.label}>\n                    <td>{x.label}</td>\n                    <td className=\"text-right\">{x.count}</td>\n                    <td className=\"text-right\">\n                      {x.count\n                        ? x.count / value.count < 0.0001\n                          ? \"<0.01%\"\n                          : formatPercent(x.count / value.count)\n                        : \"\"}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { ModelModeProvider } from \"../modeModel\";\nimport { ViewRoutes, SimpleRoutedSubViews, NavButtons, RouteDef } from \"../routing\";\nimport { ViewSwitch } from \"../routing/index\";\n\nimport RankBySeats from \"./rankBySeats\";\nimport DataByRank from \"./dataByRank\";\nimport FanStats from \"./fanStats\";\n\nconst ROUTES = (\n  <ViewRoutes>\n    <RouteDef path=\"rank-by-seat\" title=\"坐席顺位\">\n      <RankBySeats />\n    </RouteDef>\n    <RouteDef path=\"data-by-rank\" title=\"等级数据\">\n      <DataByRank />\n    </RouteDef>\n    <RouteDef path=\"fan-stats\" title=\"和出役种统计\">\n      <FanStats />\n    </RouteDef>\n  </ViewRoutes>\n);\n\nexport default function Routes() {\n  return (\n    <SimpleRoutedSubViews>\n      {ROUTES}\n      <ModelModeProvider>\n        <NavButtons />\n        <ViewSwitch />\n      </ModelModeProvider>\n    </SimpleRoutedSubViews>\n  );\n}\n"],"sourceRoot":""}