{"version":3,"sources":["components/modeModel/model.tsx","components/routing/index.tsx","components/modeModel/modelModeSelector.tsx","components/modeModel/index.tsx","components/charts/simplePieChart.tsx","components/statistics/rankBySeats.tsx","components/statistics/dataByRank.tsx","components/statistics/fanStats.tsx","components/statistics/index.tsx"],"names":["DEFAULT_MODEL","selectedMode","ModelContext","React","createContext","useModel","useContext","ModelModeProvider","children","useReducer","oldModel","newProps","model","updateModel","value","useMemo","Provider","RouteDef","Error","ViewRoutes","Context","NavButtons","className","replace","keepState","t","useTranslation","routes","urlBase","useRouteMatch","url","filter","x","disabled","map","route","key","path","to","loc","pathname","state","undefined","exact","activeClassName","title","ViewSwitch","defaultRenderDirectly","mutateTitle","match","useLocation","push","SimpleRoutedSubViews","props","slice","ModelModeSelector","setModeId","useCallback","modeId","Conf","availableModes","length","mode","onChange","DEFAULT_COLORS","RADIAN","Math","PI","renderCustomizedLabelFactory","lineHeight","innerLabelFontSize","lines","toString","trim","split","viewBox","cx","cy","outerRadius","startAngle","radius","angle","cos","y","sin","polarToCartesian","endAngle","sign","min","abs","getDeltaAngle","yStart","text","index","stroke","strokeWidth","fill","fontSize","textAnchor","dominantBaseline","defaultInnerLabel","item","innerLabel","defaultOuterLabel","outerLabel","SimplePieChart","items","outerLabelOffset","innerLabelLineHeight","colors","aspect","cells","Array","_","fillOpacity","renderCustomizedLabel","wrappedOuterLabel","ret","offsetRadius","width","height","isAnimationActive","data","nameKey","dataKey","label","valueAccessor","position","content","SEAT_LABELS","Chart","rates","numGames","toFixed","round","HEADERS","concat","rankColors","SORTERS","a","b","count","ROUTES","features","statisticsSubPages","rankBySeat","useAsyncFactory","getRankRateBySeat","selectedData","dataByRank","getGlobalStatistics","modeData","Object","entries","sort","localeCompare","levelId","levelData","Level","parseInt","getTag","basic","rank_rates","i","formatPercent","negative_rate","formatFixed3","avg_rank","extended","和牌率","放铳率","副露率","立直率","自摸率","流局率","流听率","num_players","floor","reduce","fanStats","getFanStats","useState","sorterIndex","setSorterIndex","sortedData","keys","modeLabel","onClick","Routes"],"mappings":"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","file":"static/js/5.4a068e99.chunk.js","sourcesContent":["import React, { useReducer, useContext, ReactChild } from \"react\";\nimport { useMemo } from \"react\";\n\nexport interface Model {\n  selectedMode: string;\n}\n\ntype ModelUpdate = Partial<Model>;\ntype DispatchModelUpdate = (props: ModelUpdate) => void;\n\nconst DEFAULT_MODEL: Model = { selectedMode: \"\" };\nconst ModelContext = React.createContext<[Readonly<Model>, DispatchModelUpdate]>([{ ...DEFAULT_MODEL }, () => {}]);\nexport const useModel = () => useContext(ModelContext);\n\nexport function ModelModeProvider({ children }: { children: ReactChild | ReactChild[] }) {\n  const [model, updateModel] = useReducer(\n    (oldModel: Model, newProps: ModelUpdate): Model => ({\n      ...oldModel,\n      ...newProps\n    }),\n    null,\n    (): Model => ({\n      ...DEFAULT_MODEL\n    })\n  );\n  const value: [Model, DispatchModelUpdate] = useMemo(() => [model, updateModel], [model, updateModel]);\n  return <ModelContext.Provider value={value}>{children}</ModelContext.Provider>;\n}\n","import React from \"react\";\nimport { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useRouteMatch, Switch, Route, Redirect, useLocation } from \"react-router\";\nimport { Helmet } from \"react-helmet\";\nimport { useTranslation } from \"react-i18next\";\n\ntype RouteDefProps = {\n  path: string;\n  exact?: boolean;\n  title: string;\n  disabled?: boolean;\n  children: React.ReactChild | React.ReactChildren;\n};\nexport const RouteDef: React.FunctionComponent<RouteDefProps> = () => {\n  throw new Error(\"Not intended for rendering\");\n};\n\ntype RoutesProps = { children: React.FunctionComponentElement<RouteDefProps>[] };\nexport const ViewRoutes: React.FunctionComponent<RoutesProps> = () => {\n  throw new Error(\"Not intended for rendering\");\n};\n\nconst Context = React.createContext<RouteDefProps[]>([]);\n\nexport function NavButtons({ className = \"\", replace = false, keepState = false }) {\n  const { t } = useTranslation(\"navButtons\");\n  const routes = useContext(Context);\n  const match = useRouteMatch() || { url: \"\" };\n  const urlBase = match.url.replace(/\\/+$/, \"\");\n  return (\n    <nav className={`nav nav-pills mb-3 ${className}`}>\n      {routes\n        .filter((x) => !x.disabled)\n        .map((route) => (\n          <NavLink\n            key={route.path}\n            to={(loc) => ({\n              pathname: `${urlBase}/${route.path}`,\n              state: keepState ? loc.state : undefined,\n            })}\n            replace={replace}\n            exact={!!route.exact}\n            className=\"nav-link\"\n            activeClassName=\"active\"\n          >\n            {t(route.title)}\n          </NavLink>\n        ))}\n    </nav>\n  );\n}\n\nexport function ViewSwitch({\n  defaultRenderDirectly = false,\n  mutateTitle = true,\n  children,\n}: {\n  defaultRenderDirectly?: boolean;\n  mutateTitle?: boolean;\n  children?: React.ReactChild | React.ReactChildren;\n}) {\n  const { t } = useTranslation(\"navButtons\");\n  const routes = useContext(Context);\n  const match = useRouteMatch() || { url: \"\" };\n  const loc = useLocation();\n  const urlBase = match.url.replace(/\\/+$/, \"\");\n  return (\n    <Switch>\n      {routes\n        .filter((x) => !x.disabled)\n        .map((route) => (\n          <Route exact={route.exact} key={route.path} path={`${urlBase}/${route.path}`}>\n            {mutateTitle && (\n              <Helmet>\n                <title>{t(route.title)}</title>\n              </Helmet>\n            )}\n            {route.children}\n          </Route>\n        ))}\n      <Route>\n        {defaultRenderDirectly ? (\n          routes[0].children\n        ) : (\n          <Redirect to={{ ...loc, pathname: `${urlBase}/${routes[0].path}` }} push={false} />\n        )}\n      </Route>\n      {children}\n    </Switch>\n  );\n}\n\nexport function SimpleRoutedSubViews({\n  children,\n}: {\n  children: [React.FunctionComponentElement<RoutesProps>, ...(React.ReactChild | React.ReactChildren)[]];\n}) {\n  return (\n    <Context.Provider value={children[0].props.children.map((x) => x.props)}>{children.slice(1)}</Context.Provider>\n  );\n}\n","import React from \"react\";\nimport { useCallback } from \"react\";\nimport { ModeSelector } from \"../gameRecords/modeSelector\";\nimport { useModel } from \"./model\";\nimport Conf from \"../../utils/conf\";\n\nexport default function ModelModeSelector() {\n  const [model, updateModel] = useModel();\n  const setModeId = useCallback(modeId => updateModel({ selectedMode: modeId }), [updateModel]);\n  if (Conf.availableModes.length < 2) {\n    return null;\n  }\n  return (\n    <div className=\"row mb-3\">\n      <div className=\"col\">\n        <ModeSelector mode={model.selectedMode} onChange={setModeId} />\n      </div>\n    </div>\n  );\n}\n","export { ModelModeProvider, useModel } from \"./model\";\nexport { default as ModelModeSelector } from \"./modelModeSelector\";\n","import React from \"react\";\nimport { ResponsiveContainer, PieChart, Pie, Cell, LabelList, LabelProps, PolarViewBox } from \"recharts\";\nimport { useMemo } from \"react\";\n\nconst DEFAULT_COLORS = [\"#003f5c\", \"#7a5195\", \"#ef5675\", \"#ffa600\"];\n\nconst getDeltaAngle = (startAngle: number, endAngle: number) => {\n  const sign = Math.sign(endAngle - startAngle);\n  const deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);\n\n  return sign * deltaAngle;\n};\n\nconst RADIAN = Math.PI / 180;\n\nconst polarToCartesian = (cx: number, cy: number, radius: number, angle: number) => ({\n  x: cx + Math.cos(-RADIAN * angle) * radius,\n  y: cy + Math.sin(-RADIAN * angle) * radius\n});\n\nconst renderCustomizedLabelFactory = ({ lineHeight = 24, innerLabelFontSize = \"1rem\" }) => (props: LabelProps) => {\n  const { value } = props;\n  if (!value) {\n    return null;\n  }\n  const lines = value\n    .toString()\n    .trim()\n    .split(\"\\n\");\n  const { cx, cy, outerRadius, startAngle, endAngle } = props.viewBox as Required<PolarViewBox>;\n  const labelAngle = startAngle + getDeltaAngle(startAngle, endAngle) / 2;\n  const { x, y } = polarToCartesian(cx, cy, outerRadius / 2, labelAngle);\n  const yStart = y - (lines.length - 1) * (lineHeight / 2);\n  return (\n    <g>\n      {lines.map((text, index) => (\n        <text\n          key={index}\n          x={x}\n          y={yStart + index * lineHeight}\n          stroke=\"#fff\"\n          strokeWidth=\"0.5\"\n          fill=\"#fff\"\n          fontSize={innerLabelFontSize}\n          textAnchor=\"middle\"\n          dominantBaseline=\"central\"\n        >\n          {text}\n        </text>\n      ))}\n    </g>\n  );\n};\n\nexport type PieChartItem = {\n  value: number;\n  innerLabel?: string;\n  outerLabel?: string;\n};\n\nfunction defaultInnerLabel<T extends PieChartItem>(item: T) {\n  return item.innerLabel || \"\";\n}\nfunction defaultOuterLabel<T extends PieChartItem>(item: T) {\n  return item.outerLabel || \"\";\n}\n\ndeclare module \"recharts\" {\n  interface LabelListProps {\n    fill?: string;\n  }\n}\n\nexport default function SimplePieChart<T extends PieChartItem>({\n  items,\n  innerLabel = defaultInnerLabel,\n  outerLabel = defaultOuterLabel,\n  outerLabelOffset = 0,\n  innerLabelLineHeight = 24,\n  startAngle = 0,\n  colors = DEFAULT_COLORS,\n  innerLabelFontSize = \"1rem\",\n  aspect = 1\n}: {\n  items: T[];\n  innerLabel?: (item: T) => string;\n  outerLabel?: (item: T) => string;\n  outerLabelOffset?: number;\n  innerLabelLineHeight?: number;\n  startAngle?: number;\n  colors?: string[];\n  innerLabelFontSize?: string;\n  aspect?: number;\n}) {\n  const cells = useMemo(\n    () =>\n      Array(items.length)\n        .fill(0)\n        .map((_, index) => <Cell fill={colors[index % colors.length]} fillOpacity={1} key={`cell-${index}`} />),\n    [items.length, colors]\n  );\n  const renderCustomizedLabel = useMemo(\n    () => renderCustomizedLabelFactory({ lineHeight: innerLabelLineHeight, innerLabelFontSize }),\n    [innerLabelLineHeight, innerLabelFontSize]\n  );\n  const wrappedOuterLabel = useMemo(() => {\n    const ret = (item: T) => outerLabel(item);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (ret as any).offsetRadius = outerLabelOffset;\n    return ret;\n  }, [outerLabel, outerLabelOffset]);\n  return (\n    <ResponsiveContainer width=\"100%\" aspect={aspect} height=\"auto\">\n      <PieChart>\n        <Pie\n          isAnimationActive={false}\n          data={items}\n          nameKey=\"outerLabel\"\n          dataKey=\"value\"\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          label={wrappedOuterLabel as (x: any) => string}\n          startAngle={startAngle}\n          endAngle={startAngle + 360}\n        >\n          {cells}\n          <LabelList\n            valueAccessor={innerLabel}\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            dataKey={undefined as any}\n            position=\"inside\"\n            fill=\"#fff\"\n            content={renderCustomizedLabel}\n          />\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n","import React from \"react\";\nimport { useAsyncFactory } from \"../../utils/index\";\nimport { getRankRateBySeat } from \"../../data/source/misc\";\nimport Loading from \"../misc/loading\";\nimport { useMemo } from \"react\";\nimport { useModel, ModelModeSelector } from \"../modeModel\";\nimport SimplePieChart from \"../charts/simplePieChart\";\nimport { useTranslation } from \"react-i18next\";\nimport { RankRates } from \"../../data/types\";\n\nconst SEAT_LABELS = \"东南西北\";\n\nfunction Chart({ rates, numGames, aspect = 1 }: { rates: RankRates; numGames: number; aspect?: number }) {\n  const { t } = useTranslation();\n  const items = useMemo(\n    () =>\n      rates.map((x, index) => ({\n        value: x,\n        outerLabel: t(SEAT_LABELS[index]),\n        innerLabel: `${(x * 100).toFixed(2)}%\\n[${Math.round(x * numGames)}]`,\n      })),\n    [rates, numGames, t]\n  );\n  return <SimplePieChart aspect={aspect} items={items} />;\n}\n\nexport default function RankBySeats() {\n  const { t } = useTranslation();\n  const data = useAsyncFactory(getRankRateBySeat, [], \"getRankRateBySeat\");\n  const [model] = useModel();\n  if (!data) {\n    return <Loading />;\n  }\n  const selectedData = data[model.selectedMode || \"0\"];\n  return (\n    <>\n      <ModelModeSelector />\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <h3 className=\"text-center\">{t(\"坐席吃一率\")}</h3>\n          <Chart rates={selectedData[1]} numGames={selectedData.numGames} />\n        </div>\n        <div className=\"col-lg-6\">\n          <h3 className=\"text-center\">{t(`坐席吃${selectedData.length > 4 ? \"四\" : \"三\"}率`)}</h3>\n          <Chart rates={selectedData[selectedData.length - 1]} numGames={selectedData.numGames} />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col text-right\">\n          {t(\"统计半庄数：\")}\n          {selectedData.numGames}\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { useAsyncFactory, formatPercent, formatFixed3 } from \"../../utils/index\";\nimport { getGlobalStatistics } from \"../../data/source/misc\";\nimport Loading from \"../misc/loading\";\nimport { useModel } from \"../modeModel/model\";\nimport { Level } from \"../../data/types/level\";\nimport { ModelModeSelector } from \"../modeModel\";\nimport { useTranslation } from \"react-i18next\";\nimport Conf from \"../../utils/conf\";\n\nconst HEADERS = [\"等级\"].concat(\n  [\"一位率\", \"二位率\", \"三位率\", \"四位率\"].slice(0, Conf.rankColors.length),\n  [\"被飞率\", \"平均顺位\", \"和牌率\", \"放铳率\", \"副露率\", \"立直率\", \"自摸率\", \"流局率\", \"流听率\", \"对战数\", \"在位记录\"]\n);\n\nexport default function DataByRank() {\n  const { t } = useTranslation();\n  const data = useAsyncFactory(getGlobalStatistics, [], \"getGlobalStatistics\");\n  const [model] = useModel();\n  if (!data) {\n    return <Loading />;\n  }\n  const modeData = Object.entries(data[model.selectedMode || \"0\"]);\n  modeData.sort((a, b) => a[0].localeCompare(b[0]));\n\n  return (\n    <>\n      <ModelModeSelector />\n      <table className=\"table table-responsive-xl table-striped table-sm table-hover text-center\">\n        <thead className=\"vertical-table-header\">\n          <tr>\n            {HEADERS.map((x) => (\n              <th key={x}>\n                <div>{t(x)}</div>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {modeData.map(([levelId, levelData]) => (\n            <tr key={levelId}>\n              <td className=\"text-nowrap\">{new Level(parseInt(levelId)).getTag()}</td>\n              {levelData.basic.rank_rates.slice(0, Conf.rankColors.length).map((x, i) => (\n                <td key={i}>{formatPercent(x)}</td>\n              ))}\n              <td>{formatPercent(levelData.basic.negative_rate)}</td>\n              <td>{formatFixed3(levelData.basic.avg_rank)}</td>\n              <td>{formatPercent(levelData.extended.和牌率)}</td>\n              <td>{formatPercent(levelData.extended.放铳率)}</td>\n              <td>{formatPercent(levelData.extended.副露率)}</td>\n              <td>{formatPercent(levelData.extended.立直率)}</td>\n              <td>{formatPercent(levelData.extended.自摸率)}</td>\n              <td>{formatPercent(levelData.extended.流局率)}</td>\n              <td>{formatPercent(levelData.extended.流听率)}</td>\n              <td>{levelData.basic.count}</td>\n              <td>{levelData.num_players}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"row\">\n        <div className=\"col text-right\">\n          {t(\"统计半庄数：\")}\n          {Math.floor(\n            modeData.map(([, levelData]) => levelData.basic.count).reduce((a, b) => a + b, 0) / Conf.rankColors.length\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { useAsyncFactory, formatPercent } from \"../../utils/index\";\nimport { getFanStats } from \"../../data/source/misc\";\nimport Loading from \"../misc/loading\";\nimport { FanStatEntry, FanStats, modeLabel } from \"../../data/types\";\nimport { useState, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst SORTERS: (undefined | ((a: FanStatEntry, b: FanStatEntry) => number))[] = [\n  undefined,\n  (a, b) => a.count - b.count,\n  (a, b) => b.count - a.count\n];\n\nexport default function FanStatsView() {\n  const { t } = useTranslation();\n  const data = useAsyncFactory(getFanStats, [], \"getFanStats\");\n  const [sorterIndex, setSorterIndex] = useState(0);\n  const sortedData = useMemo((): FanStats | undefined => {\n    if (!data) {\n      return undefined;\n    }\n    if (!SORTERS[sorterIndex]) {\n      return data;\n    }\n    const ret = { ...data };\n    for (const key of Object.keys(ret)) {\n      ret[key] = {\n        ...ret[key],\n        entries: [...ret[key].entries].sort(SORTERS[sorterIndex])\n      };\n    }\n    return ret;\n  }, [data, sorterIndex]);\n  if (!sortedData) {\n    return <Loading />;\n  }\n  return (\n    <>\n      <div className=\"row\">\n        {Object.entries(sortedData).map(([modeId, value]) => (\n          <div className=\"col-xl-4\" key={modeId}>\n            <h2 className=\"text-center\">{t(modeId === \"0\" ? \"全部\" : modeLabel(parseInt(modeId)))}</h2>\n            <p className=\"text-center\">\n              {t(\"记录和出局数：\")}\n              {value.count}\n            </p>\n            <table className=\"table table-striped\">\n              <thead onClick={() => setSorterIndex((sorterIndex + 1) % SORTERS.length)} className=\"cursor-pointer\">\n                <tr>\n                  <th>{t(\"役\")}</th>\n                  <th className=\"text-right\">{t(\"记录数\")}</th>\n                  <th className=\"text-right\">{t(\"比率\")}</th>\n                </tr>\n              </thead>\n              <tbody>\n                {value.entries.map(x => (\n                  <tr key={x.label}>\n                    <td>{t(x.label)}</td>\n                    <td className=\"text-right\">{x.count}</td>\n                    <td className=\"text-right\">\n                      {x.count\n                        ? x.count / value.count < 0.0001\n                          ? \"<0.01%\"\n                          : formatPercent(x.count / value.count)\n                        : \"\"}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { ModelModeProvider } from \"../modeModel\";\nimport { ViewRoutes, SimpleRoutedSubViews, NavButtons, RouteDef } from \"../routing\";\nimport { ViewSwitch } from \"../routing/index\";\n\nimport RankBySeats from \"./rankBySeats\";\nimport DataByRank from \"./dataByRank\";\nimport FanStats from \"./fanStats\";\nimport Conf from \"../../utils/conf\";\n\nconst ROUTES = (\n  <ViewRoutes>\n    <RouteDef path=\"rank-by-seat\" title=\"坐席顺位\" disabled={!Conf.features.statisticsSubPages.rankBySeat}>\n      <RankBySeats />\n    </RouteDef>\n    <RouteDef path=\"data-by-rank\" title=\"等级数据\" disabled={!Conf.features.statisticsSubPages.dataByRank}>\n      <DataByRank />\n    </RouteDef>\n    <RouteDef path=\"fan-stats\" title=\"和出役种统计\" disabled={!Conf.features.statisticsSubPages.fanStats}>\n      <FanStats />\n    </RouteDef>\n  </ViewRoutes>\n);\n\nexport default function Routes() {\n  return (\n    <SimpleRoutedSubViews>\n      {ROUTES}\n      <ModelModeProvider>\n        <NavButtons />\n        <ViewSwitch />\n      </ModelModeProvider>\n    </SimpleRoutedSubViews>\n  );\n}\n"],"sourceRoot":""}