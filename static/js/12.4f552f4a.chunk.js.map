{"version":3,"sources":["components/statistics/rankBySeats.tsx","components/statistics/index.tsx"],"names":["SEAT_LABELS","CELLS","map","color","index","fill","fillOpacity","key","formatLabel","x","rate","label","Chart","rates","aspect","items","useMemo","width","height","isAnimationActive","data","nameKey","dataKey","formatter","formatPercent","position","RankBySeats","useAsyncFactory","getRankRateBySeat","useState","modeId","setModeId","className","mode","onChange","Routes"],"mappings":"8LAQMA,EAAc,2BAQdC,EAPc,CAAC,UAAW,UAAW,UAAW,WAGxCC,KAAI,SAACC,EAAOC,GAAR,OACd,kBAAC,IAAD,CAAMC,KAAMF,EAAOG,YAAqC,EAAOC,IAAG,eAAUH,QAM1EI,EAAc,SAACC,GAAD,OAAaA,EAAEC,KAAO,EAAID,EAAEE,MAAQ,MAExD,SAASC,EAAT,GAAqG,IAApFC,EAAmF,EAAnFA,MAAmF,IAA5EC,cAA4E,MAAnE,EAAmE,EAC5FC,EAAQC,mBACZ,kBACEH,EAAMX,KAAI,SAACO,EAAGL,GAAJ,MAAe,CACvBM,KAAMD,EACNE,MAAOX,EAAYI,SAEvB,CAACS,IAEH,OACE,kBAAC,IAAD,CAAqBI,MAAM,OAAOH,OAAQA,EAAQI,OAAO,QACvD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,mBAAmB,EAAOC,KAAML,EAAOM,QAAQ,QAAQC,QAAQ,OAAOX,MAAOH,GAC/EP,EACD,kBAAC,IAAD,CAAWqB,QAAQ,OAAOC,UAAWC,IAAeC,SAAS,SAASpB,KAAK,YAOtE,SAASqB,IACtB,IAAMN,EAAOO,YAAgBC,IAAmB,IADZ,EAERC,mBAAS,IAFD,mBAE7BC,EAF6B,KAErBC,EAFqB,KAGpC,OAAKX,EAIH,oCACE,yBAAKY,UAAU,OACb,yBAAKA,UAAU,OACb,kBAAC,IAAD,CAAcC,KAAMH,EAAQI,SAAUH,MAG1C,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,eAAd,kCACA,kBAACpB,EAAD,CAAOC,MAAOO,EAAKU,GAAU,KAAK,MAEpC,yBAAKE,UAAU,YACb,wBAAIA,UAAU,eAAd,kCACA,kBAACpB,EAAD,CAAOC,MAAOO,EAAKU,GAAU,KAAK,QAhBjC,kBAAC,IAAD,MC3CI,SAASK,IACtB,OACE,6BACE,kBAACT,EAAD,OANN","file":"static/js/12.4f552f4a.chunk.js","sourcesContent":["import React from \"react\";\nimport { ResponsiveContainer, PieChart, Pie, Cell, LabelList } from \"recharts\";\nimport { useAsyncFactory, formatPercent } from \"../../utils/index\";\nimport { getRankRateBySeat } from \"../../data/source/misc\";\nimport Loading from \"../misc/loading\";\nimport { useMemo, useState } from \"react\";\nimport { ModeSelector } from \"../gameRecords/modeSelector\";\n\nconst SEAT_LABELS = \"东南西北\";\nconst SEAT_COLORS = [\"#003f5c\", \"#7a5195\", \"#ef5675\", \"#ffa600\"];\n\nconst generateCells = (activeIndex: number) =>\n  SEAT_COLORS.map((color, index) => (\n    <Cell fill={color} fillOpacity={activeIndex === index ? 1 : 1} key={`cell-${index}`} />\n  ));\n\nconst CELLS = generateCells(-1);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst formatLabel = (x: any) => (x.rate > 0 ? x.label : null);\n\nfunction Chart({ rates, aspect = 1 }: { rates: [number, number, number, number]; aspect?: number }) {\n  const items = useMemo(\n    () =>\n      rates.map((x, index) => ({\n        rate: x,\n        label: SEAT_LABELS[index]\n      })),\n    [rates]\n  );\n  return (\n    <ResponsiveContainer width=\"100%\" aspect={aspect} height=\"auto\">\n      <PieChart>\n        <Pie isAnimationActive={false} data={items} nameKey=\"label\" dataKey=\"rate\" label={formatLabel}>\n          {CELLS}\n          <LabelList dataKey=\"rate\" formatter={formatPercent} position=\"inside\" fill=\"#fff\" />\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default function RankBySeats() {\n  const data = useAsyncFactory(getRankRateBySeat, []);\n  const [modeId, setModeId] = useState(\"\");\n  if (!data) {\n    return <Loading />;\n  }\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col\">\n          <ModeSelector mode={modeId} onChange={setModeId} />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <h3 className=\"text-center\">坐席吃一率</h3>\n          <Chart rates={data[modeId || \"0\"][0]} />\n        </div>\n        <div className=\"col-lg-6\">\n          <h3 className=\"text-center\">坐席吃四率</h3>\n          <Chart rates={data[modeId || \"0\"][3]} />\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport RankBySeats from \"./rankBySeats\";\n\nexport default function Routes() {\n  return (\n    <div>\n      <RankBySeats />\n    </div>\n  );\n}\n"],"sourceRoot":""}