{"version":3,"sources":["components/gameRecords/charts/rankRate.tsx"],"names":["CELLS","RANK_COLORS","map","color","index","fill","fillOpacity","key","formatLabel","x","rate","label","createLabelLine","props","payload","type","className","RankRateChart","metadata","aspect","ranks","useMemo","rank_rates","RANK_LABELS","startAngle","filter","length","width","height","margin","left","right","isAnimationActive","data","labelLine","nameKey","dataKey","endAngle","formatter","formatPercent","position"],"mappings":"kHAAA,4FAYMA,EAJJC,cAAYC,KAAI,SAACC,EAAOC,GAAR,OACd,kBAAC,IAAD,CAAMC,KAAMF,EAAOG,YAAqC,EAAOC,IAAG,eAAUH,QAM1EI,EAAc,SAACC,GAAD,OAAaA,EAAEC,KAAO,EAAID,EAAEE,MAAQ,MAElDC,EAAkB,SAACC,GAAD,OACtBA,EAAMC,QAAQA,QAAQJ,KAAO,EAAI,kBAAC,IAAD,iBAAWG,EAAX,CAAkBE,KAAK,SAASC,UAAU,6BAA+B,MAE7F,SAASC,EAAT,GAAiG,IAAxEC,EAAuE,EAAvEA,SAAuE,IAA7DC,cAA6D,MAApD,EAAoD,EACvGC,EAAQC,mBAAQ,kBAAMH,EAASI,WAAWpB,KAAI,SAACO,EAAGL,GAAJ,MAAe,CAAEO,MAAOY,cAAYnB,GAAQM,KAAMD,QAAO,CAC3GS,IAEIM,EAAaJ,EAAMK,QAAO,SAAAhB,GAAC,OAAIA,EAAEC,KAAO,KAAGgB,OAAS,EAAI,GAAK,EACnE,OACE,kBAAC,IAAD,CAAqBC,MAAM,OAAOR,OAAQA,EAAQS,OAAO,QACvD,kBAAC,IAAD,CAAUC,OAAQ,CAAEC,KAAM,GAAIC,MAAO,KACnC,kBAAC,IAAD,CACEC,mBAAmB,EACnBC,KAAMb,EACNT,MAAOH,EACP0B,UAAWtB,EACXuB,QAAQ,QACRC,QAAQ,OACRZ,WAAYA,EACZa,SAAUb,EAAa,KAEtBxB,EACD,kBAAC,IAAD,CAAWoC,QAAQ,OAAOE,UAAWC,IAAeC,SAAS,SAASnC,KAAK","file":"static/js/9.e1147faf.chunk.js","sourcesContent":["import React from \"react\";\nimport { ResponsiveContainer, PieChart, Pie, Cell, LabelList, Curve } from \"recharts\";\n\nimport { PlayerMetadata, RANK_LABELS, RANK_COLORS } from \"../../../data/types\";\nimport { useMemo } from \"react\";\nimport { formatPercent } from \"../../../utils/index\";\n\nconst generateCells = (activeIndex: number) =>\n  RANK_COLORS.map((color, index) => (\n    <Cell fill={color} fillOpacity={activeIndex === index ? 1 : 1} key={`cell-${index}`} />\n  ));\n\nconst CELLS = generateCells(-1);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst formatLabel = (x: any) => (x.rate > 0 ? x.label : null);\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst createLabelLine = (props: any) =>\n  props.payload.payload.rate > 0 ? <Curve {...props} type=\"linear\" className=\"recharts-pie-label-line\" /> : null;\n\nexport default function RankRateChart({ metadata, aspect = 1 }: { metadata: PlayerMetadata; aspect?: number }) {\n  const ranks = useMemo(() => metadata.rank_rates.map((x, index) => ({ label: RANK_LABELS[index], rate: x })), [\n    metadata\n  ]);\n  const startAngle = ranks.filter(x => x.rate > 0).length < 4 ? 45 : 0;\n  return (\n    <ResponsiveContainer width=\"100%\" aspect={aspect} height=\"auto\">\n      <PieChart margin={{ left: 20, right: 20 }}>\n        <Pie\n          isAnimationActive={false}\n          data={ranks}\n          label={formatLabel}\n          labelLine={createLabelLine}\n          nameKey=\"label\"\n          dataKey=\"rate\"\n          startAngle={startAngle}\n          endAngle={startAngle + 360}\n        >\n          {CELLS}\n          <LabelList dataKey=\"rate\" formatter={formatPercent} position=\"inside\" fill=\"#fff\" />\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n"],"sourceRoot":""}