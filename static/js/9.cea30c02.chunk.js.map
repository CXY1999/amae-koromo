{"version":3,"sources":["components/playerDetails/playerDetailsSettings.tsx","components/playerDetails/statItem.tsx","components/playerDetails/estimatedStableLevel.tsx","components/playerDetails/playerDetails.tsx"],"names":["DateRangeOptions","DATE_RANGE_ITEMS","Object","keys","map","key","label","PlayerDetailsSettings","showLevel","useModel","model","updateModel","useState","type","All","startDate","endDate","dayjs","isSame","subtract","Custom","Last4Weeks","mode","setMode","DATE_MIN","customDateFrom","setCustomDateFrom","customDateTo","setCustomDateTo","useEffect","playerId","selectedMode","undefined","setSelectedMode","useCallback","className","title","inline","selectedItemKey","items","groupKey","onChange","min","date","StatItem","description","children","data-tip","EstimatedStableLevel","metadata","level","LevelWithDelta","getAdjustedLevel","parseInt","getTag","GameMode","王座","玉","notEnoughData","count","expectedGamePoint","PlayerMetadata","calculateExpectedGamePoint","estimatedNumGamesToChangeLevel","getMaxPoint","isAllowedMode","curPoint","Level","id","score","delta","getStartingPoint","changeLevelMsg","getStableLevelComponents","x","toFixed","join","estimateStableLevel2","Math","abs","RankRateChart","Loadable","loader","loading","RecentRankChart","ReactTooltipPromise","ReactTooltip","ExtendedStatsViewAsync","view","stats","useAsync","extended_stats","triggerRelayout","View","PlayerExtendedStatsView","formatPercent","和牌率","放铳率","自摸率","默听率","流局率","流听率","副露率","立直率","和了巡数","平均打点","平均铳点","MoreStats","max_level","formatAdjustedScore","levelObj","fixMaxLevel","最大连庄","一发率","里宝率","被炸率","平均被炸点数","放铳时立直率","放铳时副露率","立直后放铳率","副露后放铳率","立直后和牌率","副露后和牌率","立直后流局率","副露后流局率","BasicStats","avg_rank","negative_rate","LuckStats","役满","累计役满","最大累计番数","流满","W立直","formatFixed3","平均起手向听","LargestLost","最近大铳","target","rel","href","GameRecord","getRecordLink","result","formatFanSummary","sum","fans","formatFullStartTime","start_time","PlayerStats","page","setPage","then","rebuild","onClick","clsx","PlayerDetails","dataAdapter","useDataAdapter","getMetadata","nickname","Helmet","aspect","effect","multiline","place"],"mappings":"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","file":"static/js/9.cea30c02.chunk.js","sourcesContent":["import React from \"react\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { DATE_MIN } from \"../../utils/constants\";\nimport { FormRow } from \"../form/formRow\";\nimport { useModel } from \"../gameRecords/model\";\nimport { CheckboxGroup, DatePicker } from \"../form\";\nimport dayjs from \"dayjs\";\nimport { ModeSelector } from \"../gameRecords/modeSelector\";\n\nenum DateRangeOptions {\n  All = \"全部\",\n  Last4Weeks = \"最近四周\",\n  Custom = \"自定义\"\n}\nconst DATE_RANGE_ITEMS = Object.keys(DateRangeOptions).map((key: string) => ({\n  key: DateRangeOptions[key as keyof typeof DateRangeOptions],\n  label: DateRangeOptions[key as keyof typeof DateRangeOptions]\n}));\n\nexport default function PlayerDetailsSettings({ showLevel = false }) {\n  const [model, updateModel] = useModel();\n  const [mode, setMode] = useState(() => {\n    if (model.type !== \"player\") {\n      return DateRangeOptions.All;\n    }\n    if (!model.startDate) {\n      return DateRangeOptions.All;\n    }\n    if (\n      (!model.endDate || dayjs(model.endDate).isSame(dayjs(), \"day\")) &&\n      dayjs(model.startDate).isSame(dayjs().subtract(27, \"day\"), \"day\")\n    ) {\n      return DateRangeOptions.Last4Weeks;\n    }\n    return DateRangeOptions.Custom;\n  });\n  const [customDateFrom, setCustomDateFrom] = useState(() =>\n    model.type === \"player\" && model.startDate ? model.startDate : DATE_MIN\n  );\n  const [customDateTo, setCustomDateTo] = useState(() =>\n    model.type === \"player\" && model.endDate ? model.endDate : dayjs()\n  );\n  useEffect(() => {\n    if (model.type !== \"player\") {\n      return;\n    }\n    switch (mode) {\n      case DateRangeOptions.All:\n        updateModel({\n          type: \"player\",\n          playerId: model.playerId,\n          startDate: null,\n          endDate: null,\n          selectedMode: undefined\n        });\n        break;\n      case DateRangeOptions.Last4Weeks:\n        updateModel({\n          type: \"player\",\n          playerId: model.playerId,\n          startDate: dayjs().subtract(27, \"day\"),\n          endDate: null\n        });\n        break;\n      case DateRangeOptions.Custom:\n        updateModel({\n          type: \"player\",\n          playerId: model.playerId,\n          startDate: customDateFrom,\n          endDate: customDateTo\n        });\n        break;\n    }\n  }, [model, mode, customDateFrom, customDateTo, updateModel]);\n  const setSelectedMode = useCallback(mode => updateModel({ type: \"player\", selectedMode: mode }), [updateModel]);\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <FormRow title=\"时间\" inline={true}>\n            <CheckboxGroup\n              type=\"radio\"\n              selectedItemKey={mode}\n              items={DATE_RANGE_ITEMS}\n              groupKey=\"PlayerDetailsDateRangeSelector\"\n              onChange={setMode as (x: string) => void}\n            />\n          </FormRow>\n        </div>\n        {showLevel && (\n          <div className=\"col-6\">\n            <FormRow title=\"等级\" inline={true}>\n              <ModeSelector mode={model.selectedMode} onChange={setSelectedMode} />\n            </FormRow>\n          </div>\n        )}\n      </div>\n      {mode === DateRangeOptions.Custom ? (\n        <div className=\"row mt-n3\">\n          <div className=\"col-6\">\n            <FormRow inline={true}>\n              <DatePicker min={DATE_MIN} onChange={setCustomDateFrom} date={customDateFrom} className=\"form-control\" />\n              <DatePicker min={DATE_MIN} onChange={setCustomDateTo} date={customDateTo} className=\"form-control\" />\n            </FormRow>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function StatItem({ label, description, className = \"\", children }: {\n  label: string;\n  description?: string;\n  className?: string;\n  children: React.ReactChild;\n}) {\n  return (<>\n    <dt className={`col-2 col-lg-1 text-nowrap ${className}`}>{label}</dt>\n    <dd className={`col-4 col-lg-3 text-right ${className}`} data-tip={description || \"\"}>\n      {children}\n    </dd>\n  </>);\n}\n","import React from \"react\";\nimport { LevelWithDelta, PlayerMetadata, GameMode, Level } from \"../../data/types\";\nimport { useModel } from \"../gameRecords/model\";\nimport StatItem from \"./statItem\";\n\nexport default function EstimatedStableLevel({ metadata }: { metadata: PlayerMetadata }) {\n  const [model] = useModel();\n  const level = LevelWithDelta.getAdjustedLevel(metadata.level);\n  const mode = model.selectedMode\n    ? (parseInt(model.selectedMode) as GameMode)\n    : LevelWithDelta.getTag(metadata.level) === \"魂\"\n    ? GameMode.王座\n    : GameMode.玉;\n  const notEnoughData = metadata.count < 100;\n  const expectedGamePoint = PlayerMetadata.calculateExpectedGamePoint(metadata, mode);\n  let estimatedNumGamesToChangeLevel = null as number | null;\n  if (level.getMaxPoint() && level.isAllowedMode(mode)) {\n    const curPoint = level.isSame(new Level(metadata.level.id))\n      ? metadata.level.score + metadata.level.delta\n      : level.getStartingPoint();\n    estimatedNumGamesToChangeLevel =\n      expectedGamePoint > 0 ? (level.getMaxPoint() - curPoint) / expectedGamePoint : curPoint / expectedGamePoint;\n  }\n  const changeLevelMsg = estimatedNumGamesToChangeLevel\n    ? `，括号内为预计${estimatedNumGamesToChangeLevel > 0 ? \"升\" : \"降\"}段场数`\n    : \"\";\n  return (\n    <>\n      <StatItem\n        label=\"安定段位\"\n        description={`在${GameMode[mode]}之间一直进行对局，预测最终能达到的段位。${\n          notEnoughData ? \"（数据量不足，计算结果可能有较大偏差）\" : \"\"\n        }<br/>一二三位平均 Pt / 四位平均得点 Pt：[${PlayerMetadata.getStableLevelComponents(metadata, mode)\n          .map(x => x.toFixed(2))\n          .join(\"/\")}]`}\n        className={notEnoughData ? \"font-italic font-lighter text-muted\" : \"\"}\n      >\n        <span>\n          {PlayerMetadata.estimateStableLevel2(metadata, mode)}\n          {notEnoughData && \"?\"}\n        </span>\n      </StatItem>\n      <StatItem\n        label=\"分数期望\"\n        description={`在${GameMode[mode]}之间每局获得点数的数学期望值${changeLevelMsg}${\n          notEnoughData ? \"（数据量不足，计算结果可能有较大偏差）\" : \"\"\n        }`}\n        className={notEnoughData ? \"font-italic font-lighter text-muted\" : \"\"}\n      >\n        <span>\n          {expectedGamePoint.toFixed(1)}\n          {estimatedNumGamesToChangeLevel ? ` (${Math.abs(estimatedNumGamesToChangeLevel).toFixed(0)})` : \"\"}\n          {notEnoughData && \"?\"}\n        </span>\n      </StatItem>\n    </>\n  );\n}\n","import React from \"react\";\nimport Loadable from \"../misc/customizedLoadable\";\nimport { Helmet } from \"react-helmet\";\n\nimport { useDataAdapter } from \"../gameRecords/dataAdapterProvider\";\nimport { useEffect, useState } from \"react\";\nimport { triggerRelayout, formatPercent, useAsync, sum, formatFixed3 } from \"../../utils/index\";\nimport { LevelWithDelta, PlayerExtendedStats, PlayerMetadata, GameRecord } from \"../../data/types\";\nimport Loading from \"../misc/loading\";\nimport PlayerDetailsSettings from \"./playerDetailsSettings\";\nimport StatItem from \"./statItem\";\nimport EstimatedStableLevel from \"./estimatedStableLevel\";\nimport clsx from \"clsx\";\nimport { Level } from \"../../data/types/level\";\n\nconst RankRateChart = Loadable({\n  loader: () => import(\"./charts/rankRate\"),\n  loading: () => <Loading />\n});\nconst RecentRankChart = Loadable({\n  loader: () => import(\"./charts/recentRank\"),\n  loading: () => <Loading />\n});\nconst ReactTooltipPromise = import(\"react-tooltip\");\nconst ReactTooltip = Loadable({\n  loader: () => ReactTooltipPromise,\n  loading: () => null\n});\n\nfunction ExtendedStatsViewAsync({\n  metadata,\n  view\n}: {\n  metadata: PlayerMetadata;\n  view: React.ComponentType<{ stats: PlayerExtendedStats; metadata: PlayerMetadata }>;\n}) {\n  const stats = useAsync(metadata.extended_stats);\n  useEffect(triggerRelayout, [!!stats]);\n  if (!stats) {\n    return null;\n  }\n  const View = view;\n  return <View stats={stats} metadata={metadata} />;\n}\n\nfunction PlayerExtendedStatsView({ stats }: { stats: PlayerExtendedStats }) {\n  return (\n    <>\n      <StatItem label=\"和牌率\" description=\"和牌局数 / 总局数\">\n        {formatPercent(stats.和牌率 || 0)}\n      </StatItem>\n      <StatItem label=\"放铳率\" description=\"放铳局数 / 总局数\">\n        {formatPercent(stats.放铳率 || 0)}\n      </StatItem>\n      <StatItem label=\"自摸率\" description=\"自摸局数 / 和牌局数\">\n        {formatPercent(stats.自摸率 || 0)}\n      </StatItem>\n      <StatItem label=\"默胡率\" description=\"门清默听和牌局数 / 和牌局数\">\n        {formatPercent(stats.默听率 || 0)}\n      </StatItem>\n      <StatItem label=\"流局率\" description=\"流局局数 / 总局数\">\n        {formatPercent(stats.流局率 || 0)}\n      </StatItem>\n      <StatItem label=\"流听率\" description=\"流局听牌局数 / 流局局数\">\n        {formatPercent(stats.流听率 || 0)}\n      </StatItem>\n      <StatItem label=\"副露率\" description=\"副露局数 / 总局数\">\n        {formatPercent(stats.副露率 || 0)}\n      </StatItem>\n      <StatItem label=\"立直率\" description=\"立直局数 / 总局数\">\n        {formatPercent(stats.立直率 || 0)}\n      </StatItem>\n      <StatItem label=\"和了巡数\">{(stats.和了巡数 || 0).toFixed(3)}</StatItem>\n      <StatItem label=\"平均打点\">{stats.平均打点 || 0}</StatItem>\n      <StatItem label=\"平均铳点\">{stats.平均铳点 || 0}</StatItem>\n    </>\n  );\n}\n\nfunction fixMaxLevel(level: LevelWithDelta): LevelWithDelta {\n  const levelObj = new Level(level.id);\n  if (level.score + level.delta < levelObj.getStartingPoint()) {\n    return {\n      id: level.id,\n      score: levelObj.getStartingPoint(),\n      delta: 0\n    };\n  }\n  return level;\n}\n\nfunction MoreStats({ stats, metadata }: { stats: PlayerExtendedStats; metadata: PlayerMetadata }) {\n  return (\n    <>\n      <StatItem label=\"最高等级\">{LevelWithDelta.getTag(metadata.max_level)}</StatItem>\n      <StatItem label=\"最高分数\">{LevelWithDelta.formatAdjustedScore(fixMaxLevel(metadata.max_level))}</StatItem>\n      <StatItem label=\"最大连庄\">{stats.最大连庄 || 0}</StatItem>\n      <StatItem label=\"一发率\" description=\"一发局数 / 立直和了局数\">\n        {formatPercent(stats.一发率 || 0)}\n      </StatItem>\n      <StatItem label=\"里宝率\" description=\"中里宝局数 / 立直和了局数\">\n        {formatPercent(stats.里宝率 || 0)}\n      </StatItem>\n      <StatItem label=\"被炸率\" description=\"被炸庄（满贯或以上）次数 / 被自摸次数\">\n        {formatPercent(stats.被炸率 || 0)}\n      </StatItem>\n      <StatItem label=\"平均被炸点数\" description=\"被炸庄（满贯或以上）点数 / 次数\">\n        {stats.平均被炸点数 || 0}\n      </StatItem>\n      <StatItem label=\"放铳时立直率\" description=\"放铳时立直次数 / 放铳次数\">\n        {formatPercent(stats.放铳时立直率 || 0)}\n      </StatItem>\n      <StatItem label=\"放铳时副露率\" description=\"放铳时副露次数 / 放铳次数\">\n        {formatPercent(stats.放铳时副露率 || 0)}\n      </StatItem>\n      <StatItem label=\"立直后放铳率\" description=\"放铳时立直次数 / 立直次数\">\n        {formatPercent(stats.立直后放铳率 || 0)}\n      </StatItem>\n      <StatItem label=\"副露后放铳率\" description=\"放铳时副露次数 / 副露次数\">\n        {formatPercent(stats.副露后放铳率 || 0)}\n      </StatItem>\n      <StatItem label=\"立直后和牌率\" description=\"立直后和牌次数 / 立直次数\">\n        {formatPercent(stats.立直后和牌率 || 0)}\n      </StatItem>\n      <StatItem label=\"副露后和牌率\" description=\"副露后和牌次数 / 副露次数\">\n        {formatPercent(stats.副露后和牌率 || 0)}\n      </StatItem>\n      <StatItem label=\"立直后流局率\" description=\"立直后流局次数 / 立直次数\">\n        {formatPercent(stats.立直后流局率 || 0)}\n      </StatItem>\n      <StatItem label=\"副露后流局率\" description=\"副露后流局次数 / 副露次数\">\n        {formatPercent(stats.副露后流局率 || 0)}\n      </StatItem>\n    </>\n  );\n}\nfunction BasicStats({ metadata }: { metadata: PlayerMetadata }) {\n  return (\n    <>\n      <StatItem label=\"记录场数\">{metadata.count}</StatItem>\n      <StatItem label=\"记录等级\">{LevelWithDelta.getTag(metadata.level)}</StatItem>\n      <StatItem label=\"记录分数\">{LevelWithDelta.formatAdjustedScore(metadata.level)}</StatItem>\n      <ExtendedStatsViewAsync metadata={metadata} view={PlayerExtendedStatsView} />\n      <StatItem label=\"平均顺位\">{metadata.avg_rank.toFixed(3)}</StatItem>\n      <StatItem label=\"被飞率\">{formatPercent(metadata.negative_rate)}</StatItem>\n      <EstimatedStableLevel metadata={metadata} />\n    </>\n  );\n}\nfunction LuckStats({ stats }: { stats: PlayerExtendedStats }) {\n  return (\n    <>\n      <StatItem label=\"役满\" description=\"和出役满次数\">\n        {stats.役满 || 0}\n      </StatItem>\n      <StatItem label=\"累计役满\" description=\"和出累计役满次数\">\n        {stats.累计役满 || 0}\n      </StatItem>\n      <StatItem label=\"最大累计番数\" description=\"和出的最大番数（不含役满役）\">\n        {stats.最大累计番数 || 0}\n      </StatItem>\n      <StatItem label=\"流满\" description=\"流满次数\">\n        {stats.流满 || 0}\n      </StatItem>\n      <StatItem label=\"两立直\" description=\"两立直次数\">\n        {stats.W立直 || 0}\n      </StatItem>\n      <StatItem label=\"平均起手向听\">{formatFixed3(stats.平均起手向听)}</StatItem>\n    </>\n  );\n}\nfunction formatFanSummary(count: number, 役满: number): string {\n  if (役满) {\n    if (役满 === 1) {\n      return \"役满\";\n    }\n    return `${役满} 倍役满`;\n  }\n  let result = `${count} 番`;\n  if (count >= 13) {\n    result += \" - 累计役满\";\n  } else if (count >= 11) {\n    result += \" - 三倍满\";\n  } else if (count >= 8) {\n    result += \" - 倍满\";\n  } else if (count >= 6) {\n    result += \" - 跳满\";\n  } else if (count === 5) {\n    result += \" - 满贯\";\n  }\n  return result;\n}\nfunction formatFan(count: number, 役满: number): string {\n  if (役满) {\n    if (役满 === 1) {\n      return \"役满\";\n    }\n    return `${役满} 倍役满`;\n  }\n  return `${count} 番`;\n}\nfunction LargestLost({ stats, metadata }: { stats: PlayerExtendedStats; metadata: PlayerMetadata }) {\n  if (!stats.最近大铳) {\n    return <p className=\"text-center\">无满贯或以上大铳</p>;\n  }\n  return (\n    <div>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"d-flex justify-content-between font-weight-bold\"\n        href={GameRecord.getRecordLink(stats.最近大铳.id, metadata.id)}\n      >\n        <span>\n          {formatFanSummary(sum(stats.最近大铳.fans.map(x => x.count)), sum(stats.最近大铳.fans.map(x => x.役满)))}\n        </span>\n        <span>{GameRecord.formatFullStartTime(stats.最近大铳.start_time)}</span>\n      </a>\n      <dl className=\"row mt-2\">\n        {stats.最近大铳.fans.map(x => (\n          <StatItem key={x.label} label={x.label}>\n            {formatFan(x.count, x.役满)}\n          </StatItem>\n        ))}\n      </dl>\n    </div>\n  );\n}\nfunction PlayerStats({ metadata }: { metadata: PlayerMetadata }) {\n  const [page, setPage] = useState(0);\n  useEffect(() => {\n    ReactTooltipPromise.then(x => x.rebuild());\n  }, [page]);\n  return (\n    <>\n      <nav className=\"nav nav-pills mb-3 mt-3\">\n        <button onClick={() => setPage(0)} className={clsx(\"nav-link\", page === 0 && \"active\")}>\n          基本数据\n        </button>\n        <button onClick={() => setPage(1)} className={clsx(\"nav-link\", page === 1 && \"active\")}>\n          更多数据\n        </button>\n        <button onClick={() => setPage(2)} className={clsx(\"nav-link\", page === 2 && \"active\")}>\n          血统\n        </button>\n        <button onClick={() => setPage(3)} className={clsx(\"nav-link\", page === 3 && \"active\")}>\n          最近大铳\n        </button>\n      </nav>\n      <dl className=\"row font-xs-adjust\">\n        {page === 0 && <BasicStats metadata={metadata} />}\n        {page === 1 && <ExtendedStatsViewAsync metadata={metadata} view={MoreStats} />}\n        {page === 2 && <ExtendedStatsViewAsync metadata={metadata} view={LuckStats} />}\n      </dl>\n      {page === 3 && <ExtendedStatsViewAsync metadata={metadata} view={LargestLost} />}\n    </>\n  );\n}\n\nexport default function PlayerDetails() {\n  const dataAdapter = useDataAdapter();\n  const metadata = dataAdapter.getMetadata<PlayerMetadata>();\n  useEffect(() => {\n    ReactTooltipPromise.then(x => x.rebuild());\n  });\n  useEffect(triggerRelayout, [!!metadata]);\n  if (!metadata || !metadata.nickname) {\n    return <Loading />;\n  }\n  return (\n    <div>\n      <Helmet>\n        <title>{metadata.nickname}</title>\n      </Helmet>\n      <h2 className=\"text-center\">玩家：{metadata.nickname}</h2>\n      <div className=\"row mt-4\">\n        <div className=\"col-md-8\">\n          <h3 className=\"text-center mb-4\">最近走势</h3>\n          <RecentRankChart dataAdapter={dataAdapter} playerId={metadata.id} aspect={6} />\n          <PlayerStats metadata={metadata} />\n        </div>\n        <div className=\"col-md-4\">\n          <h3 className=\"text-center mb-4\">累计战绩</h3>\n          <RankRateChart metadata={metadata} />\n        </div>\n      </div>\n      <PlayerDetailsSettings showLevel={true} />\n      <ReactTooltip effect=\"solid\" multiline={true} place=\"top\" />\n    </div>\n  );\n}\n"],"sourceRoot":""}