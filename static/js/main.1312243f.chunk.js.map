{"version":3,"sources":["components/layout/container.tsx","components/misc/alert.tsx","components/app/appHeader.tsx","components/form/checkboxGroup.tsx","utils/dataSource.ts","utils/constants.ts","utils/index.ts","components/form/datePicker.tsx","components/form/formRow.tsx","components/app/gameRecordDataController.tsx","components/app/player.tsx","components/app/gameRecords.tsx","components/app/index.tsx","index.tsx"],"names":["Container","_ref","_ref$title","title","undefined","_ref$children","children","_ref$fluid","fluid","react_default","a","createElement","className","concat","Alert","_ref$className","_ref$type","type","_ref$container","container","React","Fragment","_ref$stateName","stateName","stateKey","_useState","useState","localStorage","getItem","_useState2","Object","slicedToArray","closed","setClosed","useEffect","setItem","Cont","role","data-dismiss","aria-label","onClick","event","preventDefault","setTimeout","window","dispatchEvent","UIEvent","aria-hidden","AppHeader","container_Container","href","CheckboxGroup","_ref$items","items","_ref$checkedItems","checkedItems","_ref$groupKey","groupKey","_ref$onChange","onChange","selectedItems","Set","map","x","key","selectedItemKeys","setSelectedItemKeys","setSelected","isSelected","has","newSet","add","delete","filter","item","id","value","checked","target","htmlFor","label","GameMode","DATA_ROOT","API_ROOT","PLAYER_RANKS","DataProvider","date","itemsPerChunk","arguments","length","classCallCheck","this","_date","_count","_chunks","_itemsPerChunk","_filterPredicate","_filteredIndices","_filterResultCache","moment","startOf","createClass","_apiGet2","asyncToGenerator","regenerator_default","mark","_callee","path","resp","wrap","_context","prev","next","fetch","sent","ok","json","abrupt","stop","_x2","apply","predicate","updateFilteredIndices","count","numShownItems","indices","i","chunk","Math","floor","Promise","push","game","result","uuid","_triggerFullLoad","getCount","_getCount","_callee3","_this","_context3","_callee2","_context2","_apiGet","valueOf","getCountMaybeSync","index","mappedIndex","_mapItemIndex","chunkNumber","_this2","skipPreload","then","innerIndex","_getChunk","preload","requestedIndex","reversed","_getChunk2","_callee4","chunkIndex","_context4","_loadChunk","_x3","numChunks","ceil","_loadChunk2","_callee5","_context5","console","warn","_x4","eventTargetReducer","func","withStore","_cachedEventTargetReducer","currentTarget","DatePicker","_ref$initialDate","initialDate","_","_ref$min","min","_ref$max","max","_useReducer","useReducer","toDate","Date","_useReducer2","handleChange","format","FormRow","MODE_CHECKBOXES","keys","String","getKeySet","dateToProviderKey","toString","loadingPlaceholder","loading","DummyDataAdapter","DataAdapter","provider","onDataUpdate","_provider","_onDataUpdate","_triggeredRequest","promise","_callHook","bind","maybeCount","_installHook","getUnfilteredCountSync","isItemLoaded","GameRecordDataController","_ref$setData","setData","_useState3","defineProperty","dataProviders","dataProvider","setDate","_useState5","_useState6","dataAdapter","setDataAdapter","_useReducer3","trim","toLowerCase","_useReducer4","searchText","updateSearchTextFromEvent","_useReducer5","_useReducer6","selectedModes","setSelectedItems","setFilterPredicate","size","modeId","players","some","player","nickname","indexOf","adapter","cancelUpdateHook","formRow_FormRow","Player","t","_ref$player","level","score","accountId","isTop","levelId","realId","majorRank","minorRank","getLevelTag","formatTime","unix","renderPlayers","player_Player","toConsumableArray","GameRecords","_ref$scrollerProps","scrollerProps","_useState4","data","isScrolling","onChildScroll","scrollTop","height","ref","registerChild","es","disableHeight","_ref2","width","autoHeight","rowCount","rowGetter","_ref3","rowHeight","matchMedia","matches","headerHeight","onScroll","rowClassName","_ref4","noRowsRenderer","getUnfilteredCount","dataKey","cellRenderer","_ref5","cellData","_ref6","rowData","flexGrow","_ref7","_ref8","App","rootElement","document","getElementById","render","react","app"],"mappings":"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","file":"static/js/main.1312243f.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\";\r\n\r\nexport const Container = ({ title = undefined, children = undefined as ReactNode, fluid = false }) => (\r\n  <div className={`my-5 container${fluid ? \"-fluid\" : \"\"}`}>\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-12\">\r\n        {title && <h2 className=\"mb-4\">{title}</h2>}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import { useState, useEffect, ReactNode } from \"react\";\r\nimport React from \"react\";\r\nimport { ReactComponentLike } from \"prop-types\";\r\n\r\nexport function Alert({\r\n  className = \"\",\r\n  type = \"info\",\r\n  container = React.Fragment as ReactComponentLike,\r\n  stateName = \"\",\r\n  children = undefined as ReactNode\r\n}) {\r\n  const stateKey = `alertState_${stateName}`;\r\n  const [closed, setClosed] = useState(\r\n    () => stateName && !!localStorage.getItem(stateKey)\r\n  );\r\n  useEffect(() => {\r\n    if (stateName && closed) {\r\n      localStorage.setItem(stateKey, \"true\");\r\n    }\r\n  }, [closed, stateName, stateKey]);\r\n  if (closed) {\r\n    return null;\r\n  }\r\n  const Cont = container;\r\n  return (\r\n    <Cont>\r\n      <div\r\n        className={`alert alert-${type} alert-dismissible fade show ${className}`}\r\n        role=\"alert\"\r\n      >\r\n        {children}\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n          onClick={event => {\r\n            event.preventDefault();\r\n            setClosed(true);\r\n            setTimeout(function() {\r\n              window.dispatchEvent(new UIEvent(\"resize\"));\r\n            }, 1000);\r\n          }}\r\n        >\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n      </div>\r\n    </Cont>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { Alert } from \"../misc/alert\";\r\n\r\nexport function AppHeader() {\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <h1>雀魂牌谱屋</h1>\r\n      </Container>\r\n      <Alert container={Container} stateName=\"topNote\">\r\n        <h4>说明</h4>\r\n        <ul>\r\n          <li>本页面由第三方维护，与雀魂官方无关。</li>\r\n          <li>记录包含雀魂国服四人半庄段位战玉之间及王座之间的牌谱。</li>\r\n          <li>\r\n            正常情况下全部对局都会被记录，但不排除因网络问题遗漏部分对局的情况。另 2019 年 10 月 10 日前因程序 Bug\r\n            每天晚间可能遗漏掉 10% ~ 20% 的对局，此 Bug 目前已经修复。\r\n          </li>\r\n          <li>页面不是实时更新，对局一般会在结束后二十分钟内出现。</li>\r\n          <li>\r\n            如有问题或建议，请戳 <a href=\"mailto:i@sapika.ch\">SAPikachu (i@sapika.ch)</a> 或{\" \"}\r\n            <a href=\"https://github.com/SAPikachu/amae-koromo/\">提交 Issue</a>。\r\n          </li>\r\n        </ul>\r\n      </Alert>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport interface CheckboxItem {\r\n  key: string;\r\n  label: string;\r\n};\r\n\r\nexport function CheckboxGroup({\r\n  items = [] as CheckboxItem[],\r\n  checkedItems = [] as CheckboxItem[],\r\n  groupKey = \"default\",\r\n  onChange = (selectedItems: CheckboxItem[]) => {},\r\n}) {\r\n  const [selectedItemKeys, setSelectedItemKeys] = useState(() => new Set(checkedItems.map(x => x.key)));\r\n  const setSelected = function(key: string, isSelected: boolean) {\r\n    if (isSelected && selectedItemKeys.has(key)) {\r\n      return;\r\n    }\r\n    if (!isSelected && !selectedItemKeys.has(key)) {\r\n      return;\r\n    }\r\n    const newSet = new Set(selectedItemKeys);\r\n    if (isSelected) {\r\n      newSet.add(key);\r\n    } else {\r\n      newSet.delete(key);\r\n    }\r\n    setSelectedItemKeys(newSet);\r\n    onChange(items.filter(x => newSet.has(x.key)));\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {items.map(item => (\r\n        <div className=\"form-check form-check-inline\" key={item.key}>\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            id={`CG_${groupKey}_${item.key}`}\r\n            value={item.key}\r\n            checked={selectedItemKeys.has(item.key)}\r\n            onChange={event => setSelected(item.key, event.target.checked)}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor={`CG_${groupKey}_${item.key}`}>\r\n            {item.label}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import moment from \"moment\";\r\n\r\nimport { DATA_ROOT, API_ROOT } from \"./constants\";\r\n\r\nexport const PLAYER_RANKS = \"初士杰豪圣魂\";\r\n\r\nexport enum GameMode {\r\n  王座 = 16,\r\n  玉 = 12,\r\n}\r\nexport interface PlayerRecord {\r\n  accountId: number;\r\n  nickname: string;\r\n  level: number;\r\n  score: number;\r\n}\r\nexport interface GameRecord {\r\n  modeId: GameMode;\r\n  uuid: string;\r\n  startTime: number;\r\n  endTime: number;\r\n  players: PlayerRecord[];\r\n}\r\ninterface CouchDbViewRow<T> {\r\n  id: string;\r\n  key: any;\r\n  value: T;\r\n}\r\ninterface CouchDbViewResponse<T> {\r\n  total_rows: number;\r\n  offset: number;\r\n  rows: CouchDbViewRow<T>[];\r\n}\r\n\r\nconst DATA_CACHE_MS = 120000;\r\nexport async function fetchGameRecords(date: moment.MomentInput): Promise<GameRecord[]> {\r\n  const dateString = moment(date).format(\"YYMMDD\");\r\n  const isToday = moment(date).isSame(moment(), \"day\");\r\n  const cacheTag = `gameRecord${isToday ? \"Today\" : dateString}`;\r\n  const timestamp = new Date().getTime();\r\n  const lastUpdateTimestamp = parseInt(sessionStorage.lastUpdateTimestamp || \"0\", 10);\r\n  const cacheExpired = isToday && timestamp > lastUpdateTimestamp + DATA_CACHE_MS;\r\n  if (cacheExpired) {\r\n    sessionStorage.removeItem(cacheTag);\r\n    sessionStorage.setItem(\"lastUpdateTimestamp\", timestamp.toString());\r\n  }\r\n  if (sessionStorage[cacheTag]) {\r\n    return Promise.resolve(JSON.parse(sessionStorage[cacheTag]));\r\n  }\r\n  try {\r\n    const resp = await fetch(`${DATA_ROOT}records/${dateString}.json?t=${cacheTag}`);\r\n    const ret = Object.values(await resp.json()) as GameRecord[];\r\n    ret.sort((a, b) => b.endTime - a.endTime);\r\n    const cacheData = JSON.stringify(ret);\r\n    try {\r\n      sessionStorage.setItem(cacheTag, cacheData);\r\n    } catch (e) {\r\n      sessionStorage.clear();\r\n      sessionStorage.setItem(cacheTag, cacheData);\r\n    }\r\n    return ret;\r\n  } catch (e) {\r\n    return [];\r\n  }\r\n}\r\ntype FilterPredicate = ((record: GameRecord) => boolean) | null;\r\nexport class DataProvider {\r\n  _date: moment.Moment;\r\n  _count: number | Promise<number> | null;\r\n  _chunks: (GameRecord[] | Promise<GameRecord[]>)[];\r\n  _itemsPerChunk: number;\r\n  _filterPredicate: FilterPredicate;\r\n  _filteredIndices: number[] | null;\r\n  _filterResultCache: { [uuid: string]: boolean };\r\n\r\n  constructor(date: moment.MomentInput, itemsPerChunk = 100) {\r\n    this._date = moment(date).startOf(\"day\");\r\n    this._count = null;\r\n    this._chunks = [];\r\n    this._itemsPerChunk = itemsPerChunk;\r\n    this._filterPredicate = null;\r\n    this._filteredIndices = null;\r\n    this._filterResultCache = {};\r\n  }\r\n  async _apiGet<T>(path: string) {\r\n    const resp = await fetch(API_ROOT + path);\r\n    if (!resp.ok) {\r\n      throw resp;\r\n    }\r\n    return (await resp.json()) as T;\r\n  }\r\n  setFilterPredicate(predicate: FilterPredicate) {\r\n    this._filterPredicate = predicate;\r\n    this._filterResultCache = {};\r\n    this.updateFilteredIndices();\r\n  }\r\n  updateFilteredIndices() {\r\n    this._filteredIndices = null;\r\n    if (!this._filterPredicate) {\r\n      return;\r\n    }\r\n    const count = this._count;\r\n    if (typeof count !== \"number\") {\r\n      return;\r\n    }\r\n    let numShownItems = 0;\r\n    const indices = [];\r\n    for (let i = 0; i < count; i++) {\r\n      const chunk = this._chunks[Math.floor(i / this._itemsPerChunk)];\r\n      if (!chunk || chunk instanceof Promise) {\r\n        indices.push(i);\r\n        continue;\r\n      }\r\n      const game = chunk[i % this._itemsPerChunk];\r\n      let result = this._filterResultCache[game.uuid];\r\n      if (result === undefined) {\r\n        this._filterResultCache[game.uuid] = result = this._filterPredicate(game);\r\n      }\r\n      if (result) {\r\n        indices.push(i);\r\n        numShownItems++;\r\n      }\r\n    }\r\n    this._filteredIndices = indices;\r\n    if (numShownItems < 10) {\r\n      this._triggerFullLoad();\r\n    }\r\n  }\r\n  getCountMaybeSync(): number | Promise<number> {\r\n    if (this._count === null) {\r\n      return this.getCount();\r\n    }\r\n    return this._filteredIndices ? this._filteredIndices.length : this._count;\r\n  }\r\n  async getCount(): Promise<number> {\r\n    if (this._count === null) {\r\n      this._count = (async () => {\r\n        const resp = await this._apiGet<{ count: number }>(`count/${this._date.valueOf()}`);\r\n        this._count = resp.count;\r\n        this.updateFilteredIndices();\r\n        return this.getCountMaybeSync();\r\n      })();\r\n    }\r\n    return this.getCountMaybeSync();\r\n  }\r\n  getUnfilteredCountSync(): number | null {\r\n    if (typeof this._count !== \"number\") {\r\n      return null;\r\n    }\r\n    return this._count;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    const mappedIndex = this._mapItemIndex(index);\r\n    if (mappedIndex === null) {\r\n      return false;\r\n    }\r\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\r\n    return !!this._chunks[chunkNumber] && !(this._chunks[chunkNumber] instanceof Promise);\r\n  }\r\n  getItem(index: number, skipPreload = false): GameRecord | Promise<GameRecord> {\r\n    const mappedIndex = this._mapItemIndex(index);\r\n    if (mappedIndex === null) {\r\n      return this.getCount().then(() => this.getItem(index));\r\n    }\r\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\r\n    const innerIndex = mappedIndex % this._itemsPerChunk;\r\n    const chunk = this._chunks[chunkNumber];\r\n    if (!chunk || chunk instanceof Promise) {\r\n      return this._getChunk(chunkNumber).then(chunk => chunk[innerIndex]);\r\n    }\r\n    if (!skipPreload && !this._filteredIndices) {\r\n      this.preload(index + this._itemsPerChunk);\r\n    }\r\n    return chunk[innerIndex];\r\n  }\r\n  preload(index: number) {\r\n    const count = this.getCountMaybeSync();\r\n    if (count instanceof Promise) {\r\n      return;\r\n    }\r\n    if (index >= count) {\r\n      return;\r\n    }\r\n    this.getItem(index, true);\r\n  }\r\n  _mapItemIndex(requestedIndex: number): number | null {\r\n    const count = this.getCountMaybeSync();\r\n    if (count instanceof Promise) {\r\n      return null;\r\n    }\r\n    if (requestedIndex < 0) {\r\n      return null;\r\n    }\r\n    // Descending order\r\n    const reversed = count - requestedIndex - 1;\r\n    if (reversed < 0) {\r\n      return null;\r\n    }\r\n    return this._filteredIndices ? this._filteredIndices[reversed] : reversed;\r\n  }\r\n  async _getChunk(chunkIndex: number): Promise<GameRecord[]> {\r\n    if (!this._chunks[chunkIndex]) {\r\n      this._chunks[chunkIndex] = this._loadChunk(chunkIndex);\r\n    }\r\n    return this._chunks[chunkIndex];\r\n  }\r\n  _triggerFullLoad() {\r\n    const count = this.getCountMaybeSync();\r\n    if (typeof count !== \"number\") {\r\n      return;\r\n    }\r\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\r\n    for (let i = 0; i < numChunks; i++) {\r\n      if (this._chunks[i]) {\r\n        continue;\r\n      }\r\n      this._getChunk(i);\r\n    }\r\n  }\r\n  async _loadChunk(chunkIndex: number): Promise<GameRecord[]> {\r\n    const count = await this.getCount();\r\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\r\n    if (!numChunks) {\r\n      return [];\r\n    }\r\n    if (chunkIndex >= numChunks) {\r\n      console.warn(`Loading out-of-index chunk: ${chunkIndex}, number of items: ${this._count}`);\r\n      return [];\r\n    }\r\n    const chunk = await this._apiGet<GameRecord[]>(\r\n      `games/${this._date.valueOf()}?skip=${this._itemsPerChunk * chunkIndex}&limit=${this._itemsPerChunk}&tag=${\r\n        chunkIndex === numChunks - 1 ? count : \"\"\r\n      }`,\r\n    );\r\n    if (chunk.length < this._itemsPerChunk && chunkIndex < numChunks - 1) {\r\n      console.warn(\"Unexpected number of items in chunk:\", chunk.length);\r\n    }\r\n    this._chunks[chunkIndex] = chunk;\r\n    this.updateFilteredIndices();\r\n    return chunk;\r\n  }\r\n}\r\n","export const DATA_ROOT = \"https://d2ek5tscv4zquv.cloudfront.net/\";\r\nexport const API_ROOT = `${DATA_ROOT}api/`;\r\n","import { PLAYER_RANKS } from \"./dataSource\";\r\nimport { SyntheticEvent } from \"react\";\r\n\r\nexport function getLevelTag(levelId: number) {\r\n  const realId = levelId % 10000;\r\n  const majorRank = Math.floor(realId / 100);\r\n  const minorRank = realId % 100;\r\n  const label = PLAYER_RANKS[majorRank - 1];\r\n  if (majorRank === PLAYER_RANKS.length) {\r\n    return label;\r\n  }\r\n  return label + minorRank;\r\n}\r\n\r\ninterface WithEventTargetReducer<T> {\r\n  _cachedEventTargetReducer?: (_: T) => any;\r\n}\r\nexport function eventTargetReducer<TElem extends EventTarget, TEvent extends SyntheticEvent<TElem>>(\r\n  func: NonNullable<(_: TElem) => any>,\r\n): NonNullable<(_: TEvent) => any> {\r\n  const withStore = func as WithEventTargetReducer<TEvent>;\r\n  if (!withStore._cachedEventTargetReducer) {\r\n    withStore._cachedEventTargetReducer = (event: TEvent) => func(event.currentTarget);\r\n  }\r\n  return withStore._cachedEventTargetReducer;\r\n}\r\n","import React from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport { useReducer, useEffect } from \"react\";\r\nimport { eventTargetReducer } from \"../../utils\";\r\n\r\nexport function DatePicker({\r\n  initialDate = undefined as Date | undefined,\r\n  onChange = (_: Date) => {},\r\n  className = \"\",\r\n  min = undefined as moment.MomentInput,\r\n  max = moment() as moment.MomentInput,\r\n}) {\r\n  const [date, handleChange] = useReducer((_, target: HTMLInputElement) => moment(target.value, \"YYYY-MM-DD\").toDate(), initialDate || new Date());\r\n  useEffect(() => onChange(date), [date, onChange]);\r\n  return (\r\n    <input\r\n      className={className}\r\n      type=\"date\"\r\n      value={moment(date).format(\"YYYY-MM-DD\")}\r\n      min={min ? moment(min).format(\"YYYY-MM-DD\") : undefined}\r\n      max={max ? moment(max).format(\"YYYY-MM-DD\") : undefined}\r\n      onChange={eventTargetReducer(handleChange)}\r\n    />\r\n  );\r\n}\r\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const FormRow = ({ title = \"\", children = undefined as ReactNode }) => (\r\n  <div className=\"form-group row\">\r\n    <label className=\"col-sm-2 col-form-label\">{title}</label>\r\n    <div className=\"col-sm-10\">{children}</div>\r\n  </div>\r\n);\r\n","import { useState, useEffect, useReducer, useCallback } from \"react\";\r\nimport React from \"react\";\r\n\r\nimport { FormRow, DatePicker, CheckboxGroup, CheckboxItem } from \"../form\";\r\nimport { fetchGameRecords, GameMode, GameRecord, DataProvider } from \"../../utils/dataSource\";\r\nimport { eventTargetReducer } from \"../../utils\";\r\nimport moment from \"moment\";\r\n\r\nconst MODE_CHECKBOXES = Object.keys(GameMode)\r\n  .filter(x => typeof GameMode[x as keyof typeof GameMode] !== \"string\")\r\n  .map(x => ({\r\n    key: String(GameMode[x as keyof typeof GameMode]),\r\n    label: x,\r\n  }));\r\n\r\nconst getKeySet = (items: CheckboxItem[]) => new Set(items.map(x => x.key));\r\n\r\nconst dateToProviderKey = (date: moment.MomentInput) =>\r\n  moment(date)\r\n    .startOf(\"day\")\r\n    .valueOf()\r\n    .toString();\r\n\r\ninterface ItemLoadingPlaceholder {\r\n  loading: boolean;\r\n}\r\n\r\nconst loadingPlaceholder = { loading: true };\r\n\r\nexport interface IDataAdapter {\r\n  getCount(): number;\r\n  getUnfilteredCount(): number;\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder;\r\n  isItemLoaded(index: number): boolean;\r\n}\r\n\r\nexport class DummyDataAdapter implements IDataAdapter {\r\n  getCount(): number {\r\n    return 0;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return 0;\r\n  }\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder {\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nclass DataAdapter implements IDataAdapter {\r\n  _provider: DataProvider;\r\n  _onDataUpdate: () => void;\r\n  _triggeredRequest: boolean;\r\n\r\n  constructor(provider: DataProvider, onDataUpdate = () => {}) {\r\n    this._provider = provider;\r\n    this._onDataUpdate = onDataUpdate;\r\n    this._triggeredRequest = false;\r\n  }\r\n  _installHook(promise: Promise<any>) {\r\n    if (this._triggeredRequest) {\r\n      return;\r\n    }\r\n    this._triggeredRequest = true;\r\n    promise.then(this._callHook.bind(this));\r\n  }\r\n  _callHook() {\r\n    this._onDataUpdate();\r\n  }\r\n  getCount(): number {\r\n    const maybeCount = this._provider.getCountMaybeSync();\r\n    if (maybeCount instanceof Promise) {\r\n      this._installHook(maybeCount);\r\n      return 0;\r\n    }\r\n    return maybeCount;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return this._provider.getUnfilteredCountSync() || 0;\r\n  }\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder {\r\n    if (this._provider.isItemLoaded(index)) {\r\n      return this._provider.getItem(index) as GameRecord;\r\n    }\r\n    if (!this._triggeredRequest) {\r\n      this._installHook(this._provider.getItem(index) as Promise<GameRecord>);\r\n    }\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    if (index < 0) {\r\n      return false;\r\n    }\r\n    return this._provider.isItemLoaded(index);\r\n  }\r\n  cancelUpdateHook() {\r\n    this._onDataUpdate = () => {};\r\n  }\r\n}\r\n\r\nexport function GameRecordDataController({\r\n  initialDate = undefined as Date | undefined,\r\n  setData = (_: IDataAdapter) => {},\r\n}) {\r\n  [initialDate] = useState(() => initialDate || new Date()); // Set default value and remember\r\n  const [dataProviders] = useState(() => ({ [dateToProviderKey(initialDate)]: new DataProvider(initialDate) }));\r\n  const [dataProvider, setDate] = useReducer((_, date: Date) => {\r\n    const key = dateToProviderKey(date);\r\n    if (!dataProviders[key]) {\r\n      dataProviders[key] = new DataProvider(date);\r\n    }\r\n    return dataProviders[key];\r\n  }, dataProviders[dateToProviderKey(initialDate)]);\r\n  const [dataAdapter, setDataAdapter] = useState(() => new DataAdapter(dataProvider));\r\n  const [searchText, updateSearchTextFromEvent] = useReducer(\r\n    (_, target: HTMLInputElement) => target.value.trim().toLowerCase(),\r\n    \"\",\r\n  );\r\n  const [selectedModes, setSelectedItems] = useReducer((_, selectedItems) => getKeySet(selectedItems), null, () =>\r\n    getKeySet(MODE_CHECKBOXES),\r\n  );\r\n  useEffect(\r\n    () =>\r\n      dataProvider.setFilterPredicate(\r\n        searchText || selectedModes.size < MODE_CHECKBOXES.length\r\n          ? game => {\r\n              if (!selectedModes.has(game.modeId.toString())) {\r\n                return false;\r\n              }\r\n              if (searchText && !game.players.some(player => player.nickname.toLowerCase().indexOf(searchText) > -1)) {\r\n                return false;\r\n              }\r\n              return true;\r\n            }\r\n          : null,\r\n      ),\r\n    [selectedModes, searchText, dataProvider],\r\n  );\r\n  useEffect(() => {\r\n    let adapter: DataAdapter | null = null;\r\n    function onDataUpdate() {\r\n      if (adapter) {\r\n        adapter.cancelUpdateHook();\r\n      }\r\n      adapter = new DataAdapter(dataProvider, onDataUpdate);\r\n      setDataAdapter(adapter);\r\n    }\r\n    onDataUpdate();\r\n    return () => (adapter ? adapter.cancelUpdateHook() : undefined);\r\n  }, [dataProvider, selectedModes, searchText]);\r\n  useEffect(() => setData(dataAdapter), [setData, dataAdapter]);\r\n  return (\r\n    <React.Fragment>\r\n      <FormRow title=\"日期\">\r\n        <DatePicker min=\"2019-08-23\" className=\"form-control\" initialDate={initialDate} onChange={setDate} />\r\n      </FormRow>\r\n      <FormRow title=\"查找玩家\">\r\n        <input type=\"text\" className=\"form-control\" onChange={eventTargetReducer(updateSearchTextFromEvent)} />\r\n      </FormRow>\r\n      <FormRow>\r\n        <CheckboxGroup items={MODE_CHECKBOXES} checkedItems={MODE_CHECKBOXES} onChange={setSelectedItems} />\r\n      </FormRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { getLevelTag } from \"../../utils\";\r\nimport { GameRecord, PlayerRecord } from \"../../utils/dataSource\";\r\n\r\nconst encodeAccountId = (t: number) => 1358437 + ((7 * t + 1117113) ^ 86216345);\r\n\r\nexport const Player = function({\r\n  player: { nickname, level, score, accountId },\r\n  game: { uuid },\r\n  isTop,\r\n}: {\r\n  player: PlayerRecord;\r\n  game: GameRecord;\r\n  isTop: boolean;\r\n}) {\r\n  return (\r\n    <div className={`player ${isTop && \"font-weight-bold\"}`}>\r\n      <a href={`https://www.majsoul.com/1/?paipu=${uuid}_a${encodeAccountId(accountId)}`} target=\"_blank\">\r\n        [{getLevelTag(level)}] {nickname} {score !== undefined && `[${score}]`}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport React from \"react\";\r\nimport { Table, Column, WindowScrollerChildProps, AutoSizer } from \"react-virtualized\";\r\nimport moment from \"moment\";\r\n\r\nimport { GameRecordDataController, DummyDataAdapter, IDataAdapter } from \"./gameRecordDataController\";\r\nimport { GameRecord, GameMode } from \"../../utils/dataSource\";\r\nimport { Player } from \"./player\";\r\n\r\nconst formatTime = (x: number) => (x ? moment.unix(x).format(\"HH:mm\") : null);\r\n\r\nconst renderPlayers = (game: GameRecord | null | undefined) =>\r\n  game && game.players ? (\r\n    <div className=\"row no-gutters\">\r\n      {game.players.map(x => (\r\n        <div key={x.accountId} className=\"col-12 col-md-6 pr-1\">\r\n          <Player game={game} player={x} isTop={x.score === Math.max(...game.players.map(x => x.score))} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  ) : null;\r\n\r\nexport function GameRecords({\r\n  initialDate = undefined as Date | undefined,\r\n  scrollerProps = {} as WindowScrollerChildProps,\r\n}) {\r\n  [initialDate] = useState(() => initialDate || new Date()); // Set default value and remember\r\n  const [data, setData] = useState(new DummyDataAdapter() as IDataAdapter);\r\n  const { isScrolling, onChildScroll, scrollTop, height } = scrollerProps;\r\n  return (\r\n    <React.Fragment>\r\n      <GameRecordDataController initialDate={initialDate} setData={setData} />\r\n      <div ref={scrollerProps.registerChild as any}>\r\n        <AutoSizer disableHeight>\r\n          {({ width }) => (\r\n            <Table\r\n              autoHeight\r\n              rowCount={data.getCount()}\r\n              rowGetter={({ index }) => data.getItem(index)}\r\n              rowHeight={window.matchMedia(\"(min-width: 768px)\").matches ? 70 : 140}\r\n              headerHeight={50}\r\n              width={width}\r\n              height={height}\r\n              isScrolling={isScrolling}\r\n              onScroll={onChildScroll}\r\n              scrollTop={scrollTop}\r\n              rowClassName={({ index }) => (index >= 0 && !data.isItemLoaded(index) ? \"loading\" : \"\")}\r\n              noRowsRenderer={() => (data.getUnfilteredCount() ? null : <p className=\"text-center\">加载中...</p>)}\r\n            >\r\n              <Column dataKey=\"modeId\" label=\"等级\" cellRenderer={({ cellData }) => GameMode[cellData]} width={40} />\r\n              <Column\r\n                dataKey=\"players\"\r\n                label=\"玩家\"\r\n                cellRenderer={({ rowData }) => (rowData ? renderPlayers(rowData) : null)}\r\n                width={120}\r\n                flexGrow={1}\r\n              />\r\n              <Column\r\n                dataKey=\"startTime\"\r\n                label=\"开始\"\r\n                cellRenderer={({ cellData }) => formatTime(cellData)}\r\n                width={40}\r\n              />\r\n              <Column dataKey=\"endTime\" label=\"结束\" cellRenderer={({ cellData }) => formatTime(cellData)} width={40} />\r\n            </Table>\r\n          )}\r\n        </AutoSizer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { WindowScroller } from \"react-virtualized\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { AppHeader } from \"./appHeader\";\r\nimport { GameRecords } from \"./gameRecords\";\r\n\r\nfunction App() {\r\n  return (\r\n    <WindowScroller>\r\n      {scrollerProps => (\r\n        <>\r\n          <AppHeader />\r\n          <Container>\r\n            <GameRecords scrollerProps={scrollerProps} />\r\n          </Container>\r\n        </>\r\n      )}\r\n    </WindowScroller>\r\n  );\r\n}\r\nexport default App;\r\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-virtualized/styles.css\";\nimport \"./styles.css\";\n\nimport App from \"./components/app\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}