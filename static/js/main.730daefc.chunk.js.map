{"version":3,"sources":["utils/dataSource.ts","components/layout/container.tsx","components/misc/alert.tsx","components/app/appHeader.tsx","components/app/maintenance.tsx","components/app/index.tsx","index.tsx","utils/constants.ts","components/form/checkboxGroup.tsx","components/form/datePicker.tsx","components/form/index.tsx","utils/index.ts","components/misc/loading.tsx","utils/dataTypes.ts","components/gameRecords/routeSync.tsx","components/gameRecords/filterPanel.tsx","components/gameRecords/playerSearch.tsx","components/gameRecords/routes.tsx","components/gameRecords/dataAdapterProvider.tsx","components/form/formRow.tsx","components/misc/scroller.tsx","components/gameRecords/model.tsx","components/gameRecords/modeSelector.tsx"],"names":["onMaintenance","setMaintenanceHandler","handler","apiGet","path","a","fetch","API_ROOT","resp","ok","json","data","maintenance","Promise","searchPlayer","prefix","limit","trim","encodeURIComponent","ListingDataLoader","date","_date","this","dayjs","startOf","valueOf","skip","cacheTag","PlayerDataLoader","playerId","startDate","endDate","mode","_playerId","_startDate","_endDate","_mode","result","_getDatePath","_getParams","then","stats","extended_stats","extendedStats","ListingDataProvider","Object","freeze","create","DataProviderImpl","PlayerDataProvider","undefined","endOf","loader","itemsPerChunk","_loader","_metadata","_countPromise","_chunks","_itemsPerChunk","_filterPredicate","_filteredIndices","_filterResultCache","predicate","updateFilteredIndices","metadata","getMetadataSync","count","numShownItems","numLoadedItems","indices","i","chunk","Math","floor","push","game","uuid","_triggerFullLoad","length","getCount","getCountMaybeSync","getMetadata","console","log","Error","resolve","setTimeout","index","mappedIndex","_mapItemIndex","chunkNumber","skipPreload","getItem","innerIndex","_getChunk","preload","requestedIndex","reversed","chunkIndex","_loadChunk","numChunks","ceil","warn","getRecords","toString","Container","title","children","fluid","className","Alert","type","container","React","Fragment","stateName","closable","stateKey","useState","localStorage","closed","setClosed","useEffect","setItem","Cont","role","data-dismiss","aria-label","onClick","event","preventDefault","triggerRelayout","aria-hidden","AppHeader","to","TITLE_PREFIX","href","MaintenanceHandler","msg","setMsg","Helmet","Loadable","loading","App","rootElement","document","getElementById","render","API_ROOT_PROD","DATE_MIN","CheckboxGroup","props","items","groupKey","selectedItemKeys","onChange","setSelected","key","isSelected","has","newSet","Set","map","x","add","delete","isChecked","selectedItemKey","item","id","name","value","checked","currentTarget","htmlFor","label","DatePicker","min","max","handleChange","useCallback","e","format","requestAnimationFrame","window","dispatchEvent","UIEvent","scrollToTop","scrollTo","formatPercent","toFixed","NOT_FINISHED","notFinished","useAsync","maybePromise","fulfilledValue","setFulfilledValue","Loading","size","GameMode","LEVEL_MAX_POINTS","LEVEL_PENALTY","RANK_DELTA","MODE_DELTA","RANK_LABELS","RANK_COLORS","LEVEL_ALLOWED_MODES","玉","王座","GameRecord","keys","filter","getRankIndexByPlayer","rec","player","accountId","sortedPlayers","players","sort","b","score","getPlayerRankLabel","getPlayerRankColor","encodeAccountId","t","formatFullStartTime","startTime","getRecordLink","trailer","parseInt","calculateDeltaPoint","rank","level","includePenalty","getPenaltyPoint","Level","levelId","_majorRank","_minorRank","realId","other","includes","getMaxPoint","majorRank","minorRank","maxPoints","getNextLevel","getStartingPoint","getPreviousLevel","getAdjustedLevel","getTag","formatAdjustedScore","getLevelTag","LevelWithDelta","obj","formatAdjustedScoreWithTag","delta","PlayerMetadata","calculateExpectedGamePoint","rankDeltaPoints","rank_avg_score","rankWeightedPoints","point","rank_rates","expectedGamePoint","reduce","estimateStableLevel","lastPositiveLevel","abs","isAllowedMode","prevLevel","estimateStableLevel2","parseOptionalDate","s","defaultValue","ModelBuilders","params","selectedMode","version","listing","isValid","searchText","search","RouteSync","view","useParams","useModel","model","updateModel","location","useLocation","state","pendingRouteUpdate","pathname","modelResult","newModel","Model","toPlain","newPath","generatePath","fromPlain","DEFAULT_DATE","FilterPanel","updateSearchTextFromEvent","setMode","setDate","playerSearchCache","NUM_RESULTS_SHOWN","NUM_FETCH","normalizeName","toLowerCase","PlayerSearchResult","setVersion","useMemo","cachedResult","normalizedPrefix","isExactMatch","slice","findRawResultFromCache","mayHaveMore","filteredPlayers","forEach","nickname","startsWith","isLoading","cancelled","debounceToken","Date","getTime","clearTimeout","generatePlayerPathById","PlayerSearch","PlayerDetails","GameRecordTable","PLAYER_PATH","PATH","genPath","Routes","exact","showFullTime","showStartEnd","loadingPlaceholder","DUMMY_DATA_ADAPTER","noop","DataAdapter","provider","onDataUpdate","_provider","_onDataUpdate","_triggeredRequest","promise","_callHook","catch","isError","maybeCount","_installHook","getUnfilteredCountSync","isItemLoaded","hook","DataAdapterContext","createContext","useDataAdapter","useContext","Consumer","DataAdapterProvider","dataProviders","searchPredicate","memoFunc","memoDeps","needPredicate","modeId","some","indexOf","usePredicate","dataProvider","getProviderKey","createProvider","dataAdapter","setDataAdapter","refreshDataAdapter","removeExtraParams","setFilterPredicate","adapter","cancelUpdateHook","setUpdateHook","Provider","FormRow","inline","ScrollerContext","useScrollerProps","Scroller","scrollerProps","DEFAULT_MODEL","ModelContext","isSameDateValue","d1","d2","isSame","ModelProvider","useReducer","oldModel","newProps","isChanged","normalizeUpdate","MODE_CHECKBOXES","String","ModeSelector","unshift"],"mappings":"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","file":"static/js/main.730daefc.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/camelcase */\r\n/* eslint-disable @typescript-eslint/no-use-before-define */\r\n/* eslint-disable no-use-before-define */\r\nimport dayjs from \"dayjs\";\r\n\r\nimport { API_ROOT } from \"./constants\";\r\nimport { GameRecord, Metadata, PlayerMetadata, PlayerMetadataLite, PlayerExtendedStats } from \"./dataTypes\";\r\n\r\nexport * from \"./dataTypes\";\r\n\r\nlet onMaintenance: (msg: string) => void = () => {};\r\n\r\nexport function setMaintenanceHandler(handler: (msg: string) => void) {\r\n  onMaintenance = handler;\r\n}\r\n\r\nasync function apiGet<T>(path: string) {\r\n  const resp = await fetch(API_ROOT + path);\r\n  if (!resp.ok) {\r\n    throw resp;\r\n  }\r\n  const data = await resp.json();\r\n  if (data.maintenance) {\r\n    onMaintenance(data.maintenance);\r\n    return new Promise(() => {}) as Promise<T>; // Freeze all other components\r\n  }\r\n  return data as T;\r\n}\r\n\r\nexport async function searchPlayer(prefix: string, limit = 20): Promise<PlayerMetadataLite[]> {\r\n  prefix = prefix.trim();\r\n  if (!prefix) {\r\n    return [];\r\n  }\r\n  return apiGet<PlayerMetadataLite[]>(`search_player/${encodeURIComponent(prefix)}?limit=${limit}`);\r\n}\r\n\r\nexport async function getExtendedStats(\r\n  playerId: number,\r\n  startDate?: dayjs.ConfigType,\r\n  endDate?: dayjs.ConfigType,\r\n  mode = \"\"\r\n): Promise<PlayerExtendedStats> {\r\n  let datePath = \"\";\r\n  if (startDate) {\r\n    datePath += `/${dayjs(startDate).valueOf()}`;\r\n    if (endDate) {\r\n      datePath += `/${dayjs(endDate).valueOf()}`;\r\n    }\r\n  }\r\n  return await apiGet<PlayerExtendedStats>(`player_extended_stats/${playerId}${datePath}?mode=${mode}`);\r\n}\r\n\r\ninterface DataLoader<T extends Metadata> {\r\n  getMetadata(): Promise<T>;\r\n  getRecords(skip: number, limit: number, cacheTag?: string): Promise<GameRecord[]>;\r\n}\r\n\r\nclass ListingDataLoader implements DataLoader<Metadata> {\r\n  _date: dayjs.Dayjs;\r\n  constructor(date: dayjs.ConfigType) {\r\n    this._date = dayjs(date).startOf(\"day\");\r\n  }\r\n  async getMetadata(): Promise<Metadata> {\r\n    return await apiGet<Metadata>(`count/${this._date.valueOf()}`);\r\n  }\r\n  async getRecords(skip: number, limit: number, cacheTag = \"\"): Promise<GameRecord[]> {\r\n    return await apiGet<GameRecord[]>(`games/${this._date.valueOf()}?skip=${skip}&limit=${limit}&tag=${cacheTag}`);\r\n  }\r\n}\r\n\r\nclass PlayerDataLoader implements DataLoader<PlayerMetadata> {\r\n  _playerId: string;\r\n  _startDate?: dayjs.Dayjs;\r\n  _endDate?: dayjs.Dayjs;\r\n  _mode: string;\r\n  constructor(playerId: string, startDate?: dayjs.Dayjs, endDate?: dayjs.Dayjs, mode = \"\") {\r\n    this._playerId = playerId;\r\n    this._startDate = startDate;\r\n    this._endDate = endDate;\r\n    this._mode = mode;\r\n  }\r\n  _getDatePath(): string {\r\n    let result = \"\";\r\n    if (this._startDate) {\r\n      result += `/${this._startDate.valueOf()}`;\r\n      if (this._endDate) {\r\n        result += `/${this._endDate.valueOf()}`;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  _getParams(): string {\r\n    return `${this._playerId}${this._getDatePath()}?mode=${this._mode}`;\r\n  }\r\n  async getMetadata(): Promise<PlayerMetadata> {\r\n    return await apiGet<PlayerMetadata>(`player_stats/${this._getParams()}`).then(stats => {\r\n      stats.extended_stats = apiGet<PlayerExtendedStats>(`player_extended_stats/${this._getParams()}`).then(\r\n        extendedStats => (stats.extended_stats = extendedStats)\r\n      );\r\n      return stats;\r\n    });\r\n  }\r\n  async getRecords(skip: number, limit: number, cacheTag = \"\"): Promise<GameRecord[]> {\r\n    return await apiGet<GameRecord[]>(\r\n      `player_records/${this._playerId}${this._getDatePath()}?skip=${skip}&limit=${limit}&mode=${\r\n        this._mode\r\n      }&tag=${cacheTag}`\r\n    );\r\n  }\r\n}\r\n\r\nexport type FilterPredicate = ((record: GameRecord) => boolean) | null;\r\nexport type ListingDataProvider = DataProviderImpl<ListingDataLoader>;\r\nexport const ListingDataProvider = Object.freeze({\r\n  create(date: dayjs.ConfigType): ListingDataProvider {\r\n    return new DataProviderImpl<ListingDataLoader>(new ListingDataLoader(date));\r\n  }\r\n});\r\nexport type PlayerDataProvider = DataProviderImpl<PlayerDataLoader>;\r\nexport const PlayerDataProvider = Object.freeze({\r\n  create(\r\n    playerId: string,\r\n    startDate: dayjs.ConfigType | null,\r\n    endDate: dayjs.ConfigType | null,\r\n    mode: string\r\n  ): PlayerDataProvider {\r\n    return new DataProviderImpl<PlayerDataLoader>(\r\n      new PlayerDataLoader(\r\n        playerId,\r\n        startDate ? dayjs(startDate).startOf(\"day\") : undefined,\r\n        endDate ? dayjs(endDate).endOf(\"day\") : undefined,\r\n        mode\r\n      )\r\n    );\r\n  }\r\n});\r\nexport type DataProvider = ListingDataProvider | PlayerDataProvider;\r\nclass DataProviderImpl<\r\n  TLoader extends DataLoader<TMetadata>,\r\n  TMetadata extends Metadata = TLoader extends DataLoader<infer T> ? T : Metadata\r\n> {\r\n  _loader: TLoader;\r\n  _metadata: TMetadata | Promise<TMetadata> | null;\r\n  _countPromise: Promise<number> | null;\r\n  _chunks: (GameRecord[] | Promise<GameRecord[]>)[];\r\n  _itemsPerChunk: number;\r\n  _filterPredicate: FilterPredicate;\r\n  _filteredIndices: number[] | null;\r\n  _filterResultCache: { [uuid: string]: boolean };\r\n\r\n  constructor(loader: TLoader, itemsPerChunk = 100) {\r\n    this._loader = loader;\r\n    this._metadata = null;\r\n    this._countPromise = null;\r\n    this._chunks = [];\r\n    this._itemsPerChunk = itemsPerChunk;\r\n    this._filterPredicate = null;\r\n    this._filteredIndices = null;\r\n    this._filterResultCache = {};\r\n  }\r\n  setFilterPredicate(predicate: FilterPredicate) {\r\n    if (this._filterPredicate === predicate) {\r\n      return;\r\n    }\r\n    this._filterPredicate = predicate;\r\n    this._filterResultCache = {};\r\n    this.updateFilteredIndices();\r\n  }\r\n  updateFilteredIndices() {\r\n    this._filteredIndices = null;\r\n    if (!this._filterPredicate) {\r\n      return;\r\n    }\r\n    const metadata = this.getMetadataSync();\r\n    if (!metadata) {\r\n      return;\r\n    }\r\n    const count = metadata.count;\r\n    let numShownItems = 0;\r\n    let numLoadedItems = 0;\r\n    const indices = [];\r\n    for (let i = 0; i < count; i++) {\r\n      const chunk = this._chunks[Math.floor(i / this._itemsPerChunk)];\r\n      if (!chunk || chunk instanceof Promise) {\r\n        indices.push(i);\r\n        continue;\r\n      }\r\n      numLoadedItems++;\r\n      const game = chunk[i % this._itemsPerChunk];\r\n      let result = this._filterResultCache[game.uuid];\r\n      if (result === undefined) {\r\n        this._filterResultCache[game.uuid] = result = this._filterPredicate(game);\r\n      }\r\n      if (result) {\r\n        indices.push(i);\r\n        numShownItems++;\r\n      }\r\n    }\r\n    this._filteredIndices = indices;\r\n    if (numShownItems < 10 && numLoadedItems >= this._itemsPerChunk) {\r\n      this._triggerFullLoad();\r\n    }\r\n  }\r\n  getMetadataSync(): TMetadata | null {\r\n    return this._metadata && !(this._metadata instanceof Promise) ? this._metadata : null;\r\n  }\r\n  getCountMaybeSync(): number | Promise<number> {\r\n    const metadata = this.getMetadataSync();\r\n    if (metadata) {\r\n      return this._filteredIndices ? this._filteredIndices.length : metadata.count;\r\n    }\r\n    return this.getCount();\r\n  }\r\n  async getCount(): Promise<number> {\r\n    const metadata = this.getMetadataSync();\r\n    if (metadata) {\r\n      return this.getCountMaybeSync();\r\n    }\r\n    if (!this._metadata) {\r\n      this._metadata = this._loader.getMetadata().then(metadata => {\r\n        if (!metadata) {\r\n          console.log(\"No metadata returned\");\r\n          throw new Error(\"No metadata returned\");\r\n        }\r\n        this._metadata = metadata;\r\n        this.updateFilteredIndices();\r\n        this._countPromise = null;\r\n        return metadata;\r\n      });\r\n    }\r\n    if (this._countPromise) {\r\n      return this._countPromise;\r\n    }\r\n    this._countPromise = Promise.resolve(this._metadata)\r\n      .then(() => new Promise(resolve => setTimeout(resolve, 100)))\r\n      .then(() => this.getCountMaybeSync());\r\n    return this._countPromise;\r\n  }\r\n  getUnfilteredCountSync(): number | null {\r\n    const metadata = this.getMetadataSync();\r\n    if (!metadata) {\r\n      return null;\r\n    }\r\n    return metadata.count;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    const mappedIndex = this._mapItemIndex(index);\r\n    if (mappedIndex === null) {\r\n      return false;\r\n    }\r\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\r\n    return !!this._chunks[chunkNumber] && !(this._chunks[chunkNumber] instanceof Promise);\r\n  }\r\n  getItem(index: number, skipPreload = false): GameRecord | Promise<GameRecord | null> {\r\n    const mappedIndex = this._mapItemIndex(index);\r\n    if (mappedIndex === null) {\r\n      return this.getCount().then(count => {\r\n        if (index > count - 1 || this._mapItemIndex(index) === null) {\r\n          return null;\r\n        }\r\n        return this.getItem(index);\r\n      });\r\n    }\r\n    const chunkNumber = Math.floor(mappedIndex / this._itemsPerChunk);\r\n    const innerIndex = mappedIndex % this._itemsPerChunk;\r\n    const chunk = this._chunks[chunkNumber];\r\n    if (!chunk || chunk instanceof Promise) {\r\n      return this._getChunk(chunkNumber).then(chunk => chunk[innerIndex]);\r\n    }\r\n    if (!skipPreload && !this._filteredIndices) {\r\n      this.preload(index + this._itemsPerChunk);\r\n    }\r\n    return chunk[innerIndex];\r\n  }\r\n  preload(index: number) {\r\n    const count = this.getCountMaybeSync();\r\n    if (count instanceof Promise) {\r\n      return;\r\n    }\r\n    if (index >= count) {\r\n      return;\r\n    }\r\n    this.getItem(index, true);\r\n  }\r\n  _mapItemIndex(requestedIndex: number): number | null {\r\n    const count = this.getCountMaybeSync();\r\n    if (count instanceof Promise) {\r\n      return null;\r\n    }\r\n    if (requestedIndex < 0) {\r\n      return null;\r\n    }\r\n    // Descending order\r\n    const reversed = count - requestedIndex - 1;\r\n    if (reversed < 0) {\r\n      return null;\r\n    }\r\n    return this._filteredIndices ? this._filteredIndices[reversed] : reversed;\r\n  }\r\n  async _getChunk(chunkIndex: number): Promise<GameRecord[]> {\r\n    if (!this._chunks[chunkIndex]) {\r\n      this._chunks[chunkIndex] = this._loadChunk(chunkIndex);\r\n    }\r\n    return this._chunks[chunkIndex];\r\n  }\r\n  _triggerFullLoad() {\r\n    const count = this.getCountMaybeSync();\r\n    if (typeof count !== \"number\") {\r\n      return;\r\n    }\r\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\r\n    for (let i = 0; i < numChunks; i++) {\r\n      if (this._chunks[i]) {\r\n        continue;\r\n      }\r\n      this._getChunk(i);\r\n    }\r\n  }\r\n  async _loadChunk(chunkIndex: number): Promise<GameRecord[]> {\r\n    const count = await this.getCount();\r\n    const numChunks = Math.ceil(count / this._itemsPerChunk);\r\n    if (!numChunks) {\r\n      return [];\r\n    }\r\n    if (chunkIndex >= numChunks) {\r\n      console.warn(`Loading out-of-index chunk: ${chunkIndex}, number of items: ${count}`);\r\n      return [];\r\n    }\r\n    const chunk = await this._loader.getRecords(\r\n      this._itemsPerChunk * chunkIndex,\r\n      this._itemsPerChunk,\r\n      chunkIndex === numChunks - 1 ? count.toString() : \"\"\r\n    );\r\n    if (chunk.length < this._itemsPerChunk && chunkIndex < numChunks - 1) {\r\n      console.warn(\"Unexpected number of items in chunk:\", chunk.length);\r\n    }\r\n    this._chunks[chunkIndex] = chunk;\r\n    this.updateFilteredIndices();\r\n    return chunk;\r\n  }\r\n}\r\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const Container = ({ title = undefined, children = undefined as ReactNode, fluid = false }) => (\r\n  <div className={`my-5 container${fluid ? \"-fluid\" : \"\"}`}>\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-12\">\r\n        {title && <h2 className=\"mb-4\">{title}</h2>}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import { useState, useEffect, ReactNode } from \"react\";\r\nimport React from \"react\";\r\nimport { ReactComponentLike } from \"prop-types\";\r\nimport { triggerRelayout } from \"../../utils/index\";\r\n\r\nexport function Alert({\r\n  className = \"\",\r\n  type = \"info\",\r\n  container = React.Fragment as ReactComponentLike,\r\n  stateName = \"\",\r\n  closable = true,\r\n  children = undefined as ReactNode\r\n}) {\r\n  const stateKey = `alertState_${stateName}`;\r\n  const [closed, setClosed] = useState(() => stateName && !!localStorage.getItem(stateKey));\r\n  useEffect(() => {\r\n    if (stateName && closed) {\r\n      localStorage.setItem(stateKey, \"true\");\r\n    }\r\n  }, [closed, stateName, stateKey]);\r\n  if (closed && closable) {\r\n    return null;\r\n  }\r\n  const Cont = container;\r\n  return (\r\n    <Cont>\r\n      <div className={`alert alert-${type} alert-dismissible fade show ${className}`} role=\"alert\">\r\n        {children}\r\n        {closable && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            onClick={event => {\r\n              event.preventDefault();\r\n              setClosed(true);\r\n              triggerRelayout();\r\n            }}\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </Cont>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { Alert } from \"../misc/alert\";\r\nimport { TITLE_PREFIX } from \"../../utils/constants\";\r\n\r\nexport function AppHeader() {\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <h1>\r\n          <Link to=\"/\">{TITLE_PREFIX}</Link>\r\n        </h1>\r\n      </Container>\r\n      <Alert container={Container} stateName=\"topNote\">\r\n        <h4>说明</h4>\r\n        <ul>\r\n          <li>本页面数据由第三方维护，不能绝对保证完整和正确，信息仅供参考，请勿用于不良用途。</li>\r\n          <li>记录包含雀魂国服四人半庄段位战玉之间及王座之间的牌谱。</li>\r\n          <li>对局数据收集从 2019 年 8 月 23 日开始，之前的对局已无法获取。</li>\r\n          <li>\r\n            正常情况下全部对局都会被记录，但不排除因网络问题遗漏部分对局的情况。另 2019 年 10 月 10 日前因程序 Bug\r\n            每天晚间可能遗漏掉 10% ~ 20% 的对局，此 Bug 目前已经修复。\r\n          </li>\r\n          <li>页面不是实时更新，对局一般会在结束后数分钟至数小时内出现。</li>\r\n          <li>\r\n            如有问题或建议，请戳 <a href=\"mailto:i@sapika.ch\">SAPikachu (i@sapika.ch)</a> 或{\" \"}\r\n            <a href=\"https://github.com/SAPikachu/amae-koromo/\">提交 Issue</a>。\r\n          </li>\r\n        </ul>\r\n      </Alert>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from \"react\";\nimport { useState } from \"react\";\n\nimport { Alert } from \"../misc/alert\";\nimport { Container } from \"../layout/container\";\nimport { setMaintenanceHandler } from \"../../utils/dataSource\";\n\nexport function MaintenanceHandler({ children }: { children: React.ReactElement }): React.ReactElement {\n  const [msg, setMsg] = useState(\"\");\n  setMaintenanceHandler(setMsg);\n  if (!msg) {\n    return children;\n  }\n  return (\n    <Alert container={Container} closable={false}>\n      <h4>临时维护公告</h4>\n      <p>{msg}</p>\n    </Alert>\n  );\n}\n","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Loadable from \"react-loadable\";\r\nimport Scroller from \"../misc/scroller\";\r\n\r\nimport { Container } from \"../layout\";\r\nimport { AppHeader } from \"./appHeader\";\r\nimport GameRecords from \"../gameRecords\";\r\nimport { TITLE_PREFIX } from \"../../utils/constants\";\r\nimport { MaintenanceHandler } from \"./maintenance\";\r\n\r\nconst Helmet = Loadable({\r\n  loader: () => import(\"react-helmet\"),\r\n  loading: () => <></>\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Helmet>\r\n        <title>{TITLE_PREFIX}</title>\r\n      </Helmet>\r\n      <MaintenanceHandler>\r\n        <Scroller>\r\n          <AppHeader />\r\n          <Container>\r\n            <GameRecords />\r\n          </Container>\r\n        </Scroller>\r\n      </MaintenanceHandler>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"./styles/bootstrap-custom.scss\";\nimport \"./styles/styles.scss\";\n\nimport App from \"./components/app\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n","import dayjs from \"dayjs\";\r\n\r\nexport const DATA_ROOT = \"https://ak-data-2.sapk.ch/\";\r\nconst API_ROOT_PROD = `${DATA_ROOT}api/`;\r\nconst API_ROOT_TEST = `${DATA_ROOT}api-test/`;\r\nexport const API_ROOT = process.env.NODE_ENV === \"development\" ? API_ROOT_TEST : API_ROOT_PROD;\r\nexport const TITLE_PREFIX = \"雀魂牌谱屋\";\r\nexport const DATE_MIN = dayjs(\"2019-08-23\", \"YYYY-MM-DD\");\r\n","import React from \"react\";\r\n\r\nexport interface CheckboxItem {\r\n  key: string;\r\n  label: string;\r\n}\r\n\r\ntype CommonGroupParams = {\r\n  items: CheckboxItem[];\r\n  groupKey: string;\r\n};\r\ntype CheckboxGroupParams = CommonGroupParams & {\r\n  type: \"checkbox\";\r\n  selectedItemKeys: Set<string> | null;\r\n  onChange: (selectedItemKeys: Set<string>) => void;\r\n};\r\ntype RadioGroupParams = CommonGroupParams & {\r\n  type: \"radio\";\r\n  selectedItemKey: string;\r\n  onChange: (selectedItemKey: string) => void;\r\n};\r\n\r\nexport function CheckboxGroup(\r\n  props: CheckboxGroupParams | RadioGroupParams = {\r\n    type: \"checkbox\",\r\n    items: [],\r\n    groupKey: \"default\",\r\n    selectedItemKeys: null,\r\n    onChange: () => {}\r\n  }\r\n) {\r\n  const { type, items, groupKey } = props;\r\n  const { setSelected, isChecked } = (() => {\r\n    if (props.type === \"checkbox\") {\r\n      const { selectedItemKeys, onChange } = props;\r\n      return {\r\n        setSelected(key: string, isSelected: boolean) {\r\n          if (isSelected && (!selectedItemKeys || selectedItemKeys.has(key))) {\r\n            return;\r\n          }\r\n          if (!isSelected && selectedItemKeys && !selectedItemKeys.has(key)) {\r\n            return;\r\n          }\r\n          const newSet = new Set(selectedItemKeys || items.map(x => x.key));\r\n          if (isSelected) {\r\n            newSet.add(key);\r\n          } else {\r\n            newSet.delete(key);\r\n          }\r\n          onChange(newSet);\r\n        },\r\n        isChecked: (key: string) => !selectedItemKeys || selectedItemKeys.has(key)\r\n      };\r\n    } else {\r\n      const { selectedItemKey, onChange } = props;\r\n      return {\r\n        setSelected(key: string, isSelected: boolean) {\r\n          if (!isSelected) {\r\n            return;\r\n          }\r\n          onChange(key);\r\n        },\r\n        isChecked: (key: string) => selectedItemKey === key\r\n      };\r\n    }\r\n  })();\r\n  return (\r\n    <React.Fragment>\r\n      {items.map(item => (\r\n        <div className=\"form-check form-check-inline\" key={item.key}>\r\n          <input\r\n            className=\"form-check-input\"\r\n            type={type}\r\n            id={`CG_${groupKey}_${item.key}`}\r\n            name={`CG_${groupKey}_${item.key}`}\r\n            value={item.key}\r\n            checked={isChecked(item.key)}\r\n            onChange={event => setSelected(item.key, event.currentTarget.checked)}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor={`CG_${groupKey}_${item.key}`}>\r\n            {item.label}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport dayjs from \"dayjs\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport function DatePicker({\r\n  date = dayjs() as dayjs.ConfigType,\r\n  onChange = (() => {}) as (_: dayjs.Dayjs) => void,\r\n  className = \"\",\r\n  min = 0 as dayjs.ConfigType,\r\n  max = dayjs() as dayjs.ConfigType\r\n}) {\r\n  const handleChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => onChange(dayjs(e.currentTarget.value, \"YYYY-MM-DD\")),\r\n    [onChange]\r\n  );\r\n  return (\r\n    <input\r\n      className={className}\r\n      type=\"date\"\r\n      value={dayjs(date).format(\"YYYY-MM-DD\")}\r\n      min={min ? dayjs(min).format(\"YYYY-MM-DD\") : undefined}\r\n      max={max ? dayjs(max).format(\"YYYY-MM-DD\") : undefined}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n","export * from \"./checkboxGroup\";\r\nexport * from \"./datePicker\";\r\nexport * from \"./formRow\";\r\n","import { useState, useEffect } from \"react\";\r\nexport function triggerRelayout() {\r\n  requestAnimationFrame(() => window.dispatchEvent(new UIEvent(\"resize\")));\r\n  setTimeout(function() {\r\n    window.dispatchEvent(new UIEvent(\"resize\"));\r\n  }, 200);\r\n}\r\nexport function scrollToTop() {\r\n  window.scrollTo(0, 0);\r\n  requestAnimationFrame(() => window.scrollTo(0, 0));\r\n}\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const formatPercent = (x: any) => (x > 0 ? `${(x * 100).toFixed(2)}%` : \"\");\r\n\r\ntype NotFinished = { notFinished: string };\r\nconst NOT_FINISHED = { notFinished: \"yes\" };\r\n\r\nexport function useAsync<T>(maybePromise: T | Promise<T>): T | undefined {\r\n  const [fulfilledValue, setFulfilledValue] = useState<T | NotFinished>(NOT_FINISHED);\r\n  useEffect(() => {\r\n    if (maybePromise instanceof Promise) {\r\n      setFulfilledValue(NOT_FINISHED);\r\n      maybePromise.then(result => setFulfilledValue(result));\r\n    } else {\r\n      setFulfilledValue(maybePromise);\r\n    }\r\n  }, [maybePromise]);\r\n  if (fulfilledValue !== NOT_FINISHED) {\r\n    return fulfilledValue as T;\r\n  }\r\n  return undefined;\r\n}\r\n","import React from \"react\";\n\nexport default function Loading({ size = \"normal\" }: { size?: \"normal\" | \"small\" }) {\n  return (\n    <div className={`d-flex justify-content-center m-${size === \"normal\" ? 5 : 1}`}>\n      <div className={`spinner-border ${size === \"normal\" ? \"\" : \"spinner-border-sm\"}`} role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n}\n","import dayjs from \"dayjs\";\n\nexport const PLAYER_RANKS = \"初士杰豪圣魂\";\nconst LEVEL_MAX_POINTS = [20, 80, 200, 600, 800, 1000, 1200, 1400, 2000, 2800, 3200, 3600, 4000, 6000, 9000];\nconst LEVEL_PENALTY = [0, 0, 0, 20, 40, 60, 80, 100, 120, 165, 180, 195, 210, 225, 240, 255];\nconst RANK_DELTA = [15, 5, -5, -15];\nconst MODE_DELTA = {\n  \"12\": [110, 55, 0, 0],\n  \"16\": [120, 60, 0, 0]\n};\nexport const RANK_LABELS = [\"一位\", \"二位\", \"三位\", \"四位\"];\nexport const RANK_COLORS = [\"#28a745\", \"#17a2b8\", \"#6c757d\", \"#dc3545\"];\n\nexport enum GameMode {\n  王座 = 16,\n  玉 = 12\n}\nconst LEVEL_ALLOWED_MODES: { [key: string]: GameMode[] } = {\n  \"1\": [],\n  \"2\": [],\n  \"3\": [],\n  \"4\": [GameMode.玉],\n  \"5\": [GameMode.玉, GameMode.王座],\n  \"6\": [GameMode.王座]\n};\nexport const NUMBER_OF_GAME_MODE = Object.keys(GameMode).filter(\n  x => typeof GameMode[x as keyof typeof GameMode] === \"number\"\n).length;\n\nexport interface PlayerRecord {\n  accountId: number;\n  nickname: string;\n  level: number;\n  score: number;\n}\nexport interface GameRecord {\n  modeId: GameMode;\n  uuid: string;\n  startTime: number;\n  endTime: number;\n  players: PlayerRecord[];\n}\nexport const GameRecord = Object.freeze({\n  getRankIndexByPlayer(rec: GameRecord, player: number | string | PlayerRecord): number {\n    const playerId = (typeof player === \"object\" ? player.accountId : player).toString();\n    const sortedPlayers = rec.players.map((player, index) => ({ player, index }));\n    sortedPlayers.sort((a, b) => 5 - b.index + b.player.score - (5 - a.index + a.player.score));\n    for (let i = 0; i < sortedPlayers.length; i++) {\n      if (sortedPlayers[i].player.accountId.toString() === playerId) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  getPlayerRankLabel(rec: GameRecord, player: number | string | PlayerRecord): string {\n    return RANK_LABELS[GameRecord.getRankIndexByPlayer(rec, player)] || \"\";\n  },\n  getPlayerRankColor(rec: GameRecord, player: number | string | PlayerRecord): string {\n    return RANK_COLORS[GameRecord.getRankIndexByPlayer(rec, player)];\n  },\n  encodeAccountId: (t: number) => 1358437 + ((7 * t + 1117113) ^ 86216345),\n  formatFullStartTime: (rec: GameRecord) => dayjs(rec.startTime * 1000).format(\"YYYY/M/D HH:mm\"),\n  getRecordLink(rec: GameRecord, player?: PlayerRecord | number | string) {\n    const playerId = typeof player === \"object\" ? player.accountId : player;\n    const trailer = playerId\n      ? `_a${GameRecord.encodeAccountId(typeof playerId === \"number\" ? playerId : parseInt(playerId))}`\n      : \"\";\n    return `https://www.majsoul.com/1/?paipu=${rec.uuid}${trailer}`;\n  }\n});\n\nfunction calculateDeltaPoint(score: number, rank: number, mode: GameMode, level: Level, includePenalty = true): number {\n  let result =\n    Math.ceil((score - 25000) / 1000 + RANK_DELTA[rank]) + MODE_DELTA[mode.toString() as keyof typeof MODE_DELTA][rank];\n  if (rank === 3 && includePenalty) {\n    result -= level.getPenaltyPoint();\n  }\n  /*\n  console.log(\n    `calculateDeltaPoint: score=${score}, rank=${rank}, mode=${mode}, level=${level.getTag()}, result=${result}`\n  );\n  */\n  return result;\n}\n\nexport class Level {\n  _majorRank: number;\n  _minorRank: number;\n  constructor(levelId: number) {\n    const realId = levelId % 10000;\n    this._majorRank = Math.floor(realId / 100);\n    this._minorRank = realId % 100;\n  }\n  isSameMajorRank(other: Level): boolean {\n    return this._majorRank === other._majorRank;\n  }\n  isSame(other: Level): boolean {\n    return this._majorRank === other._majorRank && this._minorRank === other._minorRank;\n  }\n  isAllowedMode(mode: GameMode): boolean {\n    return LEVEL_ALLOWED_MODES[this._majorRank.toString() as keyof typeof LEVEL_ALLOWED_MODES].includes(mode);\n  }\n  getTag(): string {\n    const label = PLAYER_RANKS[this._majorRank - 1];\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return label;\n    }\n    return label + this._minorRank;\n  }\n  getMaxPoint(): number {\n    return LEVEL_MAX_POINTS[(this._majorRank - 1) * 3 + this._minorRank - 1];\n  }\n  getPenaltyPoint(): number {\n    return LEVEL_PENALTY[(this._majorRank - 1) * 3 + this._minorRank - 1];\n  }\n  getStartingPoint(): number {\n    if (this._majorRank === 1) {\n      return 0;\n    }\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return 10000;\n    }\n    return this.getMaxPoint() / 2;\n  }\n  getNextLevel(): Level {\n    if (this._majorRank === PLAYER_RANKS.length) {\n      return this;\n    }\n    let majorRank = this._majorRank;\n    let minorRank = this._minorRank + 1;\n    if (minorRank > 3) {\n      majorRank++;\n      minorRank = 1;\n    }\n    return new Level(majorRank * 100 + minorRank);\n  }\n  getPreviousLevel(): Level {\n    if (this._majorRank === 1 && this._minorRank === 1) {\n      return this;\n    }\n    let majorRank = this._majorRank;\n    let minorRank = this._minorRank - 1;\n    if (minorRank < 1) {\n      majorRank--;\n      minorRank = 3;\n    }\n    return new Level(majorRank * 100 + minorRank);\n  }\n  getAdjustedLevel(score: number): Level {\n    let maxPoints = this.getMaxPoint();\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let level: Level = this;\n    if (maxPoints && score >= maxPoints) {\n      level = this.getNextLevel();\n      maxPoints = level.getMaxPoint();\n      score = level.getStartingPoint();\n    } else if (score < 0) {\n      if (!maxPoints || level._majorRank === 1 || (level._majorRank === 2 && level._minorRank === 1)) {\n        score = 0;\n      } else {\n        level = this.getPreviousLevel();\n        maxPoints = level.getMaxPoint();\n        score = level.getStartingPoint();\n      }\n    }\n    return level;\n  }\n  formatAdjustedScoreWithTag(score: number) {\n    const level = this.getAdjustedLevel(score);\n    return `${level.getTag()} - ${this.formatAdjustedScore(score)}`;\n  }\n  formatAdjustedScore(score: number) {\n    const level = this.getAdjustedLevel(score);\n    return `${level === this ? Math.max(score, 0) : level.getStartingPoint()}${\n      level.getMaxPoint() ? \"/\" + level.getMaxPoint() : \"\"\n    }`;\n  }\n}\nexport function getLevelTag(levelId: number) {\n  return new Level(levelId).getTag();\n}\nexport type LevelWithDelta = {\n  id: number;\n  score: number;\n  delta: number;\n};\nexport const LevelWithDelta = Object.freeze({\n  format(obj: LevelWithDelta): string {\n    return new Level(obj.id).formatAdjustedScoreWithTag(obj.score + obj.delta);\n  },\n  formatAdjustedScore(obj: LevelWithDelta): string {\n    return new Level(obj.id).formatAdjustedScore(obj.score + obj.delta);\n  },\n  getTag(obj: LevelWithDelta): string {\n    return LevelWithDelta.getAdjustedLevel(obj).getTag();\n  },\n  getAdjustedLevel(obj: LevelWithDelta): Level {\n    return new Level(obj.id).getAdjustedLevel(obj.score + obj.delta);\n  }\n});\n\nexport interface Metadata {\n  count: number;\n}\nexport interface PlayerMetadataLite extends Metadata {\n  id: number;\n  nickname: string;\n  level: LevelWithDelta;\n}\nexport interface PlayerMetadata extends PlayerMetadataLite {\n  rank_rates: [number, number, number, number];\n  rank_avg_score: [number, number, number, number];\n  avg_rank: number;\n  negative_rate: number;\n  extended_stats?: PlayerExtendedStats | Promise<PlayerExtendedStats>;\n}\nexport const PlayerMetadata = Object.freeze({\n  calculateExpectedGamePoint(metadata: PlayerMetadata, mode: GameMode, level?: Level, includePenalty = true): number {\n    const rankDeltaPoints = metadata.rank_avg_score.map((score, rank) =>\n      calculateDeltaPoint(score, rank, mode, level || LevelWithDelta.getAdjustedLevel(metadata.level), includePenalty)\n    );\n    const rankWeightedPoints = rankDeltaPoints.map((point, rank) => point * metadata.rank_rates[rank]);\n    const expectedGamePoint = rankWeightedPoints.reduce((a, b) => a + b, 0);\n    /*\n    console.log(rankDeltaPoints);\n    console.log(rankWeightedPoints);\n    console.log(\n      `calculateExpectedGamePoint: mode=${mode}, level=${level ? level.getTag() : \"\"}, result=${expectedGamePoint}`\n    );\n    */\n    return expectedGamePoint;\n  },\n  estimateStableLevel(metadata: PlayerMetadata, mode: GameMode): string {\n    let level = new Level(metadata.level.id);\n    let lastPositiveLevel: Level | undefined = undefined;\n    for (;;) {\n      const expectedGamePoint = PlayerMetadata.calculateExpectedGamePoint(metadata, mode, level);\n      if (Math.abs(expectedGamePoint) < 0.001) {\n        return level.getTag();\n      }\n      if (expectedGamePoint >= 0) {\n        lastPositiveLevel = level;\n        level = level.getNextLevel();\n        if (!level.isAllowedMode(mode)) {\n          return lastPositiveLevel.getTag() + \"+\";\n        }\n        if (level === lastPositiveLevel) {\n          return level.getTag() + \"+\";\n        }\n      } else {\n        if (lastPositiveLevel) {\n          return lastPositiveLevel.getTag();\n        }\n        break;\n      }\n    }\n    if (!level.getMaxPoint()) {\n      // 魂天不会掉段\n      return level.getTag() + \"-\";\n    }\n    for (;;) {\n      const prevLevel = level.getPreviousLevel();\n      if (!prevLevel.isAllowedMode(mode) || prevLevel === level) {\n        return level.getTag() + \"-\";\n      }\n      level = prevLevel;\n      const expectedGamePoint = PlayerMetadata.calculateExpectedGamePoint(metadata, mode, level);\n      if (expectedGamePoint + 0.001 >= 0) {\n        return level.getTag();\n      }\n    }\n  },\n  estimateStableLevel2(metadata: PlayerMetadata, mode: GameMode): string {\n    const estimatedPoints = this.calculateExpectedGamePoint(metadata, mode, undefined, false);\n    const result = estimatedPoints / (metadata.rank_rates[3] * 15) - 10;\n    if (result >= 7) {\n      return `魂${(result - 6).toFixed(2)}`;\n    }\n    if (result >= 4) {\n      return `圣${(result - 3).toFixed(2)}`;\n    }\n    return `豪${result.toFixed(2)}`;\n  }\n});\nexport interface PlayerExtendedStats {\n  id: number;\n  和牌率: number;\n  自摸率: number;\n  默听率: number;\n  放铳率: number;\n  副露率: number;\n  立直率: number;\n  平均打点: number;\n  最大连庄: number;\n  和了巡数: number;\n  平均铳点: number;\n  流局率: number;\n  流听率: number;\n}\n","import React from \"react\";\nimport dayjs from \"dayjs\";\n\nimport { useParams, useLocation, Redirect } from \"react-router\";\nimport { useModel, Model, ModelPlain } from \"./model\";\nimport { generatePath } from \"./routes\";\nimport { useEffect } from \"react\";\nimport { scrollToTop, triggerRelayout } from \"../../utils/index\";\n\ntype ListingRouteParams = {\n  date?: string;\n  mode?: string;\n  search?: string;\n};\n\ntype PlayerRouteParams = {\n  id: string;\n  startDate?: string;\n  endDate?: string;\n  mode?: string;\n};\n\ntype HistoryState = {\n  model: ModelPlain;\n  pathname: string;\n};\n\nfunction parseOptionalDate<T>(s: string | null | undefined, defaultValue: T): dayjs.Dayjs | T {\n  return s ? dayjs(s, \"YYYY-MM-DD\") : defaultValue;\n}\n\nconst ModelBuilders = {\n  player(params: PlayerRouteParams): Model | string {\n    return {\n      type: \"player\",\n      playerId: params.id,\n      startDate: parseOptionalDate(params.startDate, null),\n      endDate: parseOptionalDate(params.endDate, null),\n      selectedMode: params.mode || \"\",\n      version: 0\n    };\n  },\n  listing(params: ListingRouteParams): Model | string {\n    const date = parseOptionalDate(params.date, null);\n    if (date && !date.isValid()) {\n      return \"/\";\n    }\n    return {\n      type: undefined,\n      date: date ? date.startOf(\"day\").valueOf() : null,\n      selectedMode: params.mode || \"\",\n      searchText: params.search || \"\",\n      version: 0\n    };\n  }\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function RouteSync({ view }: { view: keyof typeof ModelBuilders }): React.FunctionComponentElement<any> {\n  const params = useParams();\n  const [model, updateModel] = useModel();\n  const location = useLocation<HistoryState>();\n  useEffect(triggerRelayout, [model.type]);\n  const state = location.state;\n  // console.log(params, model, location, state);\n  if (state && state.model.version === model.version) {\n    delete (model as Model).pendingRouteUpdate;\n    if (location.pathname !== state.pathname) {\n      return <Redirect to={{ pathname: state.pathname, state }} />;\n    }\n    return <></>;\n  }\n  if (!state) {\n    // Navigation\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const modelResult = ModelBuilders[view](params as any);\n    if (typeof modelResult === \"string\") {\n      return <Redirect to={modelResult} />;\n    }\n    const newModel: Model = {\n      ...modelResult,\n      version: model.version\n    };\n    updateModel(newModel);\n    scrollToTop();\n    return (\n      <Redirect\n        to={{ pathname: location.pathname, state: { pathname: location.pathname, model: Model.toPlain(newModel) } }}\n      />\n    );\n  }\n  if (model.pendingRouteUpdate) {\n    // Model updated\n    const newPath = generatePath(model);\n    delete (model as Model).pendingRouteUpdate; // Do not trigger update\n    return <Redirect to={{ pathname: newPath, state: { pathname: newPath, model: Model.toPlain(model) } }} />;\n  } else {\n    const restoredModel = Model.fromPlain(state.model);\n    updateModel(restoredModel);\n    return <></>;\n  }\n}\n","import { useCallback } from \"react\";\r\nimport React from \"react\";\r\n\r\nimport { FormRow, DatePicker } from \"../form\";\r\nimport { useModel } from \"./model\";\r\nimport dayjs from \"dayjs\";\r\nimport { DATE_MIN } from \"../../utils/constants\";\r\nimport { ModeSelector } from \"./modeSelector\";\r\n\r\nconst DEFAULT_DATE = dayjs().startOf(\"day\");\r\n\r\nexport function FilterPanel({ className = \"\" }) {\r\n  const [model, updateModel] = useModel();\r\n  const updateSearchTextFromEvent = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => updateModel({ searchText: e.currentTarget.value }),\r\n    [updateModel]\r\n  );\r\n  const setMode = useCallback((mode: string) => updateModel({ selectedMode: mode }), [updateModel]);\r\n  const setDate = useCallback((date: dayjs.ConfigType) => updateModel({ date }), [updateModel]);\r\n  if (model.type !== undefined) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={className}>\r\n      <FormRow title=\"日期\">\r\n        <DatePicker min={DATE_MIN} date={model.date || DEFAULT_DATE} onChange={setDate} className=\"form-control\" />\r\n      </FormRow>\r\n      <FormRow title=\"查找玩家\">\r\n        <input type=\"text\" className=\"form-control\" value={model.searchText} onChange={updateSearchTextFromEvent} />\r\n      </FormRow>\r\n      <FormRow>\r\n        <ModeSelector mode={model.selectedMode} onChange={setMode} />\r\n      </FormRow>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { useEffect, useState, useMemo } from \"react\";\n\nimport { useModel } from \"./model\";\nimport Loading from \"../misc/loading\";\nimport { PlayerMetadataLite, getLevelTag } from \"../../utils/dataTypes\";\nimport { searchPlayer } from \"../../utils/dataSource\";\nimport { Link } from \"react-router-dom\";\nimport { generatePlayerPathById } from \"./routes\";\n\nconst playerSearchCache = {} as { [prefix: string]: PlayerMetadataLite[] | Promise<PlayerMetadataLite[]> };\nconst NUM_RESULTS_SHOWN = 6;\nconst NUM_FETCH = 20;\n\nconst normalizeName = (s: string) => s.toLowerCase().trim();\n\nfunction findRawResultFromCache(prefix: string): { result: PlayerMetadataLite[]; isExactMatch: boolean } | null {\n  const normalizedPrefix = normalizeName(prefix);\n  prefix = normalizedPrefix;\n  while (prefix) {\n    const players = playerSearchCache[prefix];\n    if (!players || players instanceof Promise) {\n      prefix = prefix.slice(0, prefix.length - 1);\n      continue;\n    }\n    return {\n      isExactMatch: prefix === normalizedPrefix,\n      result: players\n    };\n  }\n  return null;\n}\n\nfunction PlayerSearchResult({ searchText }: { searchText: string }) {\n  const [version, setVersion] = useState(0);\n  const [players, isLoading, mayHaveMore] = useMemo(() => {\n    const cachedResult = findRawResultFromCache(searchText);\n    if (!cachedResult) {\n      return [[], true];\n    }\n    if (cachedResult.isExactMatch) {\n      return [cachedResult.result, false];\n    }\n    const normalizedPrefix = normalizeName(searchText);\n    let mayHaveMore = cachedResult.result.length >= NUM_FETCH;\n    const filteredPlayers = [] as PlayerMetadataLite[];\n    cachedResult.result.forEach(player => {\n      if (normalizeName(player.nickname).startsWith(normalizedPrefix)) {\n        filteredPlayers.push(player);\n      } else if (filteredPlayers.length) {\n        // Result covers all players who have the specified prefix\n        mayHaveMore = false;\n      }\n    });\n    return [filteredPlayers, mayHaveMore && filteredPlayers.length < NUM_RESULTS_SHOWN, mayHaveMore];\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchText, version]);\n  useEffect(() => {\n    const prefix = normalizeName(searchText);\n    if (playerSearchCache[prefix]) {\n      return;\n    }\n    if (!isLoading) {\n      return;\n    }\n    let cancelled = false;\n    let debounceToken: NodeJS.Timeout | undefined = setTimeout(() => {\n      debounceToken = undefined;\n      if (cancelled) {\n        return;\n      }\n      if (playerSearchCache[prefix]) {\n        return;\n      }\n      playerSearchCache[prefix] = searchPlayer(prefix).then(function(players) {\n        playerSearchCache[prefix] = players;\n        if (!cancelled) {\n          setVersion(new Date().getTime());\n        }\n        return players;\n      });\n    }, 500);\n    return () => {\n      cancelled = true;\n      if (debounceToken) {\n        clearTimeout(debounceToken);\n      }\n    };\n  }, [searchText, isLoading]);\n  return (\n    <>\n      <h6 className=\"text-center mb-2\">玩家前缀搜索</h6>\n      <ul className=\"list-unstyled row mb-2\">\n        {players.slice(0, NUM_RESULTS_SHOWN).map(x => (\n          <li key={x.id} className=\"col-6\">\n            <Link to={generatePlayerPathById(x.id)}>\n              <span>\n                [{getLevelTag(x.level.id)}] {x.nickname}\n              </span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      {(isLoading && <Loading size=\"small\" />) ||\n        ((players.length > NUM_RESULTS_SHOWN || mayHaveMore) && (\n          <small className=\"d-block text-center text-muted\">（输入更长名字显示其它结果）</small>\n        ))}\n    </>\n  );\n}\n\nexport function PlayerSearch({ className = \"\" }) {\n  const [model] = useModel();\n  if (\"playerId\" in model || !model.searchText) {\n    return <></>;\n  }\n  return (\n    <div className={className}>\n      <PlayerSearchResult searchText={model.searchText} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Switch, Route, Redirect, generatePath as genPath } from \"react-router-dom\";\n\nimport { Model, ModelProvider } from \"./model\";\nimport dayjs from \"dayjs\";\nimport { RouteSync } from \"./routeSync\";\nimport { DataAdapterProvider } from \"./dataAdapterProvider\";\nimport { FilterPanel } from \"./filterPanel\";\nimport Loadable from \"react-loadable\";\nimport Loading from \"../misc/loading\";\nimport { PlayerSearch } from \"./playerSearch\";\nconst PlayerDetails = Loadable({\n  loader: () => import(\"./playerDetails\"),\n  loading: () => <Loading />\n});\nconst GameRecordTable = Loadable({\n  loader: () => import(\"./table\"),\n  loading: () => <Loading />\n});\n\nconst PLAYER_PATH = \"/player/:id/:mode([0-9]+)?/:startDate(\\\\d{4}-\\\\d{2}-\\\\d{2})?/:endDate(\\\\d{4}-\\\\d{2}-\\\\d{2})?\";\nconst PATH = \"/:date(\\\\d{4}-\\\\d{2}-\\\\d{2})/:mode([0-9]+)?/:search?\";\n\nexport function generatePath(model: Model): string {\n  if (model.type === \"player\") {\n    return genPath(PLAYER_PATH, {\n      id: model.playerId,\n      startDate: model.startDate ? dayjs(model.startDate).format(\"YYYY-MM-DD\") : undefined,\n      endDate: model.endDate ? dayjs(model.endDate).format(\"YYYY-MM-DD\") : undefined,\n      mode: model.selectedMode || undefined\n    });\n  }\n  if (!model.selectedMode && !model.searchText && !model.date) {\n    return \"/\";\n  }\n  return genPath(PATH, {\n    date: dayjs(model.date || new Date()).format(\"YYYY-MM-DD\"),\n    mode: model.selectedMode || undefined,\n    search: model.searchText || undefined\n  });\n}\nexport function generatePlayerPathById(playerId: number | string): string {\n  return generatePath({\n    type: \"player\",\n    playerId: playerId.toString(),\n    startDate: null,\n    endDate: null,\n    selectedMode: \"\",\n    version: 0\n  });\n}\n\nfunction Routes() {\n  return (\n    <ModelProvider>\n      <DataAdapterProvider>\n        <Switch>\n          <Route exact path={PLAYER_PATH}>\n            <RouteSync view=\"player\" />\n            <PlayerDetails />\n            <GameRecordTable showFullTime showStartEnd={false} />\n          </Route>\n          <Route exact path={[\"/\", PATH]}>\n            <RouteSync view=\"listing\" />\n            <div className=\"row\">\n              <FilterPanel className=\"col\" />\n              <PlayerSearch className=\"col-12 col-sm-6 col-md-4\" />\n            </div>\n            <GameRecordTable />\n          </Route>\n          <Route>\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </DataAdapterProvider>\n    </ModelProvider>\n  );\n}\nexport default Routes;\n","import { useState, useEffect, useMemo, useCallback, useContext } from \"react\";\r\nimport React, { ReactChild } from \"react\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport {\r\n  DataProvider,\r\n  GameRecord,\r\n  FilterPredicate,\r\n  ListingDataProvider,\r\n  PlayerDataProvider\r\n} from \"../../utils/dataSource\";\r\nimport { useModel, Model } from \"./model\";\r\nimport { Metadata } from \"../../utils/dataSource\";\r\nimport { generatePath } from \"./routes\";\r\n\r\ninterface ItemLoadingPlaceholder {\r\n  loading: boolean;\r\n}\r\n\r\nconst loadingPlaceholder = { loading: true };\r\n\r\n// eslint-disable-next-line @typescript-eslint/interface-name-prefix\r\nexport interface IDataAdapter {\r\n  getCount(): number;\r\n  getUnfilteredCount(): number;\r\n  getMetadata<T extends Metadata>(): T | null;\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder;\r\n  isItemLoaded(index: number): boolean;\r\n}\r\n\r\nclass DummyDataAdapter implements IDataAdapter {\r\n  getCount(): number {\r\n    return 0;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return 0;\r\n  }\r\n  getMetadata<T extends Metadata>(): T | null {\r\n    return null;\r\n  }\r\n  getItem(): GameRecord | ItemLoadingPlaceholder {\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const DUMMY_DATA_ADAPTER = new DummyDataAdapter() as IDataAdapter;\r\n\r\nconst noop = () => {};\r\n\r\nclass DataAdapter implements IDataAdapter {\r\n  _provider: DataProvider;\r\n  _onDataUpdate: (isError: boolean) => void;\r\n  _triggeredRequest: boolean;\r\n\r\n  constructor(provider: DataProvider, onDataUpdate = noop) {\r\n    this._provider = provider;\r\n    this._onDataUpdate = onDataUpdate;\r\n    this._triggeredRequest = false;\r\n  }\r\n  _installHook<T>(promise: Promise<T>) {\r\n    if (this._triggeredRequest) {\r\n      return;\r\n    }\r\n    this._triggeredRequest = true;\r\n    promise.then(() => this._callHook(false)).catch(() => this._callHook(true));\r\n  }\r\n  _callHook(isError: boolean) {\r\n    this._onDataUpdate(isError);\r\n  }\r\n  getCount(): number {\r\n    const maybeCount = this._provider.getCountMaybeSync();\r\n    if (maybeCount instanceof Promise) {\r\n      this._installHook(maybeCount);\r\n      return 0;\r\n    }\r\n    return maybeCount;\r\n  }\r\n  getUnfilteredCount(): number {\r\n    return this._provider.getUnfilteredCountSync() || 0;\r\n  }\r\n  getMetadata<T extends Metadata>(): T | null {\r\n    return this._provider.getMetadataSync() as T | null;\r\n  }\r\n  getItem(index: number): GameRecord | ItemLoadingPlaceholder {\r\n    if (index >= this.getCount()) {\r\n      return loadingPlaceholder;\r\n    }\r\n    if (this._provider.isItemLoaded(index)) {\r\n      return this._provider.getItem(index) as GameRecord;\r\n    }\r\n    if (!this._triggeredRequest) {\r\n      this._installHook(this._provider.getItem(index) as Promise<GameRecord>);\r\n    }\r\n    return loadingPlaceholder;\r\n  }\r\n  isItemLoaded(index: number): boolean {\r\n    if (index < 0) {\r\n      return false;\r\n    }\r\n    return this._provider.isItemLoaded(index);\r\n  }\r\n  setUpdateHook(hook: () => void) {\r\n    this._onDataUpdate = hook;\r\n  }\r\n  cancelUpdateHook() {\r\n    this._onDataUpdate = noop;\r\n  }\r\n}\r\n\r\nconst DataAdapterContext = React.createContext(DUMMY_DATA_ADAPTER);\r\n\r\nexport const useDataAdapter = () => useContext(DataAdapterContext);\r\nexport const DataAdapterConsumer = DataAdapterContext.Consumer;\r\n\r\nfunction getProviderKey(model: Model): string {\r\n  if (model.type === undefined) {\r\n    return dayjs(model.date || dayjs())\r\n      .startOf(\"day\")\r\n      .valueOf()\r\n      .toString();\r\n  } else if (model.type === \"player\") {\r\n    return generatePath(model);\r\n  }\r\n  throw new Error(\"Unknown model type\");\r\n}\r\n\r\nfunction createProvider(model: Model): DataProvider {\r\n  if (model.type === undefined) {\r\n    return ListingDataProvider.create(model.date || dayjs().startOf(\"day\"));\r\n  }\r\n  if (model.type === \"player\") {\r\n    return PlayerDataProvider.create(model.playerId, model.startDate, model.endDate, model.selectedMode);\r\n  }\r\n  throw new Error(\"Not implemented\");\r\n}\r\n\r\nfunction usePredicate(model: Model): FilterPredicate {\r\n  let memoFunc: () => FilterPredicate = () => null;\r\n  let memoDeps = [null, \"\"];\r\n  if (model.type === undefined) {\r\n    const searchText = (model.searchText || \"\").trim() || \"\";\r\n    const needPredicate = searchText || model.selectedMode;\r\n    memoFunc = () =>\r\n      needPredicate\r\n        ? game => {\r\n            if (model.selectedMode && model.selectedMode !== game.modeId.toString()) {\r\n              return false;\r\n            }\r\n            if (!game.players.some(player => player.nickname.toLowerCase().indexOf(searchText) > -1)) {\r\n              return false;\r\n            }\r\n            return true;\r\n          }\r\n        : null;\r\n    memoDeps = [(model.type === undefined && model.selectedMode) || null, searchText];\r\n  }\r\n  return useMemo(memoFunc, memoDeps);\r\n}\r\n\r\nexport function DataAdapterProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const [model, updateModel] = useModel();\r\n  const [dataProviders] = useState(() => ({} as { [key: string]: DataProvider }));\r\n  const searchPredicate = usePredicate(model);\r\n  const dataProvider = useMemo(() => {\r\n    const key = getProviderKey(model);\r\n    if (!dataProviders[key]) {\r\n      dataProviders[key] = createProvider(model);\r\n    }\r\n    return dataProviders[key];\r\n  }, [model, dataProviders]);\r\n  const [dataAdapter, setDataAdapter] = useState(() => DUMMY_DATA_ADAPTER);\r\n  const refreshDataAdapter = useCallback(\r\n    (isError?: boolean) => {\r\n      if (isError) {\r\n        updateModel(Model.removeExtraParams(model));\r\n        return;\r\n      }\r\n      dataProvider.setFilterPredicate(searchPredicate);\r\n      const adapter = new DataAdapter(dataProvider);\r\n      setDataAdapter(adapter);\r\n    },\r\n    [dataProvider, searchPredicate, model, updateModel]\r\n  );\r\n  useEffect(refreshDataAdapter, [refreshDataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      return () => adapter.cancelUpdateHook();\r\n    }\r\n  }, [dataAdapter]);\r\n  useEffect(() => {\r\n    const adapter = dataAdapter;\r\n    if (adapter instanceof DataAdapter) {\r\n      adapter.setUpdateHook(refreshDataAdapter);\r\n    }\r\n  }, [dataAdapter, refreshDataAdapter]);\r\n  useEffect(() => {\r\n    dataProvider.getCountMaybeSync(); // Preload metadata\r\n  }, [dataProvider]);\r\n  return <DataAdapterContext.Provider value={dataAdapter}>{children}</DataAdapterContext.Provider>;\r\n}\r\n","import React, { ReactNode } from \"react\";\r\n\r\nexport const FormRow = ({ title = \"\", inline = false, children = undefined as ReactNode }) => (\r\n  <div className=\"form-group row\">\r\n    <label className={`col-${inline ? \"lg\" : \"md\"}-2 col-form-label`}>{title}</label>\r\n    <div className={`col-${inline ? \"lg\" : \"md\"}-10 ${inline ? \"form-inline\" : \"\"}`}>{children}</div>\r\n  </div>\r\n);\r\n","import React, { ReactChild, useContext } from \"react\";\r\n\r\nimport { WindowScrollerChildProps } from \"react-virtualized\";\r\nimport { WindowScroller } from \"react-virtualized/dist/es/WindowScroller\";\r\n\r\nconst ScrollerContext = React.createContext<WindowScrollerChildProps>({} as any);\r\n\r\nexport const useScrollerProps = () => useContext(ScrollerContext);\r\n\r\nfunction Scroller({ children }: { children: ReactChild | ReactChild[] }) {\r\n  return (\r\n    <WindowScroller>\r\n      {scrollerProps => <ScrollerContext.Provider value={scrollerProps}>{children}</ScrollerContext.Provider>}\r\n    </WindowScroller>\r\n  );\r\n}\r\nexport default Scroller;\r\n","import dayjs from \"dayjs\";\r\nimport React, { useReducer, useContext, ReactChild } from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\ninterface WithRuntimeInfo {\r\n  version: number;\r\n  pendingRouteUpdate?: boolean;\r\n}\r\nexport interface ListingModel {\r\n  type: undefined;\r\n  date: dayjs.ConfigType | null;\r\n  selectedMode: string;\r\n  searchText: string;\r\n}\r\nexport interface PlayerModel {\r\n  type: \"player\";\r\n  playerId: string;\r\n  startDate: dayjs.ConfigType | null;\r\n  endDate: dayjs.ConfigType | null;\r\n  selectedMode: string;\r\n}\r\nexport type Model = (ListingModel | PlayerModel) & WithRuntimeInfo;\r\ninterface ListingModelPlain {\r\n  type: undefined;\r\n  date: number | null;\r\n  selectedMode: string;\r\n  searchText: string;\r\n}\r\nexport interface PlayerModelPlain {\r\n  type: \"player\";\r\n  playerId: string;\r\n  startDate: number | null;\r\n  endDate: number | null;\r\n  selectedMode: string;\r\n}\r\nexport type ModelPlain = (ListingModelPlain | PlayerModelPlain) & WithRuntimeInfo;\r\nexport const Model = Object.freeze({\r\n  toPlain(model: Model): ModelPlain {\r\n    if (model.type === \"player\") {\r\n      return {\r\n        ...model,\r\n        startDate: model.startDate ? dayjs(model.startDate).valueOf() : null,\r\n        endDate: model.endDate ? dayjs(model.endDate).valueOf() : null\r\n      };\r\n    }\r\n    return {\r\n      ...model,\r\n      type: undefined,\r\n      date: model.date ? dayjs(model.date).valueOf() : null\r\n    };\r\n  },\r\n  fromPlain(model: ModelPlain): ListingModel | PlayerModel {\r\n    if (model.type === \"player\") {\r\n      return model;\r\n    }\r\n    if (model.type === undefined) {\r\n      return {\r\n        type: undefined,\r\n        date: model.date || null,\r\n        searchText: model.searchText || \"\",\r\n        selectedMode: model.selectedMode\r\n      };\r\n    }\r\n    console.warn(\"Unknown model data from location state:\", model);\r\n    // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\r\n    return DEFAULT_MODEL;\r\n  },\r\n  removeExtraParams(model: Model): Model {\r\n    if (model.type === \"player\") {\r\n      return {\r\n        type: \"player\",\r\n        playerId: model.playerId,\r\n        selectedMode: \"\",\r\n        startDate: null,\r\n        endDate: null,\r\n        version: 0\r\n      };\r\n    }\r\n    return {\r\n      type: undefined,\r\n      searchText: \"\",\r\n      selectedMode: \"\",\r\n      date: null,\r\n      version: 0\r\n    };\r\n  }\r\n});\r\ntype ModelUpdate = Partial<ListingModel> | ({ type: \"player\" } & Partial<PlayerModel>);\r\ntype DispatchModelUpdate = (props: ModelUpdate) => void;\r\n\r\nconst DEFAULT_MODEL: ListingModel = { type: undefined, date: null, selectedMode: \"\", searchText: \"\" };\r\nconst ModelContext = React.createContext<[Readonly<Model>, DispatchModelUpdate]>([\r\n  { ...DEFAULT_MODEL, version: 0 },\r\n  () => {}\r\n]);\r\nexport const useModel = () => useContext(ModelContext);\r\n\r\nfunction normalizeUpdate(newProps: ModelUpdate): ModelUpdate {\r\n  if (newProps.type === undefined) {\r\n    if (newProps.date) {\r\n      newProps.date = dayjs(newProps.date).valueOf();\r\n    }\r\n  }\r\n  for (const key of Object.keys(newProps)) {\r\n    if (key !== \"type\" && newProps[key as keyof typeof newProps] === undefined) {\r\n      delete newProps[key as keyof typeof newProps];\r\n    }\r\n  }\r\n  return newProps;\r\n}\r\nfunction isSameDateValue(d1?: dayjs.ConfigType | null, d2?: dayjs.ConfigType | null): boolean {\r\n  if (d1 === d2) {\r\n    return true;\r\n  }\r\n  if (!d1 || !d2) {\r\n    return false;\r\n  }\r\n  return dayjs(d1).isSame(d2, \"day\");\r\n}\r\nfunction isChanged(oldModel: Model, newProps: ModelUpdate): boolean {\r\n  if (oldModel.type !== newProps.type) {\r\n    return true;\r\n  }\r\n  if (newProps.selectedMode !== undefined && newProps.selectedMode !== oldModel.selectedMode) {\r\n    return true;\r\n  }\r\n  if (oldModel.type === undefined && newProps.type === oldModel.type) {\r\n    if (newProps.date !== undefined && !isSameDateValue(newProps.date, oldModel.date)) {\r\n      return true;\r\n    }\r\n    if (newProps.searchText !== undefined && newProps.searchText !== oldModel.searchText) {\r\n      return true;\r\n    }\r\n  }\r\n  if (oldModel.type === \"player\" && newProps.type === oldModel.type) {\r\n    if (newProps.playerId !== undefined && newProps.playerId !== oldModel.playerId) {\r\n      return true;\r\n    }\r\n    if (newProps.startDate !== undefined && !isSameDateValue(oldModel.startDate, newProps.startDate)) {\r\n      return true;\r\n    }\r\n    if (newProps.endDate !== undefined && !isSameDateValue(oldModel.endDate, newProps.endDate)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function ModelProvider({ children }: { children: ReactChild | ReactChild[] }) {\r\n  const location = useLocation();\r\n  const [model, updateModel] = useReducer(\r\n    (oldModel: Model, newProps: ModelUpdate): Model =>\r\n      isChanged(oldModel, newProps)\r\n        ? {\r\n            ...((oldModel.type === newProps.type ? oldModel : {}) as Model),\r\n            ...(normalizeUpdate(newProps) as Model),\r\n            version: oldModel.version + 1,\r\n            pendingRouteUpdate: true\r\n          }\r\n        : oldModel,\r\n    null,\r\n    (): Model => ({\r\n      ...DEFAULT_MODEL,\r\n      ...Model.fromPlain((location.state || {}).model || {}),\r\n      version: new Date().getTime()\r\n    })\r\n  );\r\n  const value: [Model, DispatchModelUpdate] = useMemo(() => [model, updateModel], [model, updateModel]);\r\n  return <ModelContext.Provider value={value}>{children}</ModelContext.Provider>;\r\n}\r\n","import React from \"react\";\n\nimport { CheckboxGroup } from \"../form\";\nimport { GameMode } from \"../../utils/dataSource\";\n\nconst MODE_CHECKBOXES = Object.keys(GameMode)\n  .filter(x => typeof GameMode[x as keyof typeof GameMode] !== \"string\")\n  .map(x => ({\n    key: String(GameMode[x as keyof typeof GameMode]),\n    label: x\n  }));\nMODE_CHECKBOXES.unshift({\n  key: \"\",\n  label: \"全部\"\n});\n\nexport function ModeSelector({ mode, onChange }: { mode: string; onChange: (x: string) => void }) {\n  return (\n    <CheckboxGroup\n      type=\"radio\"\n      groupKey=\"ModeSelector\"\n      items={MODE_CHECKBOXES}\n      selectedItemKey={mode || \"\"}\n      onChange={onChange}\n    />\n  );\n}\n"],"sourceRoot":""}