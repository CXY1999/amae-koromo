{"version":3,"sources":["components/recentHighlight/index.tsx"],"names":["t","i18n","bind","buildEventInfo","cellData","event","fan","役满","sum","map","x","count","length","label","language","title","slice","join","FanStatEntryList","formatFanSummary","COLUMN_EVENTINFO","makeColumn","dataKey","cellRenderer","width","getEventPlayerId","rec","player","RecentHighlight","useTranslation","provider","useMemo","DataProvider","createHightlight","withActivePlayer","alwaysShowDetailLink","columns","COLUMN_GAMEMODE","COLUMN_PLAYERS","COLUMN_FULLTIME"],"mappings":"mHAAA,yIAiBMA,EAAIC,IAAKD,EAAEE,KAAKD,KAEtB,SAASE,EAAT,GAAuD,IAA7BC,EAA4B,EAA5BA,SACxB,IAAKA,EACH,OAAO,KAET,IAAMC,EAAQD,EACd,IAAKC,EAAMC,IAAI,GAAGC,aAChB,OACE,8BACGC,YAAIH,EAAMC,IAAIG,KAAI,SAACC,GAAD,OAAOA,EAAEC,UAD9B,IACuC,kBAAC,IAAD,eACrC,6BACA,kBAAC,IAAD,kCAIN,GAAyB,IAArBN,EAAMC,IAAIM,OAAc,CAC1B,IAAMC,EAAQb,EAAEK,EAAMC,IAAI,GAAGO,OAC7B,MAAsB,OAAlBZ,IAAKa,SACA,0BAAMC,MAAOF,GAAQA,GAE1BA,EAAMD,OAAS,EAEf,0BAAMG,MAAOF,GACVA,EAAMG,MAAM,EAAG,GAChB,6BACCH,EAAMG,MAAM,IAIZH,EACF,OAAyB,IAArBR,EAAMC,IAAIM,OAEjB,0BAAMG,MAAOV,EAAMC,IAAIG,KAAI,SAACC,GAAD,OAAOA,EAAEG,SAAOI,KAAK,OAC9C,kBAAC,IAAD,KAAQZ,EAAMC,IAAI,GAAGO,OACrB,6BACA,kBAAC,IAAD,KAAQR,EAAMC,IAAI,GAAGO,QAIpB,0BAAME,MAAOV,EAAMC,IAAIG,KAAI,SAACC,GAAD,OAAOA,EAAEG,SAAOI,KAAK,OAAQC,mBAAiBC,iBAAiBd,EAAMC,MAGzG,IAAMc,EAAmBC,aAAW,kBAClC,kBAAC,IAAD,CAAQC,QAAQ,QAAQT,MAAO,kBAAC,IAAD,qBAAmBU,aAAcpB,EAAgBqB,MAAO,OADhEH,GAIzB,SAASI,EAAiBC,GACxB,OAAQA,EAA4BrB,MAAMsB,OAG7B,SAASC,IAAmB,IACjC5B,EAAM6B,cAAN7B,EACF8B,EAAWC,mBAAQ,kBAAMC,IAAaC,qBAAoB,IAChE,OACE,oCACE,kBAAC,IAAD,CAAQlB,MAAOf,EAAE,8BACjB,kBAAC,IAAD,CAA2B8B,SAAUA,GACnC,kBAAC,IAAD,CACEI,kBAAgB,EAChBC,sBAAoB,EACpBC,QAAS,CAACC,IAAiBjB,EAAkBkB,YAAeb,GAAmBc","file":"static/js/11.db4b12ce.chunk.js","sourcesContent":["import React, { useMemo } from \"react\";\nimport Helmet from \"react-helmet\";\nimport { DataProvider } from \"../../data/source/records/provider\";\nimport { DataAdapterProviderCustom } from \"../gameRecords/dataAdapterProvider\";\nimport GameRecordTable, {\n  COLUMN_GAMEMODE,\n  COLUMN_PLAYERS,\n  COLUMN_FULLTIME,\n  makeColumn,\n  Column,\n} from \"../gameRecords/table\";\nimport { GameRecord, FanStatEntryList, HighlightEvent, GameRecordWithEvent } from \"../../data/types\";\nimport { TableCellProps } from \"react-virtualized/dist/es/Table\";\nimport { sum } from \"../../utils\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport i18n from \"../../i18n\";\n\nconst t = i18n.t.bind(i18n);\n\nfunction buildEventInfo({ cellData }: TableCellProps) {\n  if (!cellData) {\n    return null;\n  }\n  const event = cellData as HighlightEvent;\n  if (!event.fan[0].役满) {\n    return (\n      <span>\n        {sum(event.fan.map((x) => x.count))} <Trans>番</Trans>\n        <br />\n        <Trans>累计役满</Trans>\n      </span>\n    );\n  }\n  if (event.fan.length === 1) {\n    const label = t(event.fan[0].label);\n    if (i18n.language === \"en\") {\n      return <span title={label}>{label}</span>;\n    }\n    if (label.length > 4) {\n      return (\n        <span title={label}>\n          {label.slice(0, 4)}\n          <br />\n          {label.slice(4)}\n        </span>\n      );\n    }\n    return label;\n  } else if (event.fan.length === 2) {\n    return (\n      <span title={event.fan.map((x) => x.label).join(\"\\n\")}>\n        <Trans>{event.fan[0].label}</Trans>\n        <br />\n        <Trans>{event.fan[1].label}</Trans>\n      </span>\n    );\n  }\n  return <span title={event.fan.map((x) => x.label).join(\"\\n\")}>{FanStatEntryList.formatFanSummary(event.fan)}</span>;\n}\n\nconst COLUMN_EVENTINFO = makeColumn(() => (\n  <Column dataKey=\"event\" label={<Trans>类型</Trans>} cellRenderer={buildEventInfo} width={80} />\n))();\n\nfunction getEventPlayerId(rec: GameRecord) {\n  return (rec as GameRecordWithEvent).event.player;\n}\n\nexport default function RecentHighlight() {\n  const { t } = useTranslation();\n  const provider = useMemo(() => DataProvider.createHightlight(), []);\n  return (\n    <>\n      <Helmet title={t(\"最近役满\")} />\n      <DataAdapterProviderCustom provider={provider}>\n        <GameRecordTable\n          withActivePlayer\n          alwaysShowDetailLink\n          columns={[COLUMN_GAMEMODE, COLUMN_EVENTINFO, COLUMN_PLAYERS(getEventPlayerId), COLUMN_FULLTIME]}\n        />\n      </DataAdapterProviderCustom>\n    </>\n  );\n}\n"],"sourceRoot":""}