{"version":3,"sources":["components/modeModel/model.tsx","components/modeModel/modelModeSelector.tsx","components/modeModel/index.tsx","components/routing/index.tsx","components/statistics/rankBySeats.tsx","components/statistics/dataByRank.tsx","components/statistics/index.tsx"],"names":["DEFAULT_MODEL","selectedMode","ModelContext","React","createContext","useModel","useContext","ModelModeProvider","children","useReducer","oldModel","newProps","model","updateModel","value","useMemo","Provider","ModelModeSelector","setModeId","useCallback","modeId","className","mode","onChange","RouteDef","Error","ViewRoutes","Context","NavButtons","routes","match","useRouteMatch","path","map","route","key","to","activeClassName","title","ViewSwitch","defaultPath","SimpleRoutedSubViews","props","x","slice","SEAT_LABELS","CELLS","color","index","fill","fillOpacity","formatLabel","rate","label","Chart","rates","aspect","items","width","height","isAnimationActive","data","nameKey","dataKey","formatter","formatPercent","position","HEADERS","ROUTES","useAsyncFactory","getRankRateBySeat","getGlobalStatistics","modeData","Object","entries","sort","a","b","localeCompare","levelId","levelData","Level","parseInt","getTag","basic","rank_rates","i","negative_rate","extended","和牌率","放铳率","副露率","立直率","自摸率","流局率","流听率","count","num_players","Routes"],"mappings":"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","file":"static/js/8.f0ba5abc.chunk.js","sourcesContent":["import React, { useReducer, useContext, ReactChild } from \"react\";\nimport { useMemo } from \"react\";\n\nexport interface Model {\n  selectedMode: string;\n}\n\ntype ModelUpdate = Partial<Model>;\ntype DispatchModelUpdate = (props: ModelUpdate) => void;\n\nconst DEFAULT_MODEL: Model = { selectedMode: \"\" };\nconst ModelContext = React.createContext<[Readonly<Model>, DispatchModelUpdate]>([{ ...DEFAULT_MODEL }, () => {}]);\nexport const useModel = () => useContext(ModelContext);\n\nexport function ModelModeProvider({ children }: { children: ReactChild | ReactChild[] }) {\n  const [model, updateModel] = useReducer(\n    (oldModel: Model, newProps: ModelUpdate): Model => ({\n      ...oldModel,\n      ...newProps\n    }),\n    null,\n    (): Model => ({\n      ...DEFAULT_MODEL\n    })\n  );\n  const value: [Model, DispatchModelUpdate] = useMemo(() => [model, updateModel], [model, updateModel]);\n  return <ModelContext.Provider value={value}>{children}</ModelContext.Provider>;\n}\n","import React from \"react\";\nimport { useCallback } from \"react\";\nimport { ModeSelector } from \"../gameRecords/modeSelector\";\nimport { useModel } from \"./model\";\n\nexport default function ModelModeSelector() {\n  const [model, updateModel] = useModel();\n  const setModeId = useCallback(modeId => updateModel({ selectedMode: modeId }), [updateModel]);\n  return (\n    <div className=\"row mb-3\">\n      <div className=\"col\">\n        <ModeSelector mode={model.selectedMode} onChange={setModeId} />\n      </div>\n    </div>\n  );\n}\n","export { ModelModeProvider, useModel } from \"./model\";\nexport { default as ModelModeSelector } from \"./modelModeSelector\";\n","import React from \"react\";\nimport { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useRouteMatch, Switch, Route, Redirect } from \"react-router\";\nimport { Helmet } from \"react-helmet\";\n\ntype RouteDefProps = { path: string; title: string; children: React.ReactChild | React.ReactChildren };\nexport const RouteDef: React.FunctionComponent<RouteDefProps> = () => {\n  throw new Error(\"Not intended for rendering\");\n};\n\ntype RoutesProps = { children: React.FunctionComponentElement<RouteDefProps>[] };\nexport const ViewRoutes: React.FunctionComponent<RoutesProps> = () => {\n  throw new Error(\"Not intended for rendering\");\n};\n\nconst Context = React.createContext<RouteDefProps[]>([]);\n\nexport function NavButtons() {\n  const routes = useContext(Context);\n  const match = useRouteMatch() || { path: \"\" };\n  return (\n    <nav className=\"nav nav-pills mb-3\">\n      {routes.map(route => (\n        <NavLink key={route.path} to={`${match.path}/${route.path}`} className=\"nav-link\" activeClassName=\"active\">\n          {route.title}\n        </NavLink>\n      ))}\n    </nav>\n  );\n}\n\nexport function ViewSwitch({\n  defaultPath,\n  children\n}: {\n  defaultPath?: string;\n  children?: React.ReactChild | React.ReactChildren;\n}) {\n  const routes = useContext(Context);\n  const match = useRouteMatch() || { path: \"\" };\n  return (\n    <Switch>\n      {routes.map(route => (\n        <Route key={route.path} path={`${match.path}/${route.path}`}>\n          <Helmet>\n            <title>{route.title}</title>\n          </Helmet>\n          {route.children}\n        </Route>\n      ))}\n      <Route>\n        <Redirect to={`${match.path}/${defaultPath || routes[0].path}`} />\n      </Route>\n      {children}\n    </Switch>\n  );\n}\n\nexport function SimpleRoutedSubViews({\n  children\n}: {\n  children: [React.FunctionComponentElement<RoutesProps>, ...(React.ReactChild | React.ReactChildren)[]];\n}) {\n  return <Context.Provider value={children[0].props.children.map(x => x.props)}>{children.slice(1)}</Context.Provider>;\n}\n","import React from \"react\";\nimport { ResponsiveContainer, PieChart, Pie, Cell, LabelList } from \"recharts\";\nimport { useAsyncFactory, formatPercent } from \"../../utils/index\";\nimport { getRankRateBySeat } from \"../../data/source/misc\";\nimport Loading from \"../misc/loading\";\nimport { useMemo } from \"react\";\nimport { useModel } from \"../modeModel\";\n\nconst SEAT_LABELS = \"东南西北\";\nconst SEAT_COLORS = [\"#003f5c\", \"#7a5195\", \"#ef5675\", \"#ffa600\"];\n\nconst generateCells = (activeIndex: number) =>\n  SEAT_COLORS.map((color, index) => (\n    <Cell fill={color} fillOpacity={activeIndex === index ? 1 : 1} key={`cell-${index}`} />\n  ));\n\nconst CELLS = generateCells(-1);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst formatLabel = (x: any) => (x.rate > 0 ? x.label : null);\n\nfunction Chart({ rates, aspect = 1 }: { rates: [number, number, number, number]; aspect?: number }) {\n  const items = useMemo(\n    () =>\n      rates.map((x, index) => ({\n        rate: x,\n        label: SEAT_LABELS[index]\n      })),\n    [rates]\n  );\n  return (\n    <ResponsiveContainer width=\"100%\" aspect={aspect} height=\"auto\">\n      <PieChart>\n        <Pie isAnimationActive={false} data={items} nameKey=\"label\" dataKey=\"rate\" label={formatLabel}>\n          {CELLS}\n          <LabelList dataKey=\"rate\" formatter={formatPercent} position=\"inside\" fill=\"#fff\" />\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default function RankBySeats() {\n  const data = useAsyncFactory(getRankRateBySeat, []);\n  const [model] = useModel();\n  if (!data) {\n    return <Loading />;\n  }\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <h3 className=\"text-center\">坐席吃一率</h3>\n          <Chart rates={data[model.selectedMode || \"0\"][1]} />\n        </div>\n        <div className=\"col-lg-6\">\n          <h3 className=\"text-center\">坐席吃四率</h3>\n          <Chart rates={data[model.selectedMode || \"0\"][4]} />\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { useAsyncFactory, formatPercent } from \"../../utils/index\";\nimport { getGlobalStatistics } from \"../../data/source/misc\";\nimport Loading from \"../misc/loading\";\nimport { useModel } from \"../modeModel/model\";\nimport { Level } from \"../../data/types/level\";\n\nconst HEADERS = [\n  \"等级\",\n  \"一位率\",\n  \"二位率\",\n  \"三位率\",\n  \"四位率\",\n  \"被飞率\",\n  \"和牌率\",\n  \"放铳率\",\n  \"副露率\",\n  \"立直率\",\n  \"自摸率\",\n  \"流局率\",\n  \"流听率\",\n  \"对战数\",\n  \"在位记录\"\n];\n\nexport default function DataByRank() {\n  const data = useAsyncFactory(getGlobalStatistics, []);\n  const [model] = useModel();\n  if (!data) {\n    return <Loading />;\n  }\n  const modeData = Object.entries(data[model.selectedMode || \"0\"]);\n  modeData.sort((a, b) => a[0].localeCompare(b[0]));\n\n  return (\n    <table className=\"table table-responsive-xl table-striped table-sm table-hover text-center\">\n      <thead className=\"vertical-table-header\">\n        <tr>\n          {HEADERS.map(x => (\n            <th key={x}>\n              <div>{x}</div>\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {modeData.map(([levelId, levelData]) => (\n          <tr key={levelId}>\n            <td>{new Level(parseInt(levelId)).getTag()}</td>\n            {levelData.basic.rank_rates.map((x, i) => (\n              <td key={i}>{formatPercent(x)}</td>\n            ))}\n            <td>{formatPercent(levelData.basic.negative_rate)}</td>\n            <td>{formatPercent(levelData.extended.和牌率)}</td>\n            <td>{formatPercent(levelData.extended.放铳率)}</td>\n            <td>{formatPercent(levelData.extended.副露率)}</td>\n            <td>{formatPercent(levelData.extended.立直率)}</td>\n            <td>{formatPercent(levelData.extended.自摸率)}</td>\n            <td>{formatPercent(levelData.extended.流局率)}</td>\n            <td>{formatPercent(levelData.extended.流听率)}</td>\n            <td>{levelData.basic.count}</td>\n            <td>{levelData.num_players}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","import React from \"react\";\n\nimport { ModelModeProvider, ModelModeSelector } from \"../modeModel\";\nimport { ViewRoutes, SimpleRoutedSubViews, NavButtons, RouteDef } from \"../routing\";\nimport { ViewSwitch } from \"../routing/index\";\n\nimport RankBySeats from \"./rankBySeats\";\nimport DataByRank from \"./dataByRank\";\n\nconst ROUTES = (\n  <ViewRoutes>\n    <RouteDef path=\"rank-by-seat\" title=\"坐席顺位\">\n      <RankBySeats />\n    </RouteDef>\n    <RouteDef path=\"data-by-rank\" title=\"等级数据\">\n      <DataByRank />\n    </RouteDef>\n  </ViewRoutes>\n);\n\nexport default function Routes() {\n  return (\n    <SimpleRoutedSubViews>\n      {ROUTES}\n      <ModelModeProvider>\n        <NavButtons />\n        <ModelModeSelector />\n        <ViewSwitch />\n      </ModelModeProvider>\n    </SimpleRoutedSubViews>\n  );\n}\n"],"sourceRoot":""}